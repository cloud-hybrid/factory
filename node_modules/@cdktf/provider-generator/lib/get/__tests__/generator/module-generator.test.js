"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const os = __importStar(require("os"));
const path = __importStar(require("path"));
const constructs_maker_1 = require("../../constructs-maker");
const config_1 = require("../../../config");
const util_1 = require("../util");
test("generate some modules", async () => {
    jest.setTimeout(120000);
    const workdir = fs.mkdtempSync(path.join(os.tmpdir(), "module-generator.test"));
    const constraint = new config_1.TerraformModuleConstraint("terraform-aws-modules/eks/aws@7.0.1");
    const maker = new constructs_maker_1.ConstructsMaker({ codeMakerOutput: workdir, targetLanguage: constructs_maker_1.Language.TYPESCRIPT }, [constraint]);
    await maker.generate();
    const output = fs.readFileSync(path.join(workdir, "modules/terraform-aws-modules/aws/eks.ts"), "utf-8");
    expect(output).toMatchSnapshot();
});
util_1.expectModuleToMatchSnapshot("no module outputs", "generator", [
    "module-no-outputs.test.fixture.tf",
]);
util_1.expectModuleToMatchSnapshot("typeless variables", "generator", [
    "module-no-variable-type.test.fixture.tf",
]);
util_1.expectModuleToMatchSnapshot("no newline", "generator", [
    "module-no-newline-1.test.fixture.tf",
    "module-no-newline-2.test.fixture.tf",
]);
test("generate multiple aws modules", async () => {
    jest.setTimeout(120000);
    const workdir = fs.mkdtempSync(path.join(os.tmpdir(), "module-generator-aws.test"));
    const constraints = [
        new config_1.TerraformModuleConstraint("terraform-aws-modules/vpc/aws@2.78.0"),
        new config_1.TerraformModuleConstraint("terraform-aws-modules/rds-aurora/aws@4.1.0"),
    ];
    const maker = new constructs_maker_1.ConstructsMaker({ codeMakerOutput: workdir, targetLanguage: constructs_maker_1.Language.TYPESCRIPT }, constraints);
    await maker.generate();
    const vpcOutput = fs.readFileSync(path.join(workdir, "modules/terraform-aws-modules/aws/vpc.ts"), "utf-8");
    expect(vpcOutput).toMatchSnapshot();
    const rdsOutput = fs.readFileSync(path.join(workdir, "modules/terraform-aws-modules/aws/rds-aurora.ts"), "utf-8");
    expect(rdsOutput).toMatchSnapshot();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLWdlbmVyYXRvci50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLWdlbmVyYXRvci50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUF5QjtBQUN6Qix1Q0FBeUI7QUFDekIsMkNBQTZCO0FBQzdCLDZEQUFtRTtBQUNuRSw0Q0FBNEQ7QUFDNUQsa0NBQXNEO0FBRXRELElBQUksQ0FBQyx1QkFBdUIsRUFBRSxLQUFLLElBQUksRUFBRTtJQUN2QyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXhCLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLHVCQUF1QixDQUFDLENBQ2hELENBQUM7SUFDRixNQUFNLFVBQVUsR0FBRyxJQUFJLGtDQUF5QixDQUM5QyxxQ0FBcUMsQ0FDdEMsQ0FBQztJQUVGLE1BQU0sS0FBSyxHQUFHLElBQUksa0NBQWUsQ0FDL0IsRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSwyQkFBUSxDQUFDLFVBQVUsRUFBRSxFQUNqRSxDQUFDLFVBQVUsQ0FBQyxDQUNiLENBQUM7SUFDRixNQUFNLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUV2QixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsWUFBWSxDQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSwwQ0FBMEMsQ0FBQyxFQUM5RCxPQUFPLENBQ1IsQ0FBQztJQUNGLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUNuQyxDQUFDLENBQUMsQ0FBQztBQUVILGtDQUEyQixDQUFDLG1CQUFtQixFQUFFLFdBQVcsRUFBRTtJQUM1RCxtQ0FBbUM7Q0FDcEMsQ0FBQyxDQUFDO0FBRUgsa0NBQTJCLENBQUMsb0JBQW9CLEVBQUUsV0FBVyxFQUFFO0lBQzdELHlDQUF5QztDQUMxQyxDQUFDLENBQUM7QUFFSCxrQ0FBMkIsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFO0lBQ3JELHFDQUFxQztJQUNyQyxxQ0FBcUM7Q0FDdEMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLCtCQUErQixFQUFFLEtBQUssSUFBSSxFQUFFO0lBQy9DLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFeEIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsMkJBQTJCLENBQUMsQ0FDcEQsQ0FBQztJQUNGLE1BQU0sV0FBVyxHQUFHO1FBQ2xCLElBQUksa0NBQXlCLENBQUMsc0NBQXNDLENBQUM7UUFDckUsSUFBSSxrQ0FBeUIsQ0FBQyw0Q0FBNEMsQ0FBQztLQUM1RSxDQUFDO0lBRUYsTUFBTSxLQUFLLEdBQUcsSUFBSSxrQ0FBZSxDQUMvQixFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFLDJCQUFRLENBQUMsVUFBVSxFQUFFLEVBQ2pFLFdBQVcsQ0FDWixDQUFDO0lBQ0YsTUFBTSxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFFdkIsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsMENBQTBDLENBQUMsRUFDOUQsT0FBTyxDQUNSLENBQUM7SUFDRixNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7SUFFcEMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsaURBQWlELENBQUMsRUFDckUsT0FBTyxDQUNSLENBQUM7SUFDRixNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDdEMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCAqIGFzIG9zIGZyb20gXCJvc1wiO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgQ29uc3RydWN0c01ha2VyLCBMYW5ndWFnZSB9IGZyb20gXCIuLi8uLi9jb25zdHJ1Y3RzLW1ha2VyXCI7XG5pbXBvcnQgeyBUZXJyYWZvcm1Nb2R1bGVDb25zdHJhaW50IH0gZnJvbSBcIi4uLy4uLy4uL2NvbmZpZ1wiO1xuaW1wb3J0IHsgZXhwZWN0TW9kdWxlVG9NYXRjaFNuYXBzaG90IH0gZnJvbSBcIi4uL3V0aWxcIjtcblxudGVzdChcImdlbmVyYXRlIHNvbWUgbW9kdWxlc1wiLCBhc3luYyAoKSA9PiB7XG4gIGplc3Quc2V0VGltZW91dCgxMjAwMDApO1xuXG4gIGNvbnN0IHdvcmtkaXIgPSBmcy5ta2R0ZW1wU3luYyhcbiAgICBwYXRoLmpvaW4ob3MudG1wZGlyKCksIFwibW9kdWxlLWdlbmVyYXRvci50ZXN0XCIpXG4gICk7XG4gIGNvbnN0IGNvbnN0cmFpbnQgPSBuZXcgVGVycmFmb3JtTW9kdWxlQ29uc3RyYWludChcbiAgICBcInRlcnJhZm9ybS1hd3MtbW9kdWxlcy9la3MvYXdzQDcuMC4xXCJcbiAgKTtcblxuICBjb25zdCBtYWtlciA9IG5ldyBDb25zdHJ1Y3RzTWFrZXIoXG4gICAgeyBjb2RlTWFrZXJPdXRwdXQ6IHdvcmtkaXIsIHRhcmdldExhbmd1YWdlOiBMYW5ndWFnZS5UWVBFU0NSSVBUIH0sXG4gICAgW2NvbnN0cmFpbnRdXG4gICk7XG4gIGF3YWl0IG1ha2VyLmdlbmVyYXRlKCk7XG5cbiAgY29uc3Qgb3V0cHV0ID0gZnMucmVhZEZpbGVTeW5jKFxuICAgIHBhdGguam9pbih3b3JrZGlyLCBcIm1vZHVsZXMvdGVycmFmb3JtLWF3cy1tb2R1bGVzL2F3cy9la3MudHNcIiksXG4gICAgXCJ1dGYtOFwiXG4gICk7XG4gIGV4cGVjdChvdXRwdXQpLnRvTWF0Y2hTbmFwc2hvdCgpO1xufSk7XG5cbmV4cGVjdE1vZHVsZVRvTWF0Y2hTbmFwc2hvdChcIm5vIG1vZHVsZSBvdXRwdXRzXCIsIFwiZ2VuZXJhdG9yXCIsIFtcbiAgXCJtb2R1bGUtbm8tb3V0cHV0cy50ZXN0LmZpeHR1cmUudGZcIixcbl0pO1xuXG5leHBlY3RNb2R1bGVUb01hdGNoU25hcHNob3QoXCJ0eXBlbGVzcyB2YXJpYWJsZXNcIiwgXCJnZW5lcmF0b3JcIiwgW1xuICBcIm1vZHVsZS1uby12YXJpYWJsZS10eXBlLnRlc3QuZml4dHVyZS50ZlwiLFxuXSk7XG5cbmV4cGVjdE1vZHVsZVRvTWF0Y2hTbmFwc2hvdChcIm5vIG5ld2xpbmVcIiwgXCJnZW5lcmF0b3JcIiwgW1xuICBcIm1vZHVsZS1uby1uZXdsaW5lLTEudGVzdC5maXh0dXJlLnRmXCIsXG4gIFwibW9kdWxlLW5vLW5ld2xpbmUtMi50ZXN0LmZpeHR1cmUudGZcIixcbl0pO1xuXG50ZXN0KFwiZ2VuZXJhdGUgbXVsdGlwbGUgYXdzIG1vZHVsZXNcIiwgYXN5bmMgKCkgPT4ge1xuICBqZXN0LnNldFRpbWVvdXQoMTIwMDAwKTtcblxuICBjb25zdCB3b3JrZGlyID0gZnMubWtkdGVtcFN5bmMoXG4gICAgcGF0aC5qb2luKG9zLnRtcGRpcigpLCBcIm1vZHVsZS1nZW5lcmF0b3ItYXdzLnRlc3RcIilcbiAgKTtcbiAgY29uc3QgY29uc3RyYWludHMgPSBbXG4gICAgbmV3IFRlcnJhZm9ybU1vZHVsZUNvbnN0cmFpbnQoXCJ0ZXJyYWZvcm0tYXdzLW1vZHVsZXMvdnBjL2F3c0AyLjc4LjBcIiksXG4gICAgbmV3IFRlcnJhZm9ybU1vZHVsZUNvbnN0cmFpbnQoXCJ0ZXJyYWZvcm0tYXdzLW1vZHVsZXMvcmRzLWF1cm9yYS9hd3NANC4xLjBcIiksXG4gIF07XG5cbiAgY29uc3QgbWFrZXIgPSBuZXcgQ29uc3RydWN0c01ha2VyKFxuICAgIHsgY29kZU1ha2VyT3V0cHV0OiB3b3JrZGlyLCB0YXJnZXRMYW5ndWFnZTogTGFuZ3VhZ2UuVFlQRVNDUklQVCB9LFxuICAgIGNvbnN0cmFpbnRzXG4gICk7XG4gIGF3YWl0IG1ha2VyLmdlbmVyYXRlKCk7XG5cbiAgY29uc3QgdnBjT3V0cHV0ID0gZnMucmVhZEZpbGVTeW5jKFxuICAgIHBhdGguam9pbih3b3JrZGlyLCBcIm1vZHVsZXMvdGVycmFmb3JtLWF3cy1tb2R1bGVzL2F3cy92cGMudHNcIiksXG4gICAgXCJ1dGYtOFwiXG4gICk7XG4gIGV4cGVjdCh2cGNPdXRwdXQpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuXG4gIGNvbnN0IHJkc091dHB1dCA9IGZzLnJlYWRGaWxlU3luYyhcbiAgICBwYXRoLmpvaW4od29ya2RpciwgXCJtb2R1bGVzL3RlcnJhZm9ybS1hd3MtbW9kdWxlcy9hd3MvcmRzLWF1cm9yYS50c1wiKSxcbiAgICBcInV0Zi04XCJcbiAgKTtcbiAgZXhwZWN0KHJkc091dHB1dCkudG9NYXRjaFNuYXBzaG90KCk7XG59KTtcbiJdfQ==
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Glue.
 *
 * @stability stable
 */
export interface GlueCatalogTableConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#catalog_id GlueCatalogTable#catalog_id}.
     *
     * @stability stable
     */
    readonly catalogId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#database_name GlueCatalogTable#database_name}.
     *
     * @stability stable
     */
    readonly databaseName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#description GlueCatalogTable#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#name GlueCatalogTable#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#owner GlueCatalogTable#owner}.
     *
     * @stability stable
     */
    readonly owner?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#parameters GlueCatalogTable#parameters}.
     *
     * @stability stable
     */
    readonly parameters?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#retention GlueCatalogTable#retention}.
     *
     * @stability stable
     */
    readonly retention?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#table_type GlueCatalogTable#table_type}.
     *
     * @stability stable
     */
    readonly tableType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#view_expanded_text GlueCatalogTable#view_expanded_text}.
     *
     * @stability stable
     */
    readonly viewExpandedText?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#view_original_text GlueCatalogTable#view_original_text}.
     *
     * @stability stable
     */
    readonly viewOriginalText?: string;
    /**
     * partition_index block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#partition_index GlueCatalogTable#partition_index}
     *
     * @stability stable
     */
    readonly partitionIndex?: GlueCatalogTablePartitionIndex[];
    /**
     * partition_keys block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#partition_keys GlueCatalogTable#partition_keys}
     *
     * @stability stable
     */
    readonly partitionKeys?: GlueCatalogTablePartitionKeys[];
    /**
     * storage_descriptor block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#storage_descriptor GlueCatalogTable#storage_descriptor}
     *
     * @stability stable
     */
    readonly storageDescriptor?: GlueCatalogTableStorageDescriptor;
    /**
     * target_table block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#target_table GlueCatalogTable#target_table}
     *
     * @stability stable
     */
    readonly targetTable?: GlueCatalogTableTargetTable;
}
/**
 * @stability stable
 */
export interface GlueCatalogTablePartitionIndex {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#index_name GlueCatalogTable#index_name}.
     *
     * @stability stable
     */
    readonly indexName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#keys GlueCatalogTable#keys}.
     *
     * @stability stable
     */
    readonly keys: string[];
}
export declare function glueCatalogTablePartitionIndexToTerraform(struct?: GlueCatalogTablePartitionIndex): any;
/**
 * @stability stable
 */
export interface GlueCatalogTablePartitionKeys {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#comment GlueCatalogTable#comment}.
     *
     * @stability stable
     */
    readonly comment?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#name GlueCatalogTable#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#type GlueCatalogTable#type}.
     *
     * @stability stable
     */
    readonly type?: string;
}
export declare function glueCatalogTablePartitionKeysToTerraform(struct?: GlueCatalogTablePartitionKeys): any;
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorColumns {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#comment GlueCatalogTable#comment}.
     *
     * @stability stable
     */
    readonly comment?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#name GlueCatalogTable#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#parameters GlueCatalogTable#parameters}.
     *
     * @stability stable
     */
    readonly parameters?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#type GlueCatalogTable#type}.
     *
     * @stability stable
     */
    readonly type?: string;
}
export declare function glueCatalogTableStorageDescriptorColumnsToTerraform(struct?: GlueCatalogTableStorageDescriptorColumns): any;
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#registry_name GlueCatalogTable#registry_name}.
     *
     * @stability stable
     */
    readonly registryName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_arn GlueCatalogTable#schema_arn}.
     *
     * @stability stable
     */
    readonly schemaArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_name GlueCatalogTable#schema_name}.
     *
     * @stability stable
     */
    readonly schemaName?: string;
}
export declare function glueCatalogTableStorageDescriptorSchemaReferenceSchemaIdToTerraform(struct?: GlueCatalogTableStorageDescriptorSchemaReferenceSchemaIdOutputReference | GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableStorageDescriptorSchemaReferenceSchemaIdOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId | undefined);
    private _registryName?;
    /**
     * @stability stable
     */
    get registryName(): string;
    /**
     * @stability stable
     */
    set registryName(value: string);
    /**
     * @stability stable
     */
    resetRegistryName(): void;
    /**
     * @stability stable
     */
    get registryNameInput(): string | undefined;
    private _schemaArn?;
    /**
     * @stability stable
     */
    get schemaArn(): string;
    /**
     * @stability stable
     */
    set schemaArn(value: string);
    /**
     * @stability stable
     */
    resetSchemaArn(): void;
    /**
     * @stability stable
     */
    get schemaArnInput(): string | undefined;
    private _schemaName?;
    /**
     * @stability stable
     */
    get schemaName(): string;
    /**
     * @stability stable
     */
    set schemaName(value: string);
    /**
     * @stability stable
     */
    resetSchemaName(): void;
    /**
     * @stability stable
     */
    get schemaNameInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorSchemaReference {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_version_id GlueCatalogTable#schema_version_id}.
     *
     * @stability stable
     */
    readonly schemaVersionId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_version_number GlueCatalogTable#schema_version_number}.
     *
     * @stability stable
     */
    readonly schemaVersionNumber: number;
    /**
     * schema_id block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_id GlueCatalogTable#schema_id}
     *
     * @stability stable
     */
    readonly schemaId?: GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId;
}
export declare function glueCatalogTableStorageDescriptorSchemaReferenceToTerraform(struct?: GlueCatalogTableStorageDescriptorSchemaReferenceOutputReference | GlueCatalogTableStorageDescriptorSchemaReference): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableStorageDescriptorSchemaReferenceOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableStorageDescriptorSchemaReference | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableStorageDescriptorSchemaReference | undefined);
    private _schemaVersionId?;
    /**
     * @stability stable
     */
    get schemaVersionId(): string;
    /**
     * @stability stable
     */
    set schemaVersionId(value: string);
    /**
     * @stability stable
     */
    resetSchemaVersionId(): void;
    /**
     * @stability stable
     */
    get schemaVersionIdInput(): string | undefined;
    private _schemaVersionNumber?;
    /**
     * @stability stable
     */
    get schemaVersionNumber(): number;
    /**
     * @stability stable
     */
    set schemaVersionNumber(value: number);
    /**
     * @stability stable
     */
    get schemaVersionNumberInput(): number | undefined;
    private _schemaId;
    /**
     * @stability stable
     */
    get schemaId(): GlueCatalogTableStorageDescriptorSchemaReferenceSchemaIdOutputReference;
    /**
     * @stability stable
     */
    putSchemaId(value: GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId): void;
    /**
     * @stability stable
     */
    resetSchemaId(): void;
    /**
     * @stability stable
     */
    get schemaIdInput(): GlueCatalogTableStorageDescriptorSchemaReferenceSchemaId | undefined;
}
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorSerDeInfo {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#name GlueCatalogTable#name}.
     *
     * @stability stable
     */
    readonly name?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#parameters GlueCatalogTable#parameters}.
     *
     * @stability stable
     */
    readonly parameters?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#serialization_library GlueCatalogTable#serialization_library}.
     *
     * @stability stable
     */
    readonly serializationLibrary?: string;
}
export declare function glueCatalogTableStorageDescriptorSerDeInfoToTerraform(struct?: GlueCatalogTableStorageDescriptorSerDeInfoOutputReference | GlueCatalogTableStorageDescriptorSerDeInfo): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableStorageDescriptorSerDeInfoOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableStorageDescriptorSerDeInfo | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableStorageDescriptorSerDeInfo | undefined);
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    resetName(): void;
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _parameters?;
    /**
     * @stability stable
     */
    get parameters(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set parameters(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetParameters(): void;
    /**
     * @stability stable
     */
    get parametersInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _serializationLibrary?;
    /**
     * @stability stable
     */
    get serializationLibrary(): string;
    /**
     * @stability stable
     */
    set serializationLibrary(value: string);
    /**
     * @stability stable
     */
    resetSerializationLibrary(): void;
    /**
     * @stability stable
     */
    get serializationLibraryInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorSkewedInfo {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#skewed_column_names GlueCatalogTable#skewed_column_names}.
     *
     * @stability stable
     */
    readonly skewedColumnNames?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#skewed_column_value_location_maps GlueCatalogTable#skewed_column_value_location_maps}.
     *
     * @stability stable
     */
    readonly skewedColumnValueLocationMaps?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#skewed_column_values GlueCatalogTable#skewed_column_values}.
     *
     * @stability stable
     */
    readonly skewedColumnValues?: string[];
}
export declare function glueCatalogTableStorageDescriptorSkewedInfoToTerraform(struct?: GlueCatalogTableStorageDescriptorSkewedInfoOutputReference | GlueCatalogTableStorageDescriptorSkewedInfo): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableStorageDescriptorSkewedInfoOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableStorageDescriptorSkewedInfo | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableStorageDescriptorSkewedInfo | undefined);
    private _skewedColumnNames?;
    /**
     * @stability stable
     */
    get skewedColumnNames(): string[];
    /**
     * @stability stable
     */
    set skewedColumnNames(value: string[]);
    /**
     * @stability stable
     */
    resetSkewedColumnNames(): void;
    /**
     * @stability stable
     */
    get skewedColumnNamesInput(): string[] | undefined;
    private _skewedColumnValueLocationMaps?;
    /**
     * @stability stable
     */
    get skewedColumnValueLocationMaps(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set skewedColumnValueLocationMaps(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetSkewedColumnValueLocationMaps(): void;
    /**
     * @stability stable
     */
    get skewedColumnValueLocationMapsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _skewedColumnValues?;
    /**
     * @stability stable
     */
    get skewedColumnValues(): string[];
    /**
     * @stability stable
     */
    set skewedColumnValues(value: string[]);
    /**
     * @stability stable
     */
    resetSkewedColumnValues(): void;
    /**
     * @stability stable
     */
    get skewedColumnValuesInput(): string[] | undefined;
}
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptorSortColumns {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#column GlueCatalogTable#column}.
     *
     * @stability stable
     */
    readonly column: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#sort_order GlueCatalogTable#sort_order}.
     *
     * @stability stable
     */
    readonly sortOrder: number;
}
export declare function glueCatalogTableStorageDescriptorSortColumnsToTerraform(struct?: GlueCatalogTableStorageDescriptorSortColumns): any;
/**
 * @stability stable
 */
export interface GlueCatalogTableStorageDescriptor {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#bucket_columns GlueCatalogTable#bucket_columns}.
     *
     * @stability stable
     */
    readonly bucketColumns?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#compressed GlueCatalogTable#compressed}.
     *
     * @stability stable
     */
    readonly compressed?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#input_format GlueCatalogTable#input_format}.
     *
     * @stability stable
     */
    readonly inputFormat?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#location GlueCatalogTable#location}.
     *
     * @stability stable
     */
    readonly location?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#number_of_buckets GlueCatalogTable#number_of_buckets}.
     *
     * @stability stable
     */
    readonly numberOfBuckets?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#output_format GlueCatalogTable#output_format}.
     *
     * @stability stable
     */
    readonly outputFormat?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#parameters GlueCatalogTable#parameters}.
     *
     * @stability stable
     */
    readonly parameters?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#stored_as_sub_directories GlueCatalogTable#stored_as_sub_directories}.
     *
     * @stability stable
     */
    readonly storedAsSubDirectories?: boolean | cdktf.IResolvable;
    /**
     * columns block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#columns GlueCatalogTable#columns}
     *
     * @stability stable
     */
    readonly columns?: GlueCatalogTableStorageDescriptorColumns[];
    /**
     * schema_reference block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#schema_reference GlueCatalogTable#schema_reference}
     *
     * @stability stable
     */
    readonly schemaReference?: GlueCatalogTableStorageDescriptorSchemaReference;
    /**
     * ser_de_info block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#ser_de_info GlueCatalogTable#ser_de_info}
     *
     * @stability stable
     */
    readonly serDeInfo?: GlueCatalogTableStorageDescriptorSerDeInfo;
    /**
     * skewed_info block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#skewed_info GlueCatalogTable#skewed_info}
     *
     * @stability stable
     */
    readonly skewedInfo?: GlueCatalogTableStorageDescriptorSkewedInfo;
    /**
     * sort_columns block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#sort_columns GlueCatalogTable#sort_columns}
     *
     * @stability stable
     */
    readonly sortColumns?: GlueCatalogTableStorageDescriptorSortColumns[];
}
export declare function glueCatalogTableStorageDescriptorToTerraform(struct?: GlueCatalogTableStorageDescriptorOutputReference | GlueCatalogTableStorageDescriptor): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableStorageDescriptorOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableStorageDescriptor | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableStorageDescriptor | undefined);
    private _bucketColumns?;
    /**
     * @stability stable
     */
    get bucketColumns(): string[];
    /**
     * @stability stable
     */
    set bucketColumns(value: string[]);
    /**
     * @stability stable
     */
    resetBucketColumns(): void;
    /**
     * @stability stable
     */
    get bucketColumnsInput(): string[] | undefined;
    private _compressed?;
    /**
     * @stability stable
     */
    get compressed(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set compressed(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetCompressed(): void;
    /**
     * @stability stable
     */
    get compressedInput(): boolean | cdktf.IResolvable | undefined;
    private _inputFormat?;
    /**
     * @stability stable
     */
    get inputFormat(): string;
    /**
     * @stability stable
     */
    set inputFormat(value: string);
    /**
     * @stability stable
     */
    resetInputFormat(): void;
    /**
     * @stability stable
     */
    get inputFormatInput(): string | undefined;
    private _location?;
    /**
     * @stability stable
     */
    get location(): string;
    /**
     * @stability stable
     */
    set location(value: string);
    /**
     * @stability stable
     */
    resetLocation(): void;
    /**
     * @stability stable
     */
    get locationInput(): string | undefined;
    private _numberOfBuckets?;
    /**
     * @stability stable
     */
    get numberOfBuckets(): number;
    /**
     * @stability stable
     */
    set numberOfBuckets(value: number);
    /**
     * @stability stable
     */
    resetNumberOfBuckets(): void;
    /**
     * @stability stable
     */
    get numberOfBucketsInput(): number | undefined;
    private _outputFormat?;
    /**
     * @stability stable
     */
    get outputFormat(): string;
    /**
     * @stability stable
     */
    set outputFormat(value: string);
    /**
     * @stability stable
     */
    resetOutputFormat(): void;
    /**
     * @stability stable
     */
    get outputFormatInput(): string | undefined;
    private _parameters?;
    /**
     * @stability stable
     */
    get parameters(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set parameters(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetParameters(): void;
    /**
     * @stability stable
     */
    get parametersInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _storedAsSubDirectories?;
    /**
     * @stability stable
     */
    get storedAsSubDirectories(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set storedAsSubDirectories(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetStoredAsSubDirectories(): void;
    /**
     * @stability stable
     */
    get storedAsSubDirectoriesInput(): boolean | cdktf.IResolvable | undefined;
    private _columns?;
    /**
     * @stability stable
     */
    get columns(): GlueCatalogTableStorageDescriptorColumns[];
    /**
     * @stability stable
     */
    set columns(value: GlueCatalogTableStorageDescriptorColumns[]);
    /**
     * @stability stable
     */
    resetColumns(): void;
    /**
     * @stability stable
     */
    get columnsInput(): GlueCatalogTableStorageDescriptorColumns[] | undefined;
    private _schemaReference;
    /**
     * @stability stable
     */
    get schemaReference(): GlueCatalogTableStorageDescriptorSchemaReferenceOutputReference;
    /**
     * @stability stable
     */
    putSchemaReference(value: GlueCatalogTableStorageDescriptorSchemaReference): void;
    /**
     * @stability stable
     */
    resetSchemaReference(): void;
    /**
     * @stability stable
     */
    get schemaReferenceInput(): GlueCatalogTableStorageDescriptorSchemaReference | undefined;
    private _serDeInfo;
    /**
     * @stability stable
     */
    get serDeInfo(): GlueCatalogTableStorageDescriptorSerDeInfoOutputReference;
    /**
     * @stability stable
     */
    putSerDeInfo(value: GlueCatalogTableStorageDescriptorSerDeInfo): void;
    /**
     * @stability stable
     */
    resetSerDeInfo(): void;
    /**
     * @stability stable
     */
    get serDeInfoInput(): GlueCatalogTableStorageDescriptorSerDeInfo | undefined;
    private _skewedInfo;
    /**
     * @stability stable
     */
    get skewedInfo(): GlueCatalogTableStorageDescriptorSkewedInfoOutputReference;
    /**
     * @stability stable
     */
    putSkewedInfo(value: GlueCatalogTableStorageDescriptorSkewedInfo): void;
    /**
     * @stability stable
     */
    resetSkewedInfo(): void;
    /**
     * @stability stable
     */
    get skewedInfoInput(): GlueCatalogTableStorageDescriptorSkewedInfo | undefined;
    private _sortColumns?;
    /**
     * @stability stable
     */
    get sortColumns(): GlueCatalogTableStorageDescriptorSortColumns[];
    /**
     * @stability stable
     */
    set sortColumns(value: GlueCatalogTableStorageDescriptorSortColumns[]);
    /**
     * @stability stable
     */
    resetSortColumns(): void;
    /**
     * @stability stable
     */
    get sortColumnsInput(): GlueCatalogTableStorageDescriptorSortColumns[] | undefined;
}
/**
 * @stability stable
 */
export interface GlueCatalogTableTargetTable {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#catalog_id GlueCatalogTable#catalog_id}.
     *
     * @stability stable
     */
    readonly catalogId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#database_name GlueCatalogTable#database_name}.
     *
     * @stability stable
     */
    readonly databaseName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html#name GlueCatalogTable#name}.
     *
     * @stability stable
     */
    readonly name: string;
}
export declare function glueCatalogTableTargetTableToTerraform(struct?: GlueCatalogTableTargetTableOutputReference | GlueCatalogTableTargetTable): any;
/**
 * @stability stable
 */
export declare class GlueCatalogTableTargetTableOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): GlueCatalogTableTargetTable | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: GlueCatalogTableTargetTable | undefined);
    private _catalogId?;
    /**
     * @stability stable
     */
    get catalogId(): string;
    /**
     * @stability stable
     */
    set catalogId(value: string);
    /**
     * @stability stable
     */
    get catalogIdInput(): string | undefined;
    private _databaseName?;
    /**
     * @stability stable
     */
    get databaseName(): string;
    /**
     * @stability stable
     */
    set databaseName(value: string);
    /**
     * @stability stable
     */
    get databaseNameInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html aws_glue_catalog_table}.
 *
 * @stability stable
 */
export declare class GlueCatalogTable extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/glue_catalog_table.html aws_glue_catalog_table} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: GlueCatalogTableConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _catalogId?;
    /**
     * @stability stable
     */
    get catalogId(): string;
    /**
     * @stability stable
     */
    set catalogId(value: string);
    /**
     * @stability stable
     */
    resetCatalogId(): void;
    /**
     * @stability stable
     */
    get catalogIdInput(): string | undefined;
    private _databaseName?;
    /**
     * @stability stable
     */
    get databaseName(): string;
    /**
     * @stability stable
     */
    set databaseName(value: string);
    /**
     * @stability stable
     */
    get databaseNameInput(): string | undefined;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _owner?;
    /**
     * @stability stable
     */
    get owner(): string;
    /**
     * @stability stable
     */
    set owner(value: string);
    /**
     * @stability stable
     */
    resetOwner(): void;
    /**
     * @stability stable
     */
    get ownerInput(): string | undefined;
    private _parameters?;
    /**
     * @stability stable
     */
    get parameters(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set parameters(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetParameters(): void;
    /**
     * @stability stable
     */
    get parametersInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _retention?;
    /**
     * @stability stable
     */
    get retention(): number;
    /**
     * @stability stable
     */
    set retention(value: number);
    /**
     * @stability stable
     */
    resetRetention(): void;
    /**
     * @stability stable
     */
    get retentionInput(): number | undefined;
    private _tableType?;
    /**
     * @stability stable
     */
    get tableType(): string;
    /**
     * @stability stable
     */
    set tableType(value: string);
    /**
     * @stability stable
     */
    resetTableType(): void;
    /**
     * @stability stable
     */
    get tableTypeInput(): string | undefined;
    private _viewExpandedText?;
    /**
     * @stability stable
     */
    get viewExpandedText(): string;
    /**
     * @stability stable
     */
    set viewExpandedText(value: string);
    /**
     * @stability stable
     */
    resetViewExpandedText(): void;
    /**
     * @stability stable
     */
    get viewExpandedTextInput(): string | undefined;
    private _viewOriginalText?;
    /**
     * @stability stable
     */
    get viewOriginalText(): string;
    /**
     * @stability stable
     */
    set viewOriginalText(value: string);
    /**
     * @stability stable
     */
    resetViewOriginalText(): void;
    /**
     * @stability stable
     */
    get viewOriginalTextInput(): string | undefined;
    private _partitionIndex?;
    /**
     * @stability stable
     */
    get partitionIndex(): GlueCatalogTablePartitionIndex[];
    /**
     * @stability stable
     */
    set partitionIndex(value: GlueCatalogTablePartitionIndex[]);
    /**
     * @stability stable
     */
    resetPartitionIndex(): void;
    /**
     * @stability stable
     */
    get partitionIndexInput(): GlueCatalogTablePartitionIndex[] | undefined;
    private _partitionKeys?;
    /**
     * @stability stable
     */
    get partitionKeys(): GlueCatalogTablePartitionKeys[];
    /**
     * @stability stable
     */
    set partitionKeys(value: GlueCatalogTablePartitionKeys[]);
    /**
     * @stability stable
     */
    resetPartitionKeys(): void;
    /**
     * @stability stable
     */
    get partitionKeysInput(): GlueCatalogTablePartitionKeys[] | undefined;
    private _storageDescriptor;
    /**
     * @stability stable
     */
    get storageDescriptor(): GlueCatalogTableStorageDescriptorOutputReference;
    /**
     * @stability stable
     */
    putStorageDescriptor(value: GlueCatalogTableStorageDescriptor): void;
    /**
     * @stability stable
     */
    resetStorageDescriptor(): void;
    /**
     * @stability stable
     */
    get storageDescriptorInput(): GlueCatalogTableStorageDescriptor | undefined;
    private _targetTable;
    /**
     * @stability stable
     */
    get targetTable(): GlueCatalogTableTargetTableOutputReference;
    /**
     * @stability stable
     */
    putTargetTable(value: GlueCatalogTableTargetTable): void;
    /**
     * @stability stable
     */
    resetTargetTable(): void;
    /**
     * @stability stable
     */
    get targetTableInput(): GlueCatalogTableTargetTable | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Systems Manager.
 *
 * @stability stable
 */
export interface SsmAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#apply_only_at_cron_interval SsmAssociation#apply_only_at_cron_interval}.
     *
     * @stability stable
     */
    readonly applyOnlyAtCronInterval?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#association_name SsmAssociation#association_name}.
     *
     * @stability stable
     */
    readonly associationName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#automation_target_parameter_name SsmAssociation#automation_target_parameter_name}.
     *
     * @stability stable
     */
    readonly automationTargetParameterName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#compliance_severity SsmAssociation#compliance_severity}.
     *
     * @stability stable
     */
    readonly complianceSeverity?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#document_version SsmAssociation#document_version}.
     *
     * @stability stable
     */
    readonly documentVersion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#instance_id SsmAssociation#instance_id}.
     *
     * @stability stable
     */
    readonly instanceId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#max_concurrency SsmAssociation#max_concurrency}.
     *
     * @stability stable
     */
    readonly maxConcurrency?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#max_errors SsmAssociation#max_errors}.
     *
     * @stability stable
     */
    readonly maxErrors?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#name SsmAssociation#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#parameters SsmAssociation#parameters}.
     *
     * @stability stable
     */
    readonly parameters?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#schedule_expression SsmAssociation#schedule_expression}.
     *
     * @stability stable
     */
    readonly scheduleExpression?: string;
    /**
     * output_location block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#output_location SsmAssociation#output_location}
     *
     * @stability stable
     */
    readonly outputLocation?: SsmAssociationOutputLocation;
    /**
     * targets block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#targets SsmAssociation#targets}
     *
     * @stability stable
     */
    readonly targets?: SsmAssociationTargets[];
}
/**
 * @stability stable
 */
export interface SsmAssociationOutputLocation {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#s3_bucket_name SsmAssociation#s3_bucket_name}.
     *
     * @stability stable
     */
    readonly s3BucketName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#s3_key_prefix SsmAssociation#s3_key_prefix}.
     *
     * @stability stable
     */
    readonly s3KeyPrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#s3_region SsmAssociation#s3_region}.
     *
     * @stability stable
     */
    readonly s3Region?: string;
}
export declare function ssmAssociationOutputLocationToTerraform(struct?: SsmAssociationOutputLocationOutputReference | SsmAssociationOutputLocation): any;
/**
 * @stability stable
 */
export declare class SsmAssociationOutputLocationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SsmAssociationOutputLocation | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SsmAssociationOutputLocation | undefined);
    private _s3BucketName?;
    /**
     * @stability stable
     */
    get s3BucketName(): string;
    /**
     * @stability stable
     */
    set s3BucketName(value: string);
    /**
     * @stability stable
     */
    get s3BucketNameInput(): string | undefined;
    private _s3KeyPrefix?;
    /**
     * @stability stable
     */
    get s3KeyPrefix(): string;
    /**
     * @stability stable
     */
    set s3KeyPrefix(value: string);
    /**
     * @stability stable
     */
    resetS3KeyPrefix(): void;
    /**
     * @stability stable
     */
    get s3KeyPrefixInput(): string | undefined;
    private _s3Region?;
    /**
     * @stability stable
     */
    get s3Region(): string;
    /**
     * @stability stable
     */
    set s3Region(value: string);
    /**
     * @stability stable
     */
    resetS3Region(): void;
    /**
     * @stability stable
     */
    get s3RegionInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface SsmAssociationTargets {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#key SsmAssociation#key}.
     *
     * @stability stable
     */
    readonly key: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html#values SsmAssociation#values}.
     *
     * @stability stable
     */
    readonly values: string[];
}
export declare function ssmAssociationTargetsToTerraform(struct?: SsmAssociationTargets): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html aws_ssm_association}.
 *
 * @stability stable
 */
export declare class SsmAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ssm_association.html aws_ssm_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: SsmAssociationConfig);
    private _applyOnlyAtCronInterval?;
    /**
     * @stability stable
     */
    get applyOnlyAtCronInterval(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set applyOnlyAtCronInterval(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetApplyOnlyAtCronInterval(): void;
    /**
     * @stability stable
     */
    get applyOnlyAtCronIntervalInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get associationId(): string;
    private _associationName?;
    /**
     * @stability stable
     */
    get associationName(): string;
    /**
     * @stability stable
     */
    set associationName(value: string);
    /**
     * @stability stable
     */
    resetAssociationName(): void;
    /**
     * @stability stable
     */
    get associationNameInput(): string | undefined;
    private _automationTargetParameterName?;
    /**
     * @stability stable
     */
    get automationTargetParameterName(): string;
    /**
     * @stability stable
     */
    set automationTargetParameterName(value: string);
    /**
     * @stability stable
     */
    resetAutomationTargetParameterName(): void;
    /**
     * @stability stable
     */
    get automationTargetParameterNameInput(): string | undefined;
    private _complianceSeverity?;
    /**
     * @stability stable
     */
    get complianceSeverity(): string;
    /**
     * @stability stable
     */
    set complianceSeverity(value: string);
    /**
     * @stability stable
     */
    resetComplianceSeverity(): void;
    /**
     * @stability stable
     */
    get complianceSeverityInput(): string | undefined;
    private _documentVersion?;
    /**
     * @stability stable
     */
    get documentVersion(): string;
    /**
     * @stability stable
     */
    set documentVersion(value: string);
    /**
     * @stability stable
     */
    resetDocumentVersion(): void;
    /**
     * @stability stable
     */
    get documentVersionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instanceId?;
    /**
     * @stability stable
     */
    get instanceId(): string;
    /**
     * @stability stable
     */
    set instanceId(value: string);
    /**
     * @stability stable
     */
    resetInstanceId(): void;
    /**
     * @stability stable
     */
    get instanceIdInput(): string | undefined;
    private _maxConcurrency?;
    /**
     * @stability stable
     */
    get maxConcurrency(): string;
    /**
     * @stability stable
     */
    set maxConcurrency(value: string);
    /**
     * @stability stable
     */
    resetMaxConcurrency(): void;
    /**
     * @stability stable
     */
    get maxConcurrencyInput(): string | undefined;
    private _maxErrors?;
    /**
     * @stability stable
     */
    get maxErrors(): string;
    /**
     * @stability stable
     */
    set maxErrors(value: string);
    /**
     * @stability stable
     */
    resetMaxErrors(): void;
    /**
     * @stability stable
     */
    get maxErrorsInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _parameters?;
    /**
     * @stability stable
     */
    get parameters(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set parameters(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetParameters(): void;
    /**
     * @stability stable
     */
    get parametersInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _scheduleExpression?;
    /**
     * @stability stable
     */
    get scheduleExpression(): string;
    /**
     * @stability stable
     */
    set scheduleExpression(value: string);
    /**
     * @stability stable
     */
    resetScheduleExpression(): void;
    /**
     * @stability stable
     */
    get scheduleExpressionInput(): string | undefined;
    private _outputLocation;
    /**
     * @stability stable
     */
    get outputLocation(): SsmAssociationOutputLocationOutputReference;
    /**
     * @stability stable
     */
    putOutputLocation(value: SsmAssociationOutputLocation): void;
    /**
     * @stability stable
     */
    resetOutputLocation(): void;
    /**
     * @stability stable
     */
    get outputLocationInput(): SsmAssociationOutputLocation | undefined;
    private _targets?;
    /**
     * @stability stable
     */
    get targets(): SsmAssociationTargets[];
    /**
     * @stability stable
     */
    set targets(value: SsmAssociationTargets[]);
    /**
     * @stability stable
     */
    resetTargets(): void;
    /**
     * @stability stable
     */
    get targetsInput(): SsmAssociationTargets[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

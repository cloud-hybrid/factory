import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Systems Manager.
 *
 * @stability stable
 */
export interface DataAwsSsmParametersByPathConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/ssm_parameters_by_path.html#path DataAwsSsmParametersByPath#path}.
     *
     * @stability stable
     */
    readonly path: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/ssm_parameters_by_path.html#with_decryption DataAwsSsmParametersByPath#with_decryption}.
     *
     * @stability stable
     */
    readonly withDecryption?: boolean | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/ssm_parameters_by_path.html aws_ssm_parameters_by_path}.
 *
 * @stability stable
 */
export declare class DataAwsSsmParametersByPath extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/ssm_parameters_by_path.html aws_ssm_parameters_by_path} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DataAwsSsmParametersByPathConfig);
    /**
     * @stability stable
     */
    get arns(): string[];
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get names(): string[];
    private _path?;
    /**
     * @stability stable
     */
    get path(): string;
    /**
     * @stability stable
     */
    set path(value: string);
    /**
     * @stability stable
     */
    get pathInput(): string | undefined;
    /**
     * @stability stable
     */
    get types(): string[];
    /**
     * @stability stable
     */
    get values(): string[];
    private _withDecryption?;
    /**
     * @stability stable
     */
    get withDecryption(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set withDecryption(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetWithDecryption(): void;
    /**
     * @stability stable
     */
    get withDecryptionInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

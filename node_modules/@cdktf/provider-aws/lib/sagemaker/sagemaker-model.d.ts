import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS SageMaker.
 *
 * @stability stable
 */
export interface SagemakerModelConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#enable_network_isolation SagemakerModel#enable_network_isolation}.
     *
     * @stability stable
     */
    readonly enableNetworkIsolation?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#execution_role_arn SagemakerModel#execution_role_arn}.
     *
     * @stability stable
     */
    readonly executionRoleArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#name SagemakerModel#name}.
     *
     * @stability stable
     */
    readonly name?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#tags SagemakerModel#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#tags_all SagemakerModel#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * container block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#container SagemakerModel#container}
     *
     * @stability stable
     */
    readonly container?: SagemakerModelContainer[];
    /**
     * inference_execution_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#inference_execution_config SagemakerModel#inference_execution_config}
     *
     * @stability stable
     */
    readonly inferenceExecutionConfig?: SagemakerModelInferenceExecutionConfig;
    /**
     * primary_container block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#primary_container SagemakerModel#primary_container}
     *
     * @stability stable
     */
    readonly primaryContainer?: SagemakerModelPrimaryContainer;
    /**
     * vpc_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#vpc_config SagemakerModel#vpc_config}
     *
     * @stability stable
     */
    readonly vpcConfig?: SagemakerModelVpcConfig;
}
/**
 * @stability stable
 */
export interface SagemakerModelContainerImageConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#repository_access_mode SagemakerModel#repository_access_mode}.
     *
     * @stability stable
     */
    readonly repositoryAccessMode: string;
}
export declare function sagemakerModelContainerImageConfigToTerraform(struct?: SagemakerModelContainerImageConfigOutputReference | SagemakerModelContainerImageConfig): any;
/**
 * @stability stable
 */
export declare class SagemakerModelContainerImageConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SagemakerModelContainerImageConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SagemakerModelContainerImageConfig | undefined);
    private _repositoryAccessMode?;
    /**
     * @stability stable
     */
    get repositoryAccessMode(): string;
    /**
     * @stability stable
     */
    set repositoryAccessMode(value: string);
    /**
     * @stability stable
     */
    get repositoryAccessModeInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface SagemakerModelContainer {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#container_hostname SagemakerModel#container_hostname}.
     *
     * @stability stable
     */
    readonly containerHostname?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#environment SagemakerModel#environment}.
     *
     * @stability stable
     */
    readonly environment?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#image SagemakerModel#image}.
     *
     * @stability stable
     */
    readonly image: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#mode SagemakerModel#mode}.
     *
     * @stability stable
     */
    readonly mode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#model_data_url SagemakerModel#model_data_url}.
     *
     * @stability stable
     */
    readonly modelDataUrl?: string;
    /**
     * image_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#image_config SagemakerModel#image_config}
     *
     * @stability stable
     */
    readonly imageConfig?: SagemakerModelContainerImageConfig;
}
export declare function sagemakerModelContainerToTerraform(struct?: SagemakerModelContainer): any;
/**
 * @stability stable
 */
export interface SagemakerModelInferenceExecutionConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#mode SagemakerModel#mode}.
     *
     * @stability stable
     */
    readonly mode: string;
}
export declare function sagemakerModelInferenceExecutionConfigToTerraform(struct?: SagemakerModelInferenceExecutionConfigOutputReference | SagemakerModelInferenceExecutionConfig): any;
/**
 * @stability stable
 */
export declare class SagemakerModelInferenceExecutionConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SagemakerModelInferenceExecutionConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SagemakerModelInferenceExecutionConfig | undefined);
    private _mode?;
    /**
     * @stability stable
     */
    get mode(): string;
    /**
     * @stability stable
     */
    set mode(value: string);
    /**
     * @stability stable
     */
    get modeInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface SagemakerModelPrimaryContainerImageConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#repository_access_mode SagemakerModel#repository_access_mode}.
     *
     * @stability stable
     */
    readonly repositoryAccessMode: string;
}
export declare function sagemakerModelPrimaryContainerImageConfigToTerraform(struct?: SagemakerModelPrimaryContainerImageConfigOutputReference | SagemakerModelPrimaryContainerImageConfig): any;
/**
 * @stability stable
 */
export declare class SagemakerModelPrimaryContainerImageConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SagemakerModelPrimaryContainerImageConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SagemakerModelPrimaryContainerImageConfig | undefined);
    private _repositoryAccessMode?;
    /**
     * @stability stable
     */
    get repositoryAccessMode(): string;
    /**
     * @stability stable
     */
    set repositoryAccessMode(value: string);
    /**
     * @stability stable
     */
    get repositoryAccessModeInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface SagemakerModelPrimaryContainer {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#container_hostname SagemakerModel#container_hostname}.
     *
     * @stability stable
     */
    readonly containerHostname?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#environment SagemakerModel#environment}.
     *
     * @stability stable
     */
    readonly environment?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#image SagemakerModel#image}.
     *
     * @stability stable
     */
    readonly image: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#mode SagemakerModel#mode}.
     *
     * @stability stable
     */
    readonly mode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#model_data_url SagemakerModel#model_data_url}.
     *
     * @stability stable
     */
    readonly modelDataUrl?: string;
    /**
     * image_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#image_config SagemakerModel#image_config}
     *
     * @stability stable
     */
    readonly imageConfig?: SagemakerModelPrimaryContainerImageConfig;
}
export declare function sagemakerModelPrimaryContainerToTerraform(struct?: SagemakerModelPrimaryContainerOutputReference | SagemakerModelPrimaryContainer): any;
/**
 * @stability stable
 */
export declare class SagemakerModelPrimaryContainerOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SagemakerModelPrimaryContainer | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SagemakerModelPrimaryContainer | undefined);
    private _containerHostname?;
    /**
     * @stability stable
     */
    get containerHostname(): string;
    /**
     * @stability stable
     */
    set containerHostname(value: string);
    /**
     * @stability stable
     */
    resetContainerHostname(): void;
    /**
     * @stability stable
     */
    get containerHostnameInput(): string | undefined;
    private _environment?;
    /**
     * @stability stable
     */
    get environment(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set environment(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnvironment(): void;
    /**
     * @stability stable
     */
    get environmentInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _image?;
    /**
     * @stability stable
     */
    get image(): string;
    /**
     * @stability stable
     */
    set image(value: string);
    /**
     * @stability stable
     */
    get imageInput(): string | undefined;
    private _mode?;
    /**
     * @stability stable
     */
    get mode(): string;
    /**
     * @stability stable
     */
    set mode(value: string);
    /**
     * @stability stable
     */
    resetMode(): void;
    /**
     * @stability stable
     */
    get modeInput(): string | undefined;
    private _modelDataUrl?;
    /**
     * @stability stable
     */
    get modelDataUrl(): string;
    /**
     * @stability stable
     */
    set modelDataUrl(value: string);
    /**
     * @stability stable
     */
    resetModelDataUrl(): void;
    /**
     * @stability stable
     */
    get modelDataUrlInput(): string | undefined;
    private _imageConfig;
    /**
     * @stability stable
     */
    get imageConfig(): SagemakerModelPrimaryContainerImageConfigOutputReference;
    /**
     * @stability stable
     */
    putImageConfig(value: SagemakerModelPrimaryContainerImageConfig): void;
    /**
     * @stability stable
     */
    resetImageConfig(): void;
    /**
     * @stability stable
     */
    get imageConfigInput(): SagemakerModelPrimaryContainerImageConfig | undefined;
}
/**
 * @stability stable
 */
export interface SagemakerModelVpcConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#security_group_ids SagemakerModel#security_group_ids}.
     *
     * @stability stable
     */
    readonly securityGroupIds: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html#subnets SagemakerModel#subnets}.
     *
     * @stability stable
     */
    readonly subnets: string[];
}
export declare function sagemakerModelVpcConfigToTerraform(struct?: SagemakerModelVpcConfigOutputReference | SagemakerModelVpcConfig): any;
/**
 * @stability stable
 */
export declare class SagemakerModelVpcConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SagemakerModelVpcConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SagemakerModelVpcConfig | undefined);
    private _securityGroupIds?;
    /**
     * @stability stable
     */
    get securityGroupIds(): string[];
    /**
     * @stability stable
     */
    set securityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    get securityGroupIdsInput(): string[] | undefined;
    private _subnets?;
    /**
     * @stability stable
     */
    get subnets(): string[];
    /**
     * @stability stable
     */
    set subnets(value: string[]);
    /**
     * @stability stable
     */
    get subnetsInput(): string[] | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html aws_sagemaker_model}.
 *
 * @stability stable
 */
export declare class SagemakerModel extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/sagemaker_model.html aws_sagemaker_model} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: SagemakerModelConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _enableNetworkIsolation?;
    /**
     * @stability stable
     */
    get enableNetworkIsolation(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableNetworkIsolation(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableNetworkIsolation(): void;
    /**
     * @stability stable
     */
    get enableNetworkIsolationInput(): boolean | cdktf.IResolvable | undefined;
    private _executionRoleArn?;
    /**
     * @stability stable
     */
    get executionRoleArn(): string;
    /**
     * @stability stable
     */
    set executionRoleArn(value: string);
    /**
     * @stability stable
     */
    get executionRoleArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    resetName(): void;
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _container?;
    /**
     * @stability stable
     */
    get container(): SagemakerModelContainer[];
    /**
     * @stability stable
     */
    set container(value: SagemakerModelContainer[]);
    /**
     * @stability stable
     */
    resetContainer(): void;
    /**
     * @stability stable
     */
    get containerInput(): SagemakerModelContainer[] | undefined;
    private _inferenceExecutionConfig;
    /**
     * @stability stable
     */
    get inferenceExecutionConfig(): SagemakerModelInferenceExecutionConfigOutputReference;
    /**
     * @stability stable
     */
    putInferenceExecutionConfig(value: SagemakerModelInferenceExecutionConfig): void;
    /**
     * @stability stable
     */
    resetInferenceExecutionConfig(): void;
    /**
     * @stability stable
     */
    get inferenceExecutionConfigInput(): SagemakerModelInferenceExecutionConfig | undefined;
    private _primaryContainer;
    /**
     * @stability stable
     */
    get primaryContainer(): SagemakerModelPrimaryContainerOutputReference;
    /**
     * @stability stable
     */
    putPrimaryContainer(value: SagemakerModelPrimaryContainer): void;
    /**
     * @stability stable
     */
    resetPrimaryContainer(): void;
    /**
     * @stability stable
     */
    get primaryContainerInput(): SagemakerModelPrimaryContainer | undefined;
    private _vpcConfig;
    /**
     * @stability stable
     */
    get vpcConfig(): SagemakerModelVpcConfigOutputReference;
    /**
     * @stability stable
     */
    putVpcConfig(value: SagemakerModelVpcConfig): void;
    /**
     * @stability stable
     */
    resetVpcConfig(): void;
    /**
     * @stability stable
     */
    get vpcConfigInput(): SagemakerModelVpcConfig | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

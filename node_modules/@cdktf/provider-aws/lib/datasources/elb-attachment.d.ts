import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Data Sources.
 *
 * @stability stable
 */
export interface ElbAttachmentConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elb_attachment.html#elb ElbAttachment#elb}.
     *
     * @stability stable
     */
    readonly elb: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elb_attachment.html#instance ElbAttachment#instance}.
     *
     * @stability stable
     */
    readonly instance: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/elb_attachment.html aws_elb_attachment}.
 *
 * @stability stable
 */
export declare class ElbAttachment extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/elb_attachment.html aws_elb_attachment} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ElbAttachmentConfig);
    private _elb?;
    /**
     * @stability stable
     */
    get elb(): string;
    /**
     * @stability stable
     */
    set elb(value: string);
    /**
     * @stability stable
     */
    get elbInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instance?;
    /**
     * @stability stable
     */
    get instance(): string;
    /**
     * @stability stable
     */
    set instance(value: string);
    /**
     * @stability stable
     */
    get instanceInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Elastic Kubernetes Service.
 *
 * @stability stable
 */
export interface EksNodeGroupConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#ami_type EksNodeGroup#ami_type}.
     *
     * @stability stable
     */
    readonly amiType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#capacity_type EksNodeGroup#capacity_type}.
     *
     * @stability stable
     */
    readonly capacityType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#cluster_name EksNodeGroup#cluster_name}.
     *
     * @stability stable
     */
    readonly clusterName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#disk_size EksNodeGroup#disk_size}.
     *
     * @stability stable
     */
    readonly diskSize?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#force_update_version EksNodeGroup#force_update_version}.
     *
     * @stability stable
     */
    readonly forceUpdateVersion?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#instance_types EksNodeGroup#instance_types}.
     *
     * @stability stable
     */
    readonly instanceTypes?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#labels EksNodeGroup#labels}.
     *
     * @stability stable
     */
    readonly labels?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#node_group_name EksNodeGroup#node_group_name}.
     *
     * @stability stable
     */
    readonly nodeGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#node_group_name_prefix EksNodeGroup#node_group_name_prefix}.
     *
     * @stability stable
     */
    readonly nodeGroupNamePrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#node_role_arn EksNodeGroup#node_role_arn}.
     *
     * @stability stable
     */
    readonly nodeRoleArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#release_version EksNodeGroup#release_version}.
     *
     * @stability stable
     */
    readonly releaseVersion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#subnet_ids EksNodeGroup#subnet_ids}.
     *
     * @stability stable
     */
    readonly subnetIds: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#tags EksNodeGroup#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#tags_all EksNodeGroup#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#version EksNodeGroup#version}.
     *
     * @stability stable
     */
    readonly version?: string;
    /**
     * launch_template block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#launch_template EksNodeGroup#launch_template}
     *
     * @stability stable
     */
    readonly launchTemplate?: EksNodeGroupLaunchTemplate;
    /**
     * remote_access block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#remote_access EksNodeGroup#remote_access}
     *
     * @stability stable
     */
    readonly remoteAccess?: EksNodeGroupRemoteAccess;
    /**
     * scaling_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#scaling_config EksNodeGroup#scaling_config}
     *
     * @stability stable
     */
    readonly scalingConfig: EksNodeGroupScalingConfig;
    /**
     * taint block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#taint EksNodeGroup#taint}
     *
     * @stability stable
     */
    readonly taint?: EksNodeGroupTaint[];
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#timeouts EksNodeGroup#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: EksNodeGroupTimeouts;
    /**
     * update_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#update_config EksNodeGroup#update_config}
     *
     * @stability stable
     */
    readonly updateConfig?: EksNodeGroupUpdateConfig;
}
/**
 * @stability stable
 */
export declare class EksNodeGroupResourcesAutoscalingGroups extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get name(): string;
}
/**
 * @stability stable
 */
export declare class EksNodeGroupResources extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get autoscalingGroups(): any;
    /**
     * @stability stable
     */
    get remoteAccessSecurityGroupId(): string;
}
/**
 * @stability stable
 */
export interface EksNodeGroupLaunchTemplate {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#id EksNodeGroup#id}.
     *
     * @stability stable
     */
    readonly id?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#name EksNodeGroup#name}.
     *
     * @stability stable
     */
    readonly name?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#version EksNodeGroup#version}.
     *
     * @stability stable
     */
    readonly version: string;
}
export declare function eksNodeGroupLaunchTemplateToTerraform(struct?: EksNodeGroupLaunchTemplateOutputReference | EksNodeGroupLaunchTemplate): any;
/**
 * @stability stable
 */
export declare class EksNodeGroupLaunchTemplateOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksNodeGroupLaunchTemplate | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksNodeGroupLaunchTemplate | undefined);
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    resetName(): void;
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _version?;
    /**
     * @stability stable
     */
    get version(): string;
    /**
     * @stability stable
     */
    set version(value: string);
    /**
     * @stability stable
     */
    get versionInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EksNodeGroupRemoteAccess {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#ec2_ssh_key EksNodeGroup#ec2_ssh_key}.
     *
     * @stability stable
     */
    readonly ec2SshKey?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#source_security_group_ids EksNodeGroup#source_security_group_ids}.
     *
     * @stability stable
     */
    readonly sourceSecurityGroupIds?: string[];
}
export declare function eksNodeGroupRemoteAccessToTerraform(struct?: EksNodeGroupRemoteAccessOutputReference | EksNodeGroupRemoteAccess): any;
/**
 * @stability stable
 */
export declare class EksNodeGroupRemoteAccessOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksNodeGroupRemoteAccess | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksNodeGroupRemoteAccess | undefined);
    private _ec2SshKey?;
    /**
     * @stability stable
     */
    get ec2SshKey(): string;
    /**
     * @stability stable
     */
    set ec2SshKey(value: string);
    /**
     * @stability stable
     */
    resetEc2SshKey(): void;
    /**
     * @stability stable
     */
    get ec2SshKeyInput(): string | undefined;
    private _sourceSecurityGroupIds?;
    /**
     * @stability stable
     */
    get sourceSecurityGroupIds(): string[];
    /**
     * @stability stable
     */
    set sourceSecurityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    resetSourceSecurityGroupIds(): void;
    /**
     * @stability stable
     */
    get sourceSecurityGroupIdsInput(): string[] | undefined;
}
/**
 * @stability stable
 */
export interface EksNodeGroupScalingConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#desired_size EksNodeGroup#desired_size}.
     *
     * @stability stable
     */
    readonly desiredSize: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#max_size EksNodeGroup#max_size}.
     *
     * @stability stable
     */
    readonly maxSize: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#min_size EksNodeGroup#min_size}.
     *
     * @stability stable
     */
    readonly minSize: number;
}
export declare function eksNodeGroupScalingConfigToTerraform(struct?: EksNodeGroupScalingConfigOutputReference | EksNodeGroupScalingConfig): any;
/**
 * @stability stable
 */
export declare class EksNodeGroupScalingConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksNodeGroupScalingConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksNodeGroupScalingConfig | undefined);
    private _desiredSize?;
    /**
     * @stability stable
     */
    get desiredSize(): number;
    /**
     * @stability stable
     */
    set desiredSize(value: number);
    /**
     * @stability stable
     */
    get desiredSizeInput(): number | undefined;
    private _maxSize?;
    /**
     * @stability stable
     */
    get maxSize(): number;
    /**
     * @stability stable
     */
    set maxSize(value: number);
    /**
     * @stability stable
     */
    get maxSizeInput(): number | undefined;
    private _minSize?;
    /**
     * @stability stable
     */
    get minSize(): number;
    /**
     * @stability stable
     */
    set minSize(value: number);
    /**
     * @stability stable
     */
    get minSizeInput(): number | undefined;
}
/**
 * @stability stable
 */
export interface EksNodeGroupTaint {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#effect EksNodeGroup#effect}.
     *
     * @stability stable
     */
    readonly effect: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#key EksNodeGroup#key}.
     *
     * @stability stable
     */
    readonly key: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#value EksNodeGroup#value}.
     *
     * @stability stable
     */
    readonly value?: string;
}
export declare function eksNodeGroupTaintToTerraform(struct?: EksNodeGroupTaint): any;
/**
 * @stability stable
 */
export interface EksNodeGroupTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#create EksNodeGroup#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#delete EksNodeGroup#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#update EksNodeGroup#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function eksNodeGroupTimeoutsToTerraform(struct?: EksNodeGroupTimeoutsOutputReference | EksNodeGroupTimeouts): any;
/**
 * @stability stable
 */
export declare class EksNodeGroupTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksNodeGroupTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksNodeGroupTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EksNodeGroupUpdateConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#max_unavailable EksNodeGroup#max_unavailable}.
     *
     * @stability stable
     */
    readonly maxUnavailable?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html#max_unavailable_percentage EksNodeGroup#max_unavailable_percentage}.
     *
     * @stability stable
     */
    readonly maxUnavailablePercentage?: number;
}
export declare function eksNodeGroupUpdateConfigToTerraform(struct?: EksNodeGroupUpdateConfigOutputReference | EksNodeGroupUpdateConfig): any;
/**
 * @stability stable
 */
export declare class EksNodeGroupUpdateConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksNodeGroupUpdateConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksNodeGroupUpdateConfig | undefined);
    private _maxUnavailable?;
    /**
     * @stability stable
     */
    get maxUnavailable(): number;
    /**
     * @stability stable
     */
    set maxUnavailable(value: number);
    /**
     * @stability stable
     */
    resetMaxUnavailable(): void;
    /**
     * @stability stable
     */
    get maxUnavailableInput(): number | undefined;
    private _maxUnavailablePercentage?;
    /**
     * @stability stable
     */
    get maxUnavailablePercentage(): number;
    /**
     * @stability stable
     */
    set maxUnavailablePercentage(value: number);
    /**
     * @stability stable
     */
    resetMaxUnavailablePercentage(): void;
    /**
     * @stability stable
     */
    get maxUnavailablePercentageInput(): number | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html aws_eks_node_group}.
 *
 * @stability stable
 */
export declare class EksNodeGroup extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/eks_node_group.html aws_eks_node_group} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: EksNodeGroupConfig);
    private _amiType?;
    /**
     * @stability stable
     */
    get amiType(): string;
    /**
     * @stability stable
     */
    set amiType(value: string);
    /**
     * @stability stable
     */
    resetAmiType(): void;
    /**
     * @stability stable
     */
    get amiTypeInput(): string | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    private _capacityType?;
    /**
     * @stability stable
     */
    get capacityType(): string;
    /**
     * @stability stable
     */
    set capacityType(value: string);
    /**
     * @stability stable
     */
    resetCapacityType(): void;
    /**
     * @stability stable
     */
    get capacityTypeInput(): string | undefined;
    private _clusterName?;
    /**
     * @stability stable
     */
    get clusterName(): string;
    /**
     * @stability stable
     */
    set clusterName(value: string);
    /**
     * @stability stable
     */
    get clusterNameInput(): string | undefined;
    private _diskSize?;
    /**
     * @stability stable
     */
    get diskSize(): number;
    /**
     * @stability stable
     */
    set diskSize(value: number);
    /**
     * @stability stable
     */
    resetDiskSize(): void;
    /**
     * @stability stable
     */
    get diskSizeInput(): number | undefined;
    private _forceUpdateVersion?;
    /**
     * @stability stable
     */
    get forceUpdateVersion(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set forceUpdateVersion(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetForceUpdateVersion(): void;
    /**
     * @stability stable
     */
    get forceUpdateVersionInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instanceTypes?;
    /**
     * @stability stable
     */
    get instanceTypes(): string[];
    /**
     * @stability stable
     */
    set instanceTypes(value: string[]);
    /**
     * @stability stable
     */
    resetInstanceTypes(): void;
    /**
     * @stability stable
     */
    get instanceTypesInput(): string[] | undefined;
    private _labels?;
    /**
     * @stability stable
     */
    get labels(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set labels(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetLabels(): void;
    /**
     * @stability stable
     */
    get labelsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _nodeGroupName?;
    /**
     * @stability stable
     */
    get nodeGroupName(): string;
    /**
     * @stability stable
     */
    set nodeGroupName(value: string);
    /**
     * @stability stable
     */
    resetNodeGroupName(): void;
    /**
     * @stability stable
     */
    get nodeGroupNameInput(): string | undefined;
    private _nodeGroupNamePrefix?;
    /**
     * @stability stable
     */
    get nodeGroupNamePrefix(): string;
    /**
     * @stability stable
     */
    set nodeGroupNamePrefix(value: string);
    /**
     * @stability stable
     */
    resetNodeGroupNamePrefix(): void;
    /**
     * @stability stable
     */
    get nodeGroupNamePrefixInput(): string | undefined;
    private _nodeRoleArn?;
    /**
     * @stability stable
     */
    get nodeRoleArn(): string;
    /**
     * @stability stable
     */
    set nodeRoleArn(value: string);
    /**
     * @stability stable
     */
    get nodeRoleArnInput(): string | undefined;
    private _releaseVersion?;
    /**
     * @stability stable
     */
    get releaseVersion(): string;
    /**
     * @stability stable
     */
    set releaseVersion(value: string);
    /**
     * @stability stable
     */
    resetReleaseVersion(): void;
    /**
     * @stability stable
     */
    get releaseVersionInput(): string | undefined;
    /**
     * @stability stable
     */
    resources(index: string): EksNodeGroupResources;
    /**
     * @stability stable
     */
    get status(): string;
    private _subnetIds?;
    /**
     * @stability stable
     */
    get subnetIds(): string[];
    /**
     * @stability stable
     */
    set subnetIds(value: string[]);
    /**
     * @stability stable
     */
    get subnetIdsInput(): string[] | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _version?;
    /**
     * @stability stable
     */
    get version(): string;
    /**
     * @stability stable
     */
    set version(value: string);
    /**
     * @stability stable
     */
    resetVersion(): void;
    /**
     * @stability stable
     */
    get versionInput(): string | undefined;
    private _launchTemplate;
    /**
     * @stability stable
     */
    get launchTemplate(): EksNodeGroupLaunchTemplateOutputReference;
    /**
     * @stability stable
     */
    putLaunchTemplate(value: EksNodeGroupLaunchTemplate): void;
    /**
     * @stability stable
     */
    resetLaunchTemplate(): void;
    /**
     * @stability stable
     */
    get launchTemplateInput(): EksNodeGroupLaunchTemplate | undefined;
    private _remoteAccess;
    /**
     * @stability stable
     */
    get remoteAccess(): EksNodeGroupRemoteAccessOutputReference;
    /**
     * @stability stable
     */
    putRemoteAccess(value: EksNodeGroupRemoteAccess): void;
    /**
     * @stability stable
     */
    resetRemoteAccess(): void;
    /**
     * @stability stable
     */
    get remoteAccessInput(): EksNodeGroupRemoteAccess | undefined;
    private _scalingConfig;
    /**
     * @stability stable
     */
    get scalingConfig(): EksNodeGroupScalingConfigOutputReference;
    /**
     * @stability stable
     */
    putScalingConfig(value: EksNodeGroupScalingConfig): void;
    /**
     * @stability stable
     */
    get scalingConfigInput(): EksNodeGroupScalingConfig | undefined;
    private _taint?;
    /**
     * @stability stable
     */
    get taint(): EksNodeGroupTaint[];
    /**
     * @stability stable
     */
    set taint(value: EksNodeGroupTaint[]);
    /**
     * @stability stable
     */
    resetTaint(): void;
    /**
     * @stability stable
     */
    get taintInput(): EksNodeGroupTaint[] | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): EksNodeGroupTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: EksNodeGroupTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): EksNodeGroupTimeouts | undefined;
    private _updateConfig;
    /**
     * @stability stable
     */
    get updateConfig(): EksNodeGroupUpdateConfigOutputReference;
    /**
     * @stability stable
     */
    putUpdateConfig(value: EksNodeGroupUpdateConfig): void;
    /**
     * @stability stable
     */
    resetUpdateConfig(): void;
    /**
     * @stability stable
     */
    get updateConfigInput(): EksNodeGroupUpdateConfig | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

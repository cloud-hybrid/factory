import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS EC2.
 *
 * @stability stable
 */
export interface AmiConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#architecture Ami#architecture}.
     *
     * @stability stable
     */
    readonly architecture?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#description Ami#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#ena_support Ami#ena_support}.
     *
     * @stability stable
     */
    readonly enaSupport?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#image_location Ami#image_location}.
     *
     * @stability stable
     */
    readonly imageLocation?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#kernel_id Ami#kernel_id}.
     *
     * @stability stable
     */
    readonly kernelId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#name Ami#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#ramdisk_id Ami#ramdisk_id}.
     *
     * @stability stable
     */
    readonly ramdiskId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#root_device_name Ami#root_device_name}.
     *
     * @stability stable
     */
    readonly rootDeviceName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#sriov_net_support Ami#sriov_net_support}.
     *
     * @stability stable
     */
    readonly sriovNetSupport?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#tags Ami#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#tags_all Ami#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#virtualization_type Ami#virtualization_type}.
     *
     * @stability stable
     */
    readonly virtualizationType?: string;
    /**
     * ebs_block_device block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#ebs_block_device Ami#ebs_block_device}
     *
     * @stability stable
     */
    readonly ebsBlockDevice?: AmiEbsBlockDevice[];
    /**
     * ephemeral_block_device block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#ephemeral_block_device Ami#ephemeral_block_device}
     *
     * @stability stable
     */
    readonly ephemeralBlockDevice?: AmiEphemeralBlockDevice[];
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#timeouts Ami#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: AmiTimeouts;
}
/**
 * @stability stable
 */
export interface AmiEbsBlockDevice {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#delete_on_termination Ami#delete_on_termination}.
     *
     * @stability stable
     */
    readonly deleteOnTermination?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#device_name Ami#device_name}.
     *
     * @stability stable
     */
    readonly deviceName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#encrypted Ami#encrypted}.
     *
     * @stability stable
     */
    readonly encrypted?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#iops Ami#iops}.
     *
     * @stability stable
     */
    readonly iops?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#snapshot_id Ami#snapshot_id}.
     *
     * @stability stable
     */
    readonly snapshotId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#throughput Ami#throughput}.
     *
     * @stability stable
     */
    readonly throughput?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#volume_size Ami#volume_size}.
     *
     * @stability stable
     */
    readonly volumeSize?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#volume_type Ami#volume_type}.
     *
     * @stability stable
     */
    readonly volumeType?: string;
}
export declare function amiEbsBlockDeviceToTerraform(struct?: AmiEbsBlockDevice): any;
/**
 * @stability stable
 */
export interface AmiEphemeralBlockDevice {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#device_name Ami#device_name}.
     *
     * @stability stable
     */
    readonly deviceName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#virtual_name Ami#virtual_name}.
     *
     * @stability stable
     */
    readonly virtualName: string;
}
export declare function amiEphemeralBlockDeviceToTerraform(struct?: AmiEphemeralBlockDevice): any;
/**
 * @stability stable
 */
export interface AmiTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#create Ami#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#delete Ami#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ami.html#update Ami#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function amiTimeoutsToTerraform(struct?: AmiTimeoutsOutputReference | AmiTimeouts): any;
/**
 * @stability stable
 */
export declare class AmiTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): AmiTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: AmiTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/ami.html aws_ami}.
 *
 * @stability stable
 */
export declare class Ami extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ami.html aws_ami} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: AmiConfig);
    private _architecture?;
    /**
     * @stability stable
     */
    get architecture(): string;
    /**
     * @stability stable
     */
    set architecture(value: string);
    /**
     * @stability stable
     */
    resetArchitecture(): void;
    /**
     * @stability stable
     */
    get architectureInput(): string | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _enaSupport?;
    /**
     * @stability stable
     */
    get enaSupport(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enaSupport(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnaSupport(): void;
    /**
     * @stability stable
     */
    get enaSupportInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get hypervisor(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _imageLocation?;
    /**
     * @stability stable
     */
    get imageLocation(): string;
    /**
     * @stability stable
     */
    set imageLocation(value: string);
    /**
     * @stability stable
     */
    resetImageLocation(): void;
    /**
     * @stability stable
     */
    get imageLocationInput(): string | undefined;
    /**
     * @stability stable
     */
    get imageOwnerAlias(): string;
    /**
     * @stability stable
     */
    get imageType(): string;
    private _kernelId?;
    /**
     * @stability stable
     */
    get kernelId(): string;
    /**
     * @stability stable
     */
    set kernelId(value: string);
    /**
     * @stability stable
     */
    resetKernelId(): void;
    /**
     * @stability stable
     */
    get kernelIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get manageEbsSnapshots(): any;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    /**
     * @stability stable
     */
    get ownerId(): string;
    /**
     * @stability stable
     */
    get platform(): string;
    /**
     * @stability stable
     */
    get platformDetails(): string;
    /**
     * @stability stable
     */
    get public(): any;
    private _ramdiskId?;
    /**
     * @stability stable
     */
    get ramdiskId(): string;
    /**
     * @stability stable
     */
    set ramdiskId(value: string);
    /**
     * @stability stable
     */
    resetRamdiskId(): void;
    /**
     * @stability stable
     */
    get ramdiskIdInput(): string | undefined;
    private _rootDeviceName?;
    /**
     * @stability stable
     */
    get rootDeviceName(): string;
    /**
     * @stability stable
     */
    set rootDeviceName(value: string);
    /**
     * @stability stable
     */
    resetRootDeviceName(): void;
    /**
     * @stability stable
     */
    get rootDeviceNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get rootSnapshotId(): string;
    private _sriovNetSupport?;
    /**
     * @stability stable
     */
    get sriovNetSupport(): string;
    /**
     * @stability stable
     */
    set sriovNetSupport(value: string);
    /**
     * @stability stable
     */
    resetSriovNetSupport(): void;
    /**
     * @stability stable
     */
    get sriovNetSupportInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get usageOperation(): string;
    private _virtualizationType?;
    /**
     * @stability stable
     */
    get virtualizationType(): string;
    /**
     * @stability stable
     */
    set virtualizationType(value: string);
    /**
     * @stability stable
     */
    resetVirtualizationType(): void;
    /**
     * @stability stable
     */
    get virtualizationTypeInput(): string | undefined;
    private _ebsBlockDevice?;
    /**
     * @stability stable
     */
    get ebsBlockDevice(): AmiEbsBlockDevice[];
    /**
     * @stability stable
     */
    set ebsBlockDevice(value: AmiEbsBlockDevice[]);
    /**
     * @stability stable
     */
    resetEbsBlockDevice(): void;
    /**
     * @stability stable
     */
    get ebsBlockDeviceInput(): AmiEbsBlockDevice[] | undefined;
    private _ephemeralBlockDevice?;
    /**
     * @stability stable
     */
    get ephemeralBlockDevice(): AmiEphemeralBlockDevice[];
    /**
     * @stability stable
     */
    set ephemeralBlockDevice(value: AmiEphemeralBlockDevice[]);
    /**
     * @stability stable
     */
    resetEphemeralBlockDevice(): void;
    /**
     * @stability stable
     */
    get ephemeralBlockDeviceInput(): AmiEphemeralBlockDevice[] | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): AmiTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: AmiTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): AmiTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

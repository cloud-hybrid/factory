import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS DocumentDB.
 *
 * @stability stable
 */
export interface DocdbClusterConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#apply_immediately DocdbCluster#apply_immediately}.
     *
     * @stability stable
     */
    readonly applyImmediately?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#availability_zones DocdbCluster#availability_zones}.
     *
     * @stability stable
     */
    readonly availabilityZones?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#backup_retention_period DocdbCluster#backup_retention_period}.
     *
     * @stability stable
     */
    readonly backupRetentionPeriod?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#cluster_identifier DocdbCluster#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#cluster_identifier_prefix DocdbCluster#cluster_identifier_prefix}.
     *
     * @stability stable
     */
    readonly clusterIdentifierPrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#cluster_members DocdbCluster#cluster_members}.
     *
     * @stability stable
     */
    readonly clusterMembers?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#db_cluster_parameter_group_name DocdbCluster#db_cluster_parameter_group_name}.
     *
     * @stability stable
     */
    readonly dbClusterParameterGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#db_subnet_group_name DocdbCluster#db_subnet_group_name}.
     *
     * @stability stable
     */
    readonly dbSubnetGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#deletion_protection DocdbCluster#deletion_protection}.
     *
     * @stability stable
     */
    readonly deletionProtection?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#enabled_cloudwatch_logs_exports DocdbCluster#enabled_cloudwatch_logs_exports}.
     *
     * @stability stable
     */
    readonly enabledCloudwatchLogsExports?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#engine DocdbCluster#engine}.
     *
     * @stability stable
     */
    readonly engine?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#engine_version DocdbCluster#engine_version}.
     *
     * @stability stable
     */
    readonly engineVersion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#final_snapshot_identifier DocdbCluster#final_snapshot_identifier}.
     *
     * @stability stable
     */
    readonly finalSnapshotIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#global_cluster_identifier DocdbCluster#global_cluster_identifier}.
     *
     * @stability stable
     */
    readonly globalClusterIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#kms_key_id DocdbCluster#kms_key_id}.
     *
     * @stability stable
     */
    readonly kmsKeyId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#master_password DocdbCluster#master_password}.
     *
     * @stability stable
     */
    readonly masterPassword?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#master_username DocdbCluster#master_username}.
     *
     * @stability stable
     */
    readonly masterUsername?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#port DocdbCluster#port}.
     *
     * @stability stable
     */
    readonly port?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#preferred_backup_window DocdbCluster#preferred_backup_window}.
     *
     * @stability stable
     */
    readonly preferredBackupWindow?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#preferred_maintenance_window DocdbCluster#preferred_maintenance_window}.
     *
     * @stability stable
     */
    readonly preferredMaintenanceWindow?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#skip_final_snapshot DocdbCluster#skip_final_snapshot}.
     *
     * @stability stable
     */
    readonly skipFinalSnapshot?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#snapshot_identifier DocdbCluster#snapshot_identifier}.
     *
     * @stability stable
     */
    readonly snapshotIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#storage_encrypted DocdbCluster#storage_encrypted}.
     *
     * @stability stable
     */
    readonly storageEncrypted?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#tags DocdbCluster#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#tags_all DocdbCluster#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#vpc_security_group_ids DocdbCluster#vpc_security_group_ids}.
     *
     * @stability stable
     */
    readonly vpcSecurityGroupIds?: string[];
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#timeouts DocdbCluster#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: DocdbClusterTimeouts;
}
/**
 * @stability stable
 */
export interface DocdbClusterTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#create DocdbCluster#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#delete DocdbCluster#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html#update DocdbCluster#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function docdbClusterTimeoutsToTerraform(struct?: DocdbClusterTimeoutsOutputReference | DocdbClusterTimeouts): any;
/**
 * @stability stable
 */
export declare class DocdbClusterTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): DocdbClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: DocdbClusterTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html aws_docdb_cluster}.
 *
 * @stability stable
 */
export declare class DocdbCluster extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html aws_docdb_cluster} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: DocdbClusterConfig);
    private _applyImmediately?;
    /**
     * @stability stable
     */
    get applyImmediately(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set applyImmediately(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetApplyImmediately(): void;
    /**
     * @stability stable
     */
    get applyImmediatelyInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    private _availabilityZones?;
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    /**
     * @stability stable
     */
    set availabilityZones(value: string[]);
    /**
     * @stability stable
     */
    resetAvailabilityZones(): void;
    /**
     * @stability stable
     */
    get availabilityZonesInput(): string[] | undefined;
    private _backupRetentionPeriod?;
    /**
     * @stability stable
     */
    get backupRetentionPeriod(): number;
    /**
     * @stability stable
     */
    set backupRetentionPeriod(value: number);
    /**
     * @stability stable
     */
    resetBackupRetentionPeriod(): void;
    /**
     * @stability stable
     */
    get backupRetentionPeriodInput(): number | undefined;
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    resetClusterIdentifier(): void;
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
    private _clusterIdentifierPrefix?;
    /**
     * @stability stable
     */
    get clusterIdentifierPrefix(): string;
    /**
     * @stability stable
     */
    set clusterIdentifierPrefix(value: string);
    /**
     * @stability stable
     */
    resetClusterIdentifierPrefix(): void;
    /**
     * @stability stable
     */
    get clusterIdentifierPrefixInput(): string | undefined;
    private _clusterMembers?;
    /**
     * @stability stable
     */
    get clusterMembers(): string[];
    /**
     * @stability stable
     */
    set clusterMembers(value: string[]);
    /**
     * @stability stable
     */
    resetClusterMembers(): void;
    /**
     * @stability stable
     */
    get clusterMembersInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get clusterResourceId(): string;
    private _dbClusterParameterGroupName?;
    /**
     * @stability stable
     */
    get dbClusterParameterGroupName(): string;
    /**
     * @stability stable
     */
    set dbClusterParameterGroupName(value: string);
    /**
     * @stability stable
     */
    resetDbClusterParameterGroupName(): void;
    /**
     * @stability stable
     */
    get dbClusterParameterGroupNameInput(): string | undefined;
    private _dbSubnetGroupName?;
    /**
     * @stability stable
     */
    get dbSubnetGroupName(): string;
    /**
     * @stability stable
     */
    set dbSubnetGroupName(value: string);
    /**
     * @stability stable
     */
    resetDbSubnetGroupName(): void;
    /**
     * @stability stable
     */
    get dbSubnetGroupNameInput(): string | undefined;
    private _deletionProtection?;
    /**
     * @stability stable
     */
    get deletionProtection(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set deletionProtection(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetDeletionProtection(): void;
    /**
     * @stability stable
     */
    get deletionProtectionInput(): boolean | cdktf.IResolvable | undefined;
    private _enabledCloudwatchLogsExports?;
    /**
     * @stability stable
     */
    get enabledCloudwatchLogsExports(): string[];
    /**
     * @stability stable
     */
    set enabledCloudwatchLogsExports(value: string[]);
    /**
     * @stability stable
     */
    resetEnabledCloudwatchLogsExports(): void;
    /**
     * @stability stable
     */
    get enabledCloudwatchLogsExportsInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get endpoint(): string;
    private _engine?;
    /**
     * @stability stable
     */
    get engine(): string;
    /**
     * @stability stable
     */
    set engine(value: string);
    /**
     * @stability stable
     */
    resetEngine(): void;
    /**
     * @stability stable
     */
    get engineInput(): string | undefined;
    private _engineVersion?;
    /**
     * @stability stable
     */
    get engineVersion(): string;
    /**
     * @stability stable
     */
    set engineVersion(value: string);
    /**
     * @stability stable
     */
    resetEngineVersion(): void;
    /**
     * @stability stable
     */
    get engineVersionInput(): string | undefined;
    private _finalSnapshotIdentifier?;
    /**
     * @stability stable
     */
    get finalSnapshotIdentifier(): string;
    /**
     * @stability stable
     */
    set finalSnapshotIdentifier(value: string);
    /**
     * @stability stable
     */
    resetFinalSnapshotIdentifier(): void;
    /**
     * @stability stable
     */
    get finalSnapshotIdentifierInput(): string | undefined;
    private _globalClusterIdentifier?;
    /**
     * @stability stable
     */
    get globalClusterIdentifier(): string;
    /**
     * @stability stable
     */
    set globalClusterIdentifier(value: string);
    /**
     * @stability stable
     */
    resetGlobalClusterIdentifier(): void;
    /**
     * @stability stable
     */
    get globalClusterIdentifierInput(): string | undefined;
    /**
     * @stability stable
     */
    get hostedZoneId(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _kmsKeyId?;
    /**
     * @stability stable
     */
    get kmsKeyId(): string;
    /**
     * @stability stable
     */
    set kmsKeyId(value: string);
    /**
     * @stability stable
     */
    resetKmsKeyId(): void;
    /**
     * @stability stable
     */
    get kmsKeyIdInput(): string | undefined;
    private _masterPassword?;
    /**
     * @stability stable
     */
    get masterPassword(): string;
    /**
     * @stability stable
     */
    set masterPassword(value: string);
    /**
     * @stability stable
     */
    resetMasterPassword(): void;
    /**
     * @stability stable
     */
    get masterPasswordInput(): string | undefined;
    private _masterUsername?;
    /**
     * @stability stable
     */
    get masterUsername(): string;
    /**
     * @stability stable
     */
    set masterUsername(value: string);
    /**
     * @stability stable
     */
    resetMasterUsername(): void;
    /**
     * @stability stable
     */
    get masterUsernameInput(): string | undefined;
    private _port?;
    /**
     * @stability stable
     */
    get port(): number;
    /**
     * @stability stable
     */
    set port(value: number);
    /**
     * @stability stable
     */
    resetPort(): void;
    /**
     * @stability stable
     */
    get portInput(): number | undefined;
    private _preferredBackupWindow?;
    /**
     * @stability stable
     */
    get preferredBackupWindow(): string;
    /**
     * @stability stable
     */
    set preferredBackupWindow(value: string);
    /**
     * @stability stable
     */
    resetPreferredBackupWindow(): void;
    /**
     * @stability stable
     */
    get preferredBackupWindowInput(): string | undefined;
    private _preferredMaintenanceWindow?;
    /**
     * @stability stable
     */
    get preferredMaintenanceWindow(): string;
    /**
     * @stability stable
     */
    set preferredMaintenanceWindow(value: string);
    /**
     * @stability stable
     */
    resetPreferredMaintenanceWindow(): void;
    /**
     * @stability stable
     */
    get preferredMaintenanceWindowInput(): string | undefined;
    /**
     * @stability stable
     */
    get readerEndpoint(): string;
    private _skipFinalSnapshot?;
    /**
     * @stability stable
     */
    get skipFinalSnapshot(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set skipFinalSnapshot(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetSkipFinalSnapshot(): void;
    /**
     * @stability stable
     */
    get skipFinalSnapshotInput(): boolean | cdktf.IResolvable | undefined;
    private _snapshotIdentifier?;
    /**
     * @stability stable
     */
    get snapshotIdentifier(): string;
    /**
     * @stability stable
     */
    set snapshotIdentifier(value: string);
    /**
     * @stability stable
     */
    resetSnapshotIdentifier(): void;
    /**
     * @stability stable
     */
    get snapshotIdentifierInput(): string | undefined;
    private _storageEncrypted?;
    /**
     * @stability stable
     */
    get storageEncrypted(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set storageEncrypted(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetStorageEncrypted(): void;
    /**
     * @stability stable
     */
    get storageEncryptedInput(): boolean | cdktf.IResolvable | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _vpcSecurityGroupIds?;
    /**
     * @stability stable
     */
    get vpcSecurityGroupIds(): string[];
    /**
     * @stability stable
     */
    set vpcSecurityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    resetVpcSecurityGroupIds(): void;
    /**
     * @stability stable
     */
    get vpcSecurityGroupIdsInput(): string[] | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): DocdbClusterTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: DocdbClusterTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): DocdbClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

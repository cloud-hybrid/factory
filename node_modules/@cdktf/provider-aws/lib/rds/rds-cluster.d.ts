import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Relational Database Service.
 *
 * @stability stable
 */
export interface RdsClusterConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#allow_major_version_upgrade RdsCluster#allow_major_version_upgrade}.
     *
     * @stability stable
     */
    readonly allowMajorVersionUpgrade?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#apply_immediately RdsCluster#apply_immediately}.
     *
     * @stability stable
     */
    readonly applyImmediately?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#availability_zones RdsCluster#availability_zones}.
     *
     * @stability stable
     */
    readonly availabilityZones?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#backtrack_window RdsCluster#backtrack_window}.
     *
     * @stability stable
     */
    readonly backtrackWindow?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#backup_retention_period RdsCluster#backup_retention_period}.
     *
     * @stability stable
     */
    readonly backupRetentionPeriod?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#cluster_identifier RdsCluster#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#cluster_identifier_prefix RdsCluster#cluster_identifier_prefix}.
     *
     * @stability stable
     */
    readonly clusterIdentifierPrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#cluster_members RdsCluster#cluster_members}.
     *
     * @stability stable
     */
    readonly clusterMembers?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#copy_tags_to_snapshot RdsCluster#copy_tags_to_snapshot}.
     *
     * @stability stable
     */
    readonly copyTagsToSnapshot?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#database_name RdsCluster#database_name}.
     *
     * @stability stable
     */
    readonly databaseName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#db_cluster_parameter_group_name RdsCluster#db_cluster_parameter_group_name}.
     *
     * @stability stable
     */
    readonly dbClusterParameterGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#db_instance_parameter_group_name RdsCluster#db_instance_parameter_group_name}.
     *
     * @stability stable
     */
    readonly dbInstanceParameterGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#db_subnet_group_name RdsCluster#db_subnet_group_name}.
     *
     * @stability stable
     */
    readonly dbSubnetGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#deletion_protection RdsCluster#deletion_protection}.
     *
     * @stability stable
     */
    readonly deletionProtection?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#enable_global_write_forwarding RdsCluster#enable_global_write_forwarding}.
     *
     * @stability stable
     */
    readonly enableGlobalWriteForwarding?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#enable_http_endpoint RdsCluster#enable_http_endpoint}.
     *
     * @stability stable
     */
    readonly enableHttpEndpoint?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#enabled_cloudwatch_logs_exports RdsCluster#enabled_cloudwatch_logs_exports}.
     *
     * @stability stable
     */
    readonly enabledCloudwatchLogsExports?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#engine RdsCluster#engine}.
     *
     * @stability stable
     */
    readonly engine?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#engine_mode RdsCluster#engine_mode}.
     *
     * @stability stable
     */
    readonly engineMode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#engine_version RdsCluster#engine_version}.
     *
     * @stability stable
     */
    readonly engineVersion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#final_snapshot_identifier RdsCluster#final_snapshot_identifier}.
     *
     * @stability stable
     */
    readonly finalSnapshotIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#global_cluster_identifier RdsCluster#global_cluster_identifier}.
     *
     * @stability stable
     */
    readonly globalClusterIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#iam_database_authentication_enabled RdsCluster#iam_database_authentication_enabled}.
     *
     * @stability stable
     */
    readonly iamDatabaseAuthenticationEnabled?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#iam_roles RdsCluster#iam_roles}.
     *
     * @stability stable
     */
    readonly iamRoles?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#kms_key_id RdsCluster#kms_key_id}.
     *
     * @stability stable
     */
    readonly kmsKeyId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#master_password RdsCluster#master_password}.
     *
     * @stability stable
     */
    readonly masterPassword?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#master_username RdsCluster#master_username}.
     *
     * @stability stable
     */
    readonly masterUsername?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#port RdsCluster#port}.
     *
     * @stability stable
     */
    readonly port?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#preferred_backup_window RdsCluster#preferred_backup_window}.
     *
     * @stability stable
     */
    readonly preferredBackupWindow?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#preferred_maintenance_window RdsCluster#preferred_maintenance_window}.
     *
     * @stability stable
     */
    readonly preferredMaintenanceWindow?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#replication_source_identifier RdsCluster#replication_source_identifier}.
     *
     * @stability stable
     */
    readonly replicationSourceIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#skip_final_snapshot RdsCluster#skip_final_snapshot}.
     *
     * @stability stable
     */
    readonly skipFinalSnapshot?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#snapshot_identifier RdsCluster#snapshot_identifier}.
     *
     * @stability stable
     */
    readonly snapshotIdentifier?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#source_region RdsCluster#source_region}.
     *
     * @stability stable
     */
    readonly sourceRegion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#storage_encrypted RdsCluster#storage_encrypted}.
     *
     * @stability stable
     */
    readonly storageEncrypted?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#tags RdsCluster#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#tags_all RdsCluster#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#vpc_security_group_ids RdsCluster#vpc_security_group_ids}.
     *
     * @stability stable
     */
    readonly vpcSecurityGroupIds?: string[];
    /**
     * restore_to_point_in_time block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#restore_to_point_in_time RdsCluster#restore_to_point_in_time}
     *
     * @stability stable
     */
    readonly restoreToPointInTime?: RdsClusterRestoreToPointInTime;
    /**
     * s3_import block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#s3_import RdsCluster#s3_import}
     *
     * @stability stable
     */
    readonly s3Import?: RdsClusterS3Import;
    /**
     * scaling_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#scaling_configuration RdsCluster#scaling_configuration}
     *
     * @stability stable
     */
    readonly scalingConfiguration?: RdsClusterScalingConfiguration;
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#timeouts RdsCluster#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: RdsClusterTimeouts;
}
/**
 * @stability stable
 */
export interface RdsClusterRestoreToPointInTime {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#restore_to_time RdsCluster#restore_to_time}.
     *
     * @stability stable
     */
    readonly restoreToTime?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#restore_type RdsCluster#restore_type}.
     *
     * @stability stable
     */
    readonly restoreType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#source_cluster_identifier RdsCluster#source_cluster_identifier}.
     *
     * @stability stable
     */
    readonly sourceClusterIdentifier: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#use_latest_restorable_time RdsCluster#use_latest_restorable_time}.
     *
     * @stability stable
     */
    readonly useLatestRestorableTime?: boolean | cdktf.IResolvable;
}
export declare function rdsClusterRestoreToPointInTimeToTerraform(struct?: RdsClusterRestoreToPointInTimeOutputReference | RdsClusterRestoreToPointInTime): any;
/**
 * @stability stable
 */
export declare class RdsClusterRestoreToPointInTimeOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RdsClusterRestoreToPointInTime | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RdsClusterRestoreToPointInTime | undefined);
    private _restoreToTime?;
    /**
     * @stability stable
     */
    get restoreToTime(): string;
    /**
     * @stability stable
     */
    set restoreToTime(value: string);
    /**
     * @stability stable
     */
    resetRestoreToTime(): void;
    /**
     * @stability stable
     */
    get restoreToTimeInput(): string | undefined;
    private _restoreType?;
    /**
     * @stability stable
     */
    get restoreType(): string;
    /**
     * @stability stable
     */
    set restoreType(value: string);
    /**
     * @stability stable
     */
    resetRestoreType(): void;
    /**
     * @stability stable
     */
    get restoreTypeInput(): string | undefined;
    private _sourceClusterIdentifier?;
    /**
     * @stability stable
     */
    get sourceClusterIdentifier(): string;
    /**
     * @stability stable
     */
    set sourceClusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get sourceClusterIdentifierInput(): string | undefined;
    private _useLatestRestorableTime?;
    /**
     * @stability stable
     */
    get useLatestRestorableTime(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set useLatestRestorableTime(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetUseLatestRestorableTime(): void;
    /**
     * @stability stable
     */
    get useLatestRestorableTimeInput(): boolean | cdktf.IResolvable | undefined;
}
/**
 * @stability stable
 */
export interface RdsClusterS3Import {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#bucket_name RdsCluster#bucket_name}.
     *
     * @stability stable
     */
    readonly bucketName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#bucket_prefix RdsCluster#bucket_prefix}.
     *
     * @stability stable
     */
    readonly bucketPrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#ingestion_role RdsCluster#ingestion_role}.
     *
     * @stability stable
     */
    readonly ingestionRole: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#source_engine RdsCluster#source_engine}.
     *
     * @stability stable
     */
    readonly sourceEngine: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#source_engine_version RdsCluster#source_engine_version}.
     *
     * @stability stable
     */
    readonly sourceEngineVersion: string;
}
export declare function rdsClusterS3ImportToTerraform(struct?: RdsClusterS3ImportOutputReference | RdsClusterS3Import): any;
/**
 * @stability stable
 */
export declare class RdsClusterS3ImportOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RdsClusterS3Import | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RdsClusterS3Import | undefined);
    private _bucketName?;
    /**
     * @stability stable
     */
    get bucketName(): string;
    /**
     * @stability stable
     */
    set bucketName(value: string);
    /**
     * @stability stable
     */
    get bucketNameInput(): string | undefined;
    private _bucketPrefix?;
    /**
     * @stability stable
     */
    get bucketPrefix(): string;
    /**
     * @stability stable
     */
    set bucketPrefix(value: string);
    /**
     * @stability stable
     */
    resetBucketPrefix(): void;
    /**
     * @stability stable
     */
    get bucketPrefixInput(): string | undefined;
    private _ingestionRole?;
    /**
     * @stability stable
     */
    get ingestionRole(): string;
    /**
     * @stability stable
     */
    set ingestionRole(value: string);
    /**
     * @stability stable
     */
    get ingestionRoleInput(): string | undefined;
    private _sourceEngine?;
    /**
     * @stability stable
     */
    get sourceEngine(): string;
    /**
     * @stability stable
     */
    set sourceEngine(value: string);
    /**
     * @stability stable
     */
    get sourceEngineInput(): string | undefined;
    private _sourceEngineVersion?;
    /**
     * @stability stable
     */
    get sourceEngineVersion(): string;
    /**
     * @stability stable
     */
    set sourceEngineVersion(value: string);
    /**
     * @stability stable
     */
    get sourceEngineVersionInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface RdsClusterScalingConfiguration {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#auto_pause RdsCluster#auto_pause}.
     *
     * @stability stable
     */
    readonly autoPause?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#max_capacity RdsCluster#max_capacity}.
     *
     * @stability stable
     */
    readonly maxCapacity?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#min_capacity RdsCluster#min_capacity}.
     *
     * @stability stable
     */
    readonly minCapacity?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#seconds_until_auto_pause RdsCluster#seconds_until_auto_pause}.
     *
     * @stability stable
     */
    readonly secondsUntilAutoPause?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#timeout_action RdsCluster#timeout_action}.
     *
     * @stability stable
     */
    readonly timeoutAction?: string;
}
export declare function rdsClusterScalingConfigurationToTerraform(struct?: RdsClusterScalingConfigurationOutputReference | RdsClusterScalingConfiguration): any;
/**
 * @stability stable
 */
export declare class RdsClusterScalingConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RdsClusterScalingConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RdsClusterScalingConfiguration | undefined);
    private _autoPause?;
    /**
     * @stability stable
     */
    get autoPause(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set autoPause(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAutoPause(): void;
    /**
     * @stability stable
     */
    get autoPauseInput(): boolean | cdktf.IResolvable | undefined;
    private _maxCapacity?;
    /**
     * @stability stable
     */
    get maxCapacity(): number;
    /**
     * @stability stable
     */
    set maxCapacity(value: number);
    /**
     * @stability stable
     */
    resetMaxCapacity(): void;
    /**
     * @stability stable
     */
    get maxCapacityInput(): number | undefined;
    private _minCapacity?;
    /**
     * @stability stable
     */
    get minCapacity(): number;
    /**
     * @stability stable
     */
    set minCapacity(value: number);
    /**
     * @stability stable
     */
    resetMinCapacity(): void;
    /**
     * @stability stable
     */
    get minCapacityInput(): number | undefined;
    private _secondsUntilAutoPause?;
    /**
     * @stability stable
     */
    get secondsUntilAutoPause(): number;
    /**
     * @stability stable
     */
    set secondsUntilAutoPause(value: number);
    /**
     * @stability stable
     */
    resetSecondsUntilAutoPause(): void;
    /**
     * @stability stable
     */
    get secondsUntilAutoPauseInput(): number | undefined;
    private _timeoutAction?;
    /**
     * @stability stable
     */
    get timeoutAction(): string;
    /**
     * @stability stable
     */
    set timeoutAction(value: string);
    /**
     * @stability stable
     */
    resetTimeoutAction(): void;
    /**
     * @stability stable
     */
    get timeoutActionInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface RdsClusterTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#create RdsCluster#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#delete RdsCluster#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html#update RdsCluster#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function rdsClusterTimeoutsToTerraform(struct?: RdsClusterTimeoutsOutputReference | RdsClusterTimeouts): any;
/**
 * @stability stable
 */
export declare class RdsClusterTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RdsClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RdsClusterTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html aws_rds_cluster}.
 *
 * @stability stable
 */
export declare class RdsCluster extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster.html aws_rds_cluster} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: RdsClusterConfig);
    private _allowMajorVersionUpgrade?;
    /**
     * @stability stable
     */
    get allowMajorVersionUpgrade(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowMajorVersionUpgrade(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowMajorVersionUpgrade(): void;
    /**
     * @stability stable
     */
    get allowMajorVersionUpgradeInput(): boolean | cdktf.IResolvable | undefined;
    private _applyImmediately?;
    /**
     * @stability stable
     */
    get applyImmediately(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set applyImmediately(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetApplyImmediately(): void;
    /**
     * @stability stable
     */
    get applyImmediatelyInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    private _availabilityZones?;
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    /**
     * @stability stable
     */
    set availabilityZones(value: string[]);
    /**
     * @stability stable
     */
    resetAvailabilityZones(): void;
    /**
     * @stability stable
     */
    get availabilityZonesInput(): string[] | undefined;
    private _backtrackWindow?;
    /**
     * @stability stable
     */
    get backtrackWindow(): number;
    /**
     * @stability stable
     */
    set backtrackWindow(value: number);
    /**
     * @stability stable
     */
    resetBacktrackWindow(): void;
    /**
     * @stability stable
     */
    get backtrackWindowInput(): number | undefined;
    private _backupRetentionPeriod?;
    /**
     * @stability stable
     */
    get backupRetentionPeriod(): number;
    /**
     * @stability stable
     */
    set backupRetentionPeriod(value: number);
    /**
     * @stability stable
     */
    resetBackupRetentionPeriod(): void;
    /**
     * @stability stable
     */
    get backupRetentionPeriodInput(): number | undefined;
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    resetClusterIdentifier(): void;
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
    private _clusterIdentifierPrefix?;
    /**
     * @stability stable
     */
    get clusterIdentifierPrefix(): string;
    /**
     * @stability stable
     */
    set clusterIdentifierPrefix(value: string);
    /**
     * @stability stable
     */
    resetClusterIdentifierPrefix(): void;
    /**
     * @stability stable
     */
    get clusterIdentifierPrefixInput(): string | undefined;
    private _clusterMembers?;
    /**
     * @stability stable
     */
    get clusterMembers(): string[];
    /**
     * @stability stable
     */
    set clusterMembers(value: string[]);
    /**
     * @stability stable
     */
    resetClusterMembers(): void;
    /**
     * @stability stable
     */
    get clusterMembersInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get clusterResourceId(): string;
    private _copyTagsToSnapshot?;
    /**
     * @stability stable
     */
    get copyTagsToSnapshot(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set copyTagsToSnapshot(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetCopyTagsToSnapshot(): void;
    /**
     * @stability stable
     */
    get copyTagsToSnapshotInput(): boolean | cdktf.IResolvable | undefined;
    private _databaseName?;
    /**
     * @stability stable
     */
    get databaseName(): string;
    /**
     * @stability stable
     */
    set databaseName(value: string);
    /**
     * @stability stable
     */
    resetDatabaseName(): void;
    /**
     * @stability stable
     */
    get databaseNameInput(): string | undefined;
    private _dbClusterParameterGroupName?;
    /**
     * @stability stable
     */
    get dbClusterParameterGroupName(): string;
    /**
     * @stability stable
     */
    set dbClusterParameterGroupName(value: string);
    /**
     * @stability stable
     */
    resetDbClusterParameterGroupName(): void;
    /**
     * @stability stable
     */
    get dbClusterParameterGroupNameInput(): string | undefined;
    private _dbInstanceParameterGroupName?;
    /**
     * @stability stable
     */
    get dbInstanceParameterGroupName(): string;
    /**
     * @stability stable
     */
    set dbInstanceParameterGroupName(value: string);
    /**
     * @stability stable
     */
    resetDbInstanceParameterGroupName(): void;
    /**
     * @stability stable
     */
    get dbInstanceParameterGroupNameInput(): string | undefined;
    private _dbSubnetGroupName?;
    /**
     * @stability stable
     */
    get dbSubnetGroupName(): string;
    /**
     * @stability stable
     */
    set dbSubnetGroupName(value: string);
    /**
     * @stability stable
     */
    resetDbSubnetGroupName(): void;
    /**
     * @stability stable
     */
    get dbSubnetGroupNameInput(): string | undefined;
    private _deletionProtection?;
    /**
     * @stability stable
     */
    get deletionProtection(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set deletionProtection(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetDeletionProtection(): void;
    /**
     * @stability stable
     */
    get deletionProtectionInput(): boolean | cdktf.IResolvable | undefined;
    private _enableGlobalWriteForwarding?;
    /**
     * @stability stable
     */
    get enableGlobalWriteForwarding(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableGlobalWriteForwarding(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableGlobalWriteForwarding(): void;
    /**
     * @stability stable
     */
    get enableGlobalWriteForwardingInput(): boolean | cdktf.IResolvable | undefined;
    private _enableHttpEndpoint?;
    /**
     * @stability stable
     */
    get enableHttpEndpoint(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableHttpEndpoint(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableHttpEndpoint(): void;
    /**
     * @stability stable
     */
    get enableHttpEndpointInput(): boolean | cdktf.IResolvable | undefined;
    private _enabledCloudwatchLogsExports?;
    /**
     * @stability stable
     */
    get enabledCloudwatchLogsExports(): string[];
    /**
     * @stability stable
     */
    set enabledCloudwatchLogsExports(value: string[]);
    /**
     * @stability stable
     */
    resetEnabledCloudwatchLogsExports(): void;
    /**
     * @stability stable
     */
    get enabledCloudwatchLogsExportsInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get endpoint(): string;
    private _engine?;
    /**
     * @stability stable
     */
    get engine(): string;
    /**
     * @stability stable
     */
    set engine(value: string);
    /**
     * @stability stable
     */
    resetEngine(): void;
    /**
     * @stability stable
     */
    get engineInput(): string | undefined;
    private _engineMode?;
    /**
     * @stability stable
     */
    get engineMode(): string;
    /**
     * @stability stable
     */
    set engineMode(value: string);
    /**
     * @stability stable
     */
    resetEngineMode(): void;
    /**
     * @stability stable
     */
    get engineModeInput(): string | undefined;
    private _engineVersion?;
    /**
     * @stability stable
     */
    get engineVersion(): string;
    /**
     * @stability stable
     */
    set engineVersion(value: string);
    /**
     * @stability stable
     */
    resetEngineVersion(): void;
    /**
     * @stability stable
     */
    get engineVersionInput(): string | undefined;
    /**
     * @stability stable
     */
    get engineVersionActual(): string;
    private _finalSnapshotIdentifier?;
    /**
     * @stability stable
     */
    get finalSnapshotIdentifier(): string;
    /**
     * @stability stable
     */
    set finalSnapshotIdentifier(value: string);
    /**
     * @stability stable
     */
    resetFinalSnapshotIdentifier(): void;
    /**
     * @stability stable
     */
    get finalSnapshotIdentifierInput(): string | undefined;
    private _globalClusterIdentifier?;
    /**
     * @stability stable
     */
    get globalClusterIdentifier(): string;
    /**
     * @stability stable
     */
    set globalClusterIdentifier(value: string);
    /**
     * @stability stable
     */
    resetGlobalClusterIdentifier(): void;
    /**
     * @stability stable
     */
    get globalClusterIdentifierInput(): string | undefined;
    /**
     * @stability stable
     */
    get hostedZoneId(): string;
    private _iamDatabaseAuthenticationEnabled?;
    /**
     * @stability stable
     */
    get iamDatabaseAuthenticationEnabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set iamDatabaseAuthenticationEnabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetIamDatabaseAuthenticationEnabled(): void;
    /**
     * @stability stable
     */
    get iamDatabaseAuthenticationEnabledInput(): boolean | cdktf.IResolvable | undefined;
    private _iamRoles?;
    /**
     * @stability stable
     */
    get iamRoles(): string[];
    /**
     * @stability stable
     */
    set iamRoles(value: string[]);
    /**
     * @stability stable
     */
    resetIamRoles(): void;
    /**
     * @stability stable
     */
    get iamRolesInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _kmsKeyId?;
    /**
     * @stability stable
     */
    get kmsKeyId(): string;
    /**
     * @stability stable
     */
    set kmsKeyId(value: string);
    /**
     * @stability stable
     */
    resetKmsKeyId(): void;
    /**
     * @stability stable
     */
    get kmsKeyIdInput(): string | undefined;
    private _masterPassword?;
    /**
     * @stability stable
     */
    get masterPassword(): string;
    /**
     * @stability stable
     */
    set masterPassword(value: string);
    /**
     * @stability stable
     */
    resetMasterPassword(): void;
    /**
     * @stability stable
     */
    get masterPasswordInput(): string | undefined;
    private _masterUsername?;
    /**
     * @stability stable
     */
    get masterUsername(): string;
    /**
     * @stability stable
     */
    set masterUsername(value: string);
    /**
     * @stability stable
     */
    resetMasterUsername(): void;
    /**
     * @stability stable
     */
    get masterUsernameInput(): string | undefined;
    private _port?;
    /**
     * @stability stable
     */
    get port(): number;
    /**
     * @stability stable
     */
    set port(value: number);
    /**
     * @stability stable
     */
    resetPort(): void;
    /**
     * @stability stable
     */
    get portInput(): number | undefined;
    private _preferredBackupWindow?;
    /**
     * @stability stable
     */
    get preferredBackupWindow(): string;
    /**
     * @stability stable
     */
    set preferredBackupWindow(value: string);
    /**
     * @stability stable
     */
    resetPreferredBackupWindow(): void;
    /**
     * @stability stable
     */
    get preferredBackupWindowInput(): string | undefined;
    private _preferredMaintenanceWindow?;
    /**
     * @stability stable
     */
    get preferredMaintenanceWindow(): string;
    /**
     * @stability stable
     */
    set preferredMaintenanceWindow(value: string);
    /**
     * @stability stable
     */
    resetPreferredMaintenanceWindow(): void;
    /**
     * @stability stable
     */
    get preferredMaintenanceWindowInput(): string | undefined;
    /**
     * @stability stable
     */
    get readerEndpoint(): string;
    private _replicationSourceIdentifier?;
    /**
     * @stability stable
     */
    get replicationSourceIdentifier(): string;
    /**
     * @stability stable
     */
    set replicationSourceIdentifier(value: string);
    /**
     * @stability stable
     */
    resetReplicationSourceIdentifier(): void;
    /**
     * @stability stable
     */
    get replicationSourceIdentifierInput(): string | undefined;
    private _skipFinalSnapshot?;
    /**
     * @stability stable
     */
    get skipFinalSnapshot(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set skipFinalSnapshot(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetSkipFinalSnapshot(): void;
    /**
     * @stability stable
     */
    get skipFinalSnapshotInput(): boolean | cdktf.IResolvable | undefined;
    private _snapshotIdentifier?;
    /**
     * @stability stable
     */
    get snapshotIdentifier(): string;
    /**
     * @stability stable
     */
    set snapshotIdentifier(value: string);
    /**
     * @stability stable
     */
    resetSnapshotIdentifier(): void;
    /**
     * @stability stable
     */
    get snapshotIdentifierInput(): string | undefined;
    private _sourceRegion?;
    /**
     * @stability stable
     */
    get sourceRegion(): string;
    /**
     * @stability stable
     */
    set sourceRegion(value: string);
    /**
     * @stability stable
     */
    resetSourceRegion(): void;
    /**
     * @stability stable
     */
    get sourceRegionInput(): string | undefined;
    private _storageEncrypted?;
    /**
     * @stability stable
     */
    get storageEncrypted(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set storageEncrypted(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetStorageEncrypted(): void;
    /**
     * @stability stable
     */
    get storageEncryptedInput(): boolean | cdktf.IResolvable | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _vpcSecurityGroupIds?;
    /**
     * @stability stable
     */
    get vpcSecurityGroupIds(): string[];
    /**
     * @stability stable
     */
    set vpcSecurityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    resetVpcSecurityGroupIds(): void;
    /**
     * @stability stable
     */
    get vpcSecurityGroupIdsInput(): string[] | undefined;
    private _restoreToPointInTime;
    /**
     * @stability stable
     */
    get restoreToPointInTime(): RdsClusterRestoreToPointInTimeOutputReference;
    /**
     * @stability stable
     */
    putRestoreToPointInTime(value: RdsClusterRestoreToPointInTime): void;
    /**
     * @stability stable
     */
    resetRestoreToPointInTime(): void;
    /**
     * @stability stable
     */
    get restoreToPointInTimeInput(): RdsClusterRestoreToPointInTime | undefined;
    private _s3Import;
    /**
     * @stability stable
     */
    get s3Import(): RdsClusterS3ImportOutputReference;
    /**
     * @stability stable
     */
    putS3Import(value: RdsClusterS3Import): void;
    /**
     * @stability stable
     */
    resetS3Import(): void;
    /**
     * @stability stable
     */
    get s3ImportInput(): RdsClusterS3Import | undefined;
    private _scalingConfiguration;
    /**
     * @stability stable
     */
    get scalingConfiguration(): RdsClusterScalingConfigurationOutputReference;
    /**
     * @stability stable
     */
    putScalingConfiguration(value: RdsClusterScalingConfiguration): void;
    /**
     * @stability stable
     */
    resetScalingConfiguration(): void;
    /**
     * @stability stable
     */
    get scalingConfigurationInput(): RdsClusterScalingConfiguration | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): RdsClusterTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: RdsClusterTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): RdsClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

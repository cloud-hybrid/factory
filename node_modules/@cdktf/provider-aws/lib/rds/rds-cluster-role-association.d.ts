import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Relational Database Service.
 *
 * @stability stable
 */
export interface RdsClusterRoleAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster_role_association.html#db_cluster_identifier RdsClusterRoleAssociation#db_cluster_identifier}.
     *
     * @stability stable
     */
    readonly dbClusterIdentifier: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster_role_association.html#feature_name RdsClusterRoleAssociation#feature_name}.
     *
     * @stability stable
     */
    readonly featureName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster_role_association.html#role_arn RdsClusterRoleAssociation#role_arn}.
     *
     * @stability stable
     */
    readonly roleArn: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster_role_association.html aws_rds_cluster_role_association}.
 *
 * @stability stable
 */
export declare class RdsClusterRoleAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/rds_cluster_role_association.html aws_rds_cluster_role_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: RdsClusterRoleAssociationConfig);
    private _dbClusterIdentifier?;
    /**
     * @stability stable
     */
    get dbClusterIdentifier(): string;
    /**
     * @stability stable
     */
    set dbClusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get dbClusterIdentifierInput(): string | undefined;
    private _featureName?;
    /**
     * @stability stable
     */
    get featureName(): string;
    /**
     * @stability stable
     */
    set featureName(value: string);
    /**
     * @stability stable
     */
    get featureNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _roleArn?;
    /**
     * @stability stable
     */
    get roleArn(): string;
    /**
     * @stability stable
     */
    set roleArn(value: string);
    /**
     * @stability stable
     */
    get roleArnInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

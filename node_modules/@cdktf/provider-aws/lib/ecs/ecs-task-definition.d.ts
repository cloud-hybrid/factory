import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS EC2 Container Service.
 *
 * @stability stable
 */
export interface EcsTaskDefinitionConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#container_definitions EcsTaskDefinition#container_definitions}.
     *
     * @stability stable
     */
    readonly containerDefinitions: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#cpu EcsTaskDefinition#cpu}.
     *
     * @stability stable
     */
    readonly cpu?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#execution_role_arn EcsTaskDefinition#execution_role_arn}.
     *
     * @stability stable
     */
    readonly executionRoleArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#family EcsTaskDefinition#family}.
     *
     * @stability stable
     */
    readonly family: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#ipc_mode EcsTaskDefinition#ipc_mode}.
     *
     * @stability stable
     */
    readonly ipcMode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#memory EcsTaskDefinition#memory}.
     *
     * @stability stable
     */
    readonly memory?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#network_mode EcsTaskDefinition#network_mode}.
     *
     * @stability stable
     */
    readonly networkMode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#pid_mode EcsTaskDefinition#pid_mode}.
     *
     * @stability stable
     */
    readonly pidMode?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#requires_compatibilities EcsTaskDefinition#requires_compatibilities}.
     *
     * @stability stable
     */
    readonly requiresCompatibilities?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#tags EcsTaskDefinition#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#tags_all EcsTaskDefinition#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#task_role_arn EcsTaskDefinition#task_role_arn}.
     *
     * @stability stable
     */
    readonly taskRoleArn?: string;
    /**
     * ephemeral_storage block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#ephemeral_storage EcsTaskDefinition#ephemeral_storage}
     *
     * @stability stable
     */
    readonly ephemeralStorage?: EcsTaskDefinitionEphemeralStorage;
    /**
     * inference_accelerator block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#inference_accelerator EcsTaskDefinition#inference_accelerator}
     *
     * @stability stable
     */
    readonly inferenceAccelerator?: EcsTaskDefinitionInferenceAccelerator[];
    /**
     * placement_constraints block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#placement_constraints EcsTaskDefinition#placement_constraints}
     *
     * @stability stable
     */
    readonly placementConstraints?: EcsTaskDefinitionPlacementConstraints[];
    /**
     * proxy_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#proxy_configuration EcsTaskDefinition#proxy_configuration}
     *
     * @stability stable
     */
    readonly proxyConfiguration?: EcsTaskDefinitionProxyConfiguration;
    /**
     * volume block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#volume EcsTaskDefinition#volume}
     *
     * @stability stable
     */
    readonly volume?: EcsTaskDefinitionVolume[];
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionEphemeralStorage {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#size_in_gib EcsTaskDefinition#size_in_gib}.
     *
     * @stability stable
     */
    readonly sizeInGib: number;
}
export declare function ecsTaskDefinitionEphemeralStorageToTerraform(struct?: EcsTaskDefinitionEphemeralStorageOutputReference | EcsTaskDefinitionEphemeralStorage): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionEphemeralStorageOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionEphemeralStorage | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionEphemeralStorage | undefined);
    private _sizeInGib?;
    /**
     * @stability stable
     */
    get sizeInGib(): number;
    /**
     * @stability stable
     */
    set sizeInGib(value: number);
    /**
     * @stability stable
     */
    get sizeInGibInput(): number | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionInferenceAccelerator {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#device_name EcsTaskDefinition#device_name}.
     *
     * @stability stable
     */
    readonly deviceName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#device_type EcsTaskDefinition#device_type}.
     *
     * @stability stable
     */
    readonly deviceType: string;
}
export declare function ecsTaskDefinitionInferenceAcceleratorToTerraform(struct?: EcsTaskDefinitionInferenceAccelerator): any;
/**
 * @stability stable
 */
export interface EcsTaskDefinitionPlacementConstraints {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#expression EcsTaskDefinition#expression}.
     *
     * @stability stable
     */
    readonly expression?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#type EcsTaskDefinition#type}.
     *
     * @stability stable
     */
    readonly type: string;
}
export declare function ecsTaskDefinitionPlacementConstraintsToTerraform(struct?: EcsTaskDefinitionPlacementConstraints): any;
/**
 * @stability stable
 */
export interface EcsTaskDefinitionProxyConfiguration {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#container_name EcsTaskDefinition#container_name}.
     *
     * @stability stable
     */
    readonly containerName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#properties EcsTaskDefinition#properties}.
     *
     * @stability stable
     */
    readonly properties?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#type EcsTaskDefinition#type}.
     *
     * @stability stable
     */
    readonly type?: string;
}
export declare function ecsTaskDefinitionProxyConfigurationToTerraform(struct?: EcsTaskDefinitionProxyConfigurationOutputReference | EcsTaskDefinitionProxyConfiguration): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionProxyConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionProxyConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionProxyConfiguration | undefined);
    private _containerName?;
    /**
     * @stability stable
     */
    get containerName(): string;
    /**
     * @stability stable
     */
    set containerName(value: string);
    /**
     * @stability stable
     */
    get containerNameInput(): string | undefined;
    private _properties?;
    /**
     * @stability stable
     */
    get properties(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set properties(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetProperties(): void;
    /**
     * @stability stable
     */
    get propertiesInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _type?;
    /**
     * @stability stable
     */
    get type(): string;
    /**
     * @stability stable
     */
    set type(value: string);
    /**
     * @stability stable
     */
    resetType(): void;
    /**
     * @stability stable
     */
    get typeInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolumeDockerVolumeConfiguration {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#autoprovision EcsTaskDefinition#autoprovision}.
     *
     * @stability stable
     */
    readonly autoprovision?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#driver EcsTaskDefinition#driver}.
     *
     * @stability stable
     */
    readonly driver?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#driver_opts EcsTaskDefinition#driver_opts}.
     *
     * @stability stable
     */
    readonly driverOpts?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#labels EcsTaskDefinition#labels}.
     *
     * @stability stable
     */
    readonly labels?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#scope EcsTaskDefinition#scope}.
     *
     * @stability stable
     */
    readonly scope?: string;
}
export declare function ecsTaskDefinitionVolumeDockerVolumeConfigurationToTerraform(struct?: EcsTaskDefinitionVolumeDockerVolumeConfigurationOutputReference | EcsTaskDefinitionVolumeDockerVolumeConfiguration): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionVolumeDockerVolumeConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionVolumeDockerVolumeConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionVolumeDockerVolumeConfiguration | undefined);
    private _autoprovision?;
    /**
     * @stability stable
     */
    get autoprovision(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set autoprovision(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAutoprovision(): void;
    /**
     * @stability stable
     */
    get autoprovisionInput(): boolean | cdktf.IResolvable | undefined;
    private _driver?;
    /**
     * @stability stable
     */
    get driver(): string;
    /**
     * @stability stable
     */
    set driver(value: string);
    /**
     * @stability stable
     */
    resetDriver(): void;
    /**
     * @stability stable
     */
    get driverInput(): string | undefined;
    private _driverOpts?;
    /**
     * @stability stable
     */
    get driverOpts(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set driverOpts(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetDriverOpts(): void;
    /**
     * @stability stable
     */
    get driverOptsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _labels?;
    /**
     * @stability stable
     */
    get labels(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set labels(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetLabels(): void;
    /**
     * @stability stable
     */
    get labelsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _scope?;
    /**
     * @stability stable
     */
    get scope(): string;
    /**
     * @stability stable
     */
    set scope(value: string);
    /**
     * @stability stable
     */
    resetScope(): void;
    /**
     * @stability stable
     */
    get scopeInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#access_point_id EcsTaskDefinition#access_point_id}.
     *
     * @stability stable
     */
    readonly accessPointId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#iam EcsTaskDefinition#iam}.
     *
     * @stability stable
     */
    readonly iam?: string;
}
export declare function ecsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigToTerraform(struct?: EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigOutputReference | EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig | undefined);
    private _accessPointId?;
    /**
     * @stability stable
     */
    get accessPointId(): string;
    /**
     * @stability stable
     */
    set accessPointId(value: string);
    /**
     * @stability stable
     */
    resetAccessPointId(): void;
    /**
     * @stability stable
     */
    get accessPointIdInput(): string | undefined;
    private _iam?;
    /**
     * @stability stable
     */
    get iam(): string;
    /**
     * @stability stable
     */
    set iam(value: string);
    /**
     * @stability stable
     */
    resetIam(): void;
    /**
     * @stability stable
     */
    get iamInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolumeEfsVolumeConfiguration {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#file_system_id EcsTaskDefinition#file_system_id}.
     *
     * @stability stable
     */
    readonly fileSystemId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#root_directory EcsTaskDefinition#root_directory}.
     *
     * @stability stable
     */
    readonly rootDirectory?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#transit_encryption EcsTaskDefinition#transit_encryption}.
     *
     * @stability stable
     */
    readonly transitEncryption?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#transit_encryption_port EcsTaskDefinition#transit_encryption_port}.
     *
     * @stability stable
     */
    readonly transitEncryptionPort?: number;
    /**
     * authorization_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#authorization_config EcsTaskDefinition#authorization_config}
     *
     * @stability stable
     */
    readonly authorizationConfig?: EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig;
}
export declare function ecsTaskDefinitionVolumeEfsVolumeConfigurationToTerraform(struct?: EcsTaskDefinitionVolumeEfsVolumeConfigurationOutputReference | EcsTaskDefinitionVolumeEfsVolumeConfiguration): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionVolumeEfsVolumeConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionVolumeEfsVolumeConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionVolumeEfsVolumeConfiguration | undefined);
    private _fileSystemId?;
    /**
     * @stability stable
     */
    get fileSystemId(): string;
    /**
     * @stability stable
     */
    set fileSystemId(value: string);
    /**
     * @stability stable
     */
    get fileSystemIdInput(): string | undefined;
    private _rootDirectory?;
    /**
     * @stability stable
     */
    get rootDirectory(): string;
    /**
     * @stability stable
     */
    set rootDirectory(value: string);
    /**
     * @stability stable
     */
    resetRootDirectory(): void;
    /**
     * @stability stable
     */
    get rootDirectoryInput(): string | undefined;
    private _transitEncryption?;
    /**
     * @stability stable
     */
    get transitEncryption(): string;
    /**
     * @stability stable
     */
    set transitEncryption(value: string);
    /**
     * @stability stable
     */
    resetTransitEncryption(): void;
    /**
     * @stability stable
     */
    get transitEncryptionInput(): string | undefined;
    private _transitEncryptionPort?;
    /**
     * @stability stable
     */
    get transitEncryptionPort(): number;
    /**
     * @stability stable
     */
    set transitEncryptionPort(value: number);
    /**
     * @stability stable
     */
    resetTransitEncryptionPort(): void;
    /**
     * @stability stable
     */
    get transitEncryptionPortInput(): number | undefined;
    private _authorizationConfig;
    /**
     * @stability stable
     */
    get authorizationConfig(): EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfigOutputReference;
    /**
     * @stability stable
     */
    putAuthorizationConfig(value: EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig): void;
    /**
     * @stability stable
     */
    resetAuthorizationConfig(): void;
    /**
     * @stability stable
     */
    get authorizationConfigInput(): EcsTaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#credentials_parameter EcsTaskDefinition#credentials_parameter}.
     *
     * @stability stable
     */
    readonly credentialsParameter: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#domain EcsTaskDefinition#domain}.
     *
     * @stability stable
     */
    readonly domain: string;
}
export declare function ecsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfigToTerraform(struct?: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfigOutputReference | EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig | undefined);
    private _credentialsParameter?;
    /**
     * @stability stable
     */
    get credentialsParameter(): string;
    /**
     * @stability stable
     */
    set credentialsParameter(value: string);
    /**
     * @stability stable
     */
    get credentialsParameterInput(): string | undefined;
    private _domain?;
    /**
     * @stability stable
     */
    get domain(): string;
    /**
     * @stability stable
     */
    set domain(value: string);
    /**
     * @stability stable
     */
    get domainInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#file_system_id EcsTaskDefinition#file_system_id}.
     *
     * @stability stable
     */
    readonly fileSystemId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#root_directory EcsTaskDefinition#root_directory}.
     *
     * @stability stable
     */
    readonly rootDirectory: string;
    /**
     * authorization_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#authorization_config EcsTaskDefinition#authorization_config}
     *
     * @stability stable
     */
    readonly authorizationConfig: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig;
}
export declare function ecsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationToTerraform(struct?: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationOutputReference | EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration): any;
/**
 * @stability stable
 */
export declare class EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration | undefined);
    private _fileSystemId?;
    /**
     * @stability stable
     */
    get fileSystemId(): string;
    /**
     * @stability stable
     */
    set fileSystemId(value: string);
    /**
     * @stability stable
     */
    get fileSystemIdInput(): string | undefined;
    private _rootDirectory?;
    /**
     * @stability stable
     */
    get rootDirectory(): string;
    /**
     * @stability stable
     */
    set rootDirectory(value: string);
    /**
     * @stability stable
     */
    get rootDirectoryInput(): string | undefined;
    private _authorizationConfig;
    /**
     * @stability stable
     */
    get authorizationConfig(): EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfigOutputReference;
    /**
     * @stability stable
     */
    putAuthorizationConfig(value: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig): void;
    /**
     * @stability stable
     */
    get authorizationConfigInput(): EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfigurationAuthorizationConfig | undefined;
}
/**
 * @stability stable
 */
export interface EcsTaskDefinitionVolume {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#host_path EcsTaskDefinition#host_path}.
     *
     * @stability stable
     */
    readonly hostPath?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#name EcsTaskDefinition#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * docker_volume_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#docker_volume_configuration EcsTaskDefinition#docker_volume_configuration}
     *
     * @stability stable
     */
    readonly dockerVolumeConfiguration?: EcsTaskDefinitionVolumeDockerVolumeConfiguration;
    /**
     * efs_volume_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#efs_volume_configuration EcsTaskDefinition#efs_volume_configuration}
     *
     * @stability stable
     */
    readonly efsVolumeConfiguration?: EcsTaskDefinitionVolumeEfsVolumeConfiguration;
    /**
     * fsx_windows_file_server_volume_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html#fsx_windows_file_server_volume_configuration EcsTaskDefinition#fsx_windows_file_server_volume_configuration}
     *
     * @stability stable
     */
    readonly fsxWindowsFileServerVolumeConfiguration?: EcsTaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration;
}
export declare function ecsTaskDefinitionVolumeToTerraform(struct?: EcsTaskDefinitionVolume): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html aws_ecs_task_definition}.
 *
 * @stability stable
 */
export declare class EcsTaskDefinition extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ecs_task_definition.html aws_ecs_task_definition} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: EcsTaskDefinitionConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _containerDefinitions?;
    /**
     * @stability stable
     */
    get containerDefinitions(): string;
    /**
     * @stability stable
     */
    set containerDefinitions(value: string);
    /**
     * @stability stable
     */
    get containerDefinitionsInput(): string | undefined;
    private _cpu?;
    /**
     * @stability stable
     */
    get cpu(): string;
    /**
     * @stability stable
     */
    set cpu(value: string);
    /**
     * @stability stable
     */
    resetCpu(): void;
    /**
     * @stability stable
     */
    get cpuInput(): string | undefined;
    private _executionRoleArn?;
    /**
     * @stability stable
     */
    get executionRoleArn(): string;
    /**
     * @stability stable
     */
    set executionRoleArn(value: string);
    /**
     * @stability stable
     */
    resetExecutionRoleArn(): void;
    /**
     * @stability stable
     */
    get executionRoleArnInput(): string | undefined;
    private _family?;
    /**
     * @stability stable
     */
    get family(): string;
    /**
     * @stability stable
     */
    set family(value: string);
    /**
     * @stability stable
     */
    get familyInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _ipcMode?;
    /**
     * @stability stable
     */
    get ipcMode(): string;
    /**
     * @stability stable
     */
    set ipcMode(value: string);
    /**
     * @stability stable
     */
    resetIpcMode(): void;
    /**
     * @stability stable
     */
    get ipcModeInput(): string | undefined;
    private _memory?;
    /**
     * @stability stable
     */
    get memory(): string;
    /**
     * @stability stable
     */
    set memory(value: string);
    /**
     * @stability stable
     */
    resetMemory(): void;
    /**
     * @stability stable
     */
    get memoryInput(): string | undefined;
    private _networkMode?;
    /**
     * @stability stable
     */
    get networkMode(): string;
    /**
     * @stability stable
     */
    set networkMode(value: string);
    /**
     * @stability stable
     */
    resetNetworkMode(): void;
    /**
     * @stability stable
     */
    get networkModeInput(): string | undefined;
    private _pidMode?;
    /**
     * @stability stable
     */
    get pidMode(): string;
    /**
     * @stability stable
     */
    set pidMode(value: string);
    /**
     * @stability stable
     */
    resetPidMode(): void;
    /**
     * @stability stable
     */
    get pidModeInput(): string | undefined;
    private _requiresCompatibilities?;
    /**
     * @stability stable
     */
    get requiresCompatibilities(): string[];
    /**
     * @stability stable
     */
    set requiresCompatibilities(value: string[]);
    /**
     * @stability stable
     */
    resetRequiresCompatibilities(): void;
    /**
     * @stability stable
     */
    get requiresCompatibilitiesInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get revision(): number;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _taskRoleArn?;
    /**
     * @stability stable
     */
    get taskRoleArn(): string;
    /**
     * @stability stable
     */
    set taskRoleArn(value: string);
    /**
     * @stability stable
     */
    resetTaskRoleArn(): void;
    /**
     * @stability stable
     */
    get taskRoleArnInput(): string | undefined;
    private _ephemeralStorage;
    /**
     * @stability stable
     */
    get ephemeralStorage(): EcsTaskDefinitionEphemeralStorageOutputReference;
    /**
     * @stability stable
     */
    putEphemeralStorage(value: EcsTaskDefinitionEphemeralStorage): void;
    /**
     * @stability stable
     */
    resetEphemeralStorage(): void;
    /**
     * @stability stable
     */
    get ephemeralStorageInput(): EcsTaskDefinitionEphemeralStorage | undefined;
    private _inferenceAccelerator?;
    /**
     * @stability stable
     */
    get inferenceAccelerator(): EcsTaskDefinitionInferenceAccelerator[];
    /**
     * @stability stable
     */
    set inferenceAccelerator(value: EcsTaskDefinitionInferenceAccelerator[]);
    /**
     * @stability stable
     */
    resetInferenceAccelerator(): void;
    /**
     * @stability stable
     */
    get inferenceAcceleratorInput(): EcsTaskDefinitionInferenceAccelerator[] | undefined;
    private _placementConstraints?;
    /**
     * @stability stable
     */
    get placementConstraints(): EcsTaskDefinitionPlacementConstraints[];
    /**
     * @stability stable
     */
    set placementConstraints(value: EcsTaskDefinitionPlacementConstraints[]);
    /**
     * @stability stable
     */
    resetPlacementConstraints(): void;
    /**
     * @stability stable
     */
    get placementConstraintsInput(): EcsTaskDefinitionPlacementConstraints[] | undefined;
    private _proxyConfiguration;
    /**
     * @stability stable
     */
    get proxyConfiguration(): EcsTaskDefinitionProxyConfigurationOutputReference;
    /**
     * @stability stable
     */
    putProxyConfiguration(value: EcsTaskDefinitionProxyConfiguration): void;
    /**
     * @stability stable
     */
    resetProxyConfiguration(): void;
    /**
     * @stability stable
     */
    get proxyConfigurationInput(): EcsTaskDefinitionProxyConfiguration | undefined;
    private _volume?;
    /**
     * @stability stable
     */
    get volume(): EcsTaskDefinitionVolume[];
    /**
     * @stability stable
     */
    set volume(value: EcsTaskDefinitionVolume[]);
    /**
     * @stability stable
     */
    resetVolume(): void;
    /**
     * @stability stable
     */
    get volumeInput(): EcsTaskDefinitionVolume[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS IoT.
 *
 * @stability stable
 */
export interface IotAuthorizerConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#authorizer_function_arn IotAuthorizer#authorizer_function_arn}.
     *
     * @stability stable
     */
    readonly authorizerFunctionArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#name IotAuthorizer#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#signing_disabled IotAuthorizer#signing_disabled}.
     *
     * @stability stable
     */
    readonly signingDisabled?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#status IotAuthorizer#status}.
     *
     * @stability stable
     */
    readonly status?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#token_key_name IotAuthorizer#token_key_name}.
     *
     * @stability stable
     */
    readonly tokenKeyName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html#token_signing_public_keys IotAuthorizer#token_signing_public_keys}.
     *
     * @stability stable
     */
    readonly tokenSigningPublicKeys?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html aws_iot_authorizer}.
 *
 * @stability stable
 */
export declare class IotAuthorizer extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/iot_authorizer.html aws_iot_authorizer} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: IotAuthorizerConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _authorizerFunctionArn?;
    /**
     * @stability stable
     */
    get authorizerFunctionArn(): string;
    /**
     * @stability stable
     */
    set authorizerFunctionArn(value: string);
    /**
     * @stability stable
     */
    get authorizerFunctionArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _signingDisabled?;
    /**
     * @stability stable
     */
    get signingDisabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set signingDisabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetSigningDisabled(): void;
    /**
     * @stability stable
     */
    get signingDisabledInput(): boolean | cdktf.IResolvable | undefined;
    private _status?;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    set status(value: string);
    /**
     * @stability stable
     */
    resetStatus(): void;
    /**
     * @stability stable
     */
    get statusInput(): string | undefined;
    private _tokenKeyName?;
    /**
     * @stability stable
     */
    get tokenKeyName(): string;
    /**
     * @stability stable
     */
    set tokenKeyName(value: string);
    /**
     * @stability stable
     */
    resetTokenKeyName(): void;
    /**
     * @stability stable
     */
    get tokenKeyNameInput(): string | undefined;
    private _tokenSigningPublicKeys?;
    /**
     * @stability stable
     */
    get tokenSigningPublicKeys(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tokenSigningPublicKeys(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTokenSigningPublicKeys(): void;
    /**
     * @stability stable
     */
    get tokenSigningPublicKeysInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Elastic MapReduce.
 *
 * @stability stable
 */
export interface EmrInstanceGroupConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#autoscaling_policy EmrInstanceGroup#autoscaling_policy}.
     *
     * @stability stable
     */
    readonly autoscalingPolicy?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#bid_price EmrInstanceGroup#bid_price}.
     *
     * @stability stable
     */
    readonly bidPrice?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#cluster_id EmrInstanceGroup#cluster_id}.
     *
     * @stability stable
     */
    readonly clusterId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#configurations_json EmrInstanceGroup#configurations_json}.
     *
     * @stability stable
     */
    readonly configurationsJson?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#ebs_optimized EmrInstanceGroup#ebs_optimized}.
     *
     * @stability stable
     */
    readonly ebsOptimized?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#instance_count EmrInstanceGroup#instance_count}.
     *
     * @stability stable
     */
    readonly instanceCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#instance_type EmrInstanceGroup#instance_type}.
     *
     * @stability stable
     */
    readonly instanceType: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#name EmrInstanceGroup#name}.
     *
     * @stability stable
     */
    readonly name?: string;
    /**
     * ebs_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#ebs_config EmrInstanceGroup#ebs_config}
     *
     * @stability stable
     */
    readonly ebsConfig?: EmrInstanceGroupEbsConfig[];
}
/**
 * @stability stable
 */
export interface EmrInstanceGroupEbsConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#iops EmrInstanceGroup#iops}.
     *
     * @stability stable
     */
    readonly iops?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#size EmrInstanceGroup#size}.
     *
     * @stability stable
     */
    readonly size: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#type EmrInstanceGroup#type}.
     *
     * @stability stable
     */
    readonly type: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html#volumes_per_instance EmrInstanceGroup#volumes_per_instance}.
     *
     * @stability stable
     */
    readonly volumesPerInstance?: number;
}
export declare function emrInstanceGroupEbsConfigToTerraform(struct?: EmrInstanceGroupEbsConfig): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html aws_emr_instance_group}.
 *
 * @stability stable
 */
export declare class EmrInstanceGroup extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html aws_emr_instance_group} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: EmrInstanceGroupConfig);
    private _autoscalingPolicy?;
    /**
     * @stability stable
     */
    get autoscalingPolicy(): string;
    /**
     * @stability stable
     */
    set autoscalingPolicy(value: string);
    /**
     * @stability stable
     */
    resetAutoscalingPolicy(): void;
    /**
     * @stability stable
     */
    get autoscalingPolicyInput(): string | undefined;
    private _bidPrice?;
    /**
     * @stability stable
     */
    get bidPrice(): string;
    /**
     * @stability stable
     */
    set bidPrice(value: string);
    /**
     * @stability stable
     */
    resetBidPrice(): void;
    /**
     * @stability stable
     */
    get bidPriceInput(): string | undefined;
    private _clusterId?;
    /**
     * @stability stable
     */
    get clusterId(): string;
    /**
     * @stability stable
     */
    set clusterId(value: string);
    /**
     * @stability stable
     */
    get clusterIdInput(): string | undefined;
    private _configurationsJson?;
    /**
     * @stability stable
     */
    get configurationsJson(): string;
    /**
     * @stability stable
     */
    set configurationsJson(value: string);
    /**
     * @stability stable
     */
    resetConfigurationsJson(): void;
    /**
     * @stability stable
     */
    get configurationsJsonInput(): string | undefined;
    private _ebsOptimized?;
    /**
     * @stability stable
     */
    get ebsOptimized(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set ebsOptimized(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEbsOptimized(): void;
    /**
     * @stability stable
     */
    get ebsOptimizedInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instanceCount?;
    /**
     * @stability stable
     */
    get instanceCount(): number;
    /**
     * @stability stable
     */
    set instanceCount(value: number);
    /**
     * @stability stable
     */
    resetInstanceCount(): void;
    /**
     * @stability stable
     */
    get instanceCountInput(): number | undefined;
    private _instanceType?;
    /**
     * @stability stable
     */
    get instanceType(): string;
    /**
     * @stability stable
     */
    set instanceType(value: string);
    /**
     * @stability stable
     */
    get instanceTypeInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    resetName(): void;
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    /**
     * @stability stable
     */
    get runningInstanceCount(): number;
    /**
     * @stability stable
     */
    get status(): string;
    private _ebsConfig?;
    /**
     * @stability stable
     */
    get ebsConfig(): EmrInstanceGroupEbsConfig[];
    /**
     * @stability stable
     */
    set ebsConfig(value: EmrInstanceGroupEbsConfig[]);
    /**
     * @stability stable
     */
    resetEbsConfig(): void;
    /**
     * @stability stable
     */
    get ebsConfigInput(): EmrInstanceGroupEbsConfig[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

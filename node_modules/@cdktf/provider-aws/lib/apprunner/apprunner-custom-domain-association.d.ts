import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * App Runner.
 *
 * @stability stable
 */
export interface ApprunnerCustomDomainAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/apprunner_custom_domain_association.html#domain_name ApprunnerCustomDomainAssociation#domain_name}.
     *
     * @stability stable
     */
    readonly domainName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/apprunner_custom_domain_association.html#enable_www_subdomain ApprunnerCustomDomainAssociation#enable_www_subdomain}.
     *
     * @stability stable
     */
    readonly enableWwwSubdomain?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/apprunner_custom_domain_association.html#service_arn ApprunnerCustomDomainAssociation#service_arn}.
     *
     * @stability stable
     */
    readonly serviceArn: string;
}
/**
 * @stability stable
 */
export declare class ApprunnerCustomDomainAssociationCertificateValidationRecords extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    get type(): string;
    /**
     * @stability stable
     */
    get value(): string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/apprunner_custom_domain_association.html aws_apprunner_custom_domain_association}.
 *
 * @stability stable
 */
export declare class ApprunnerCustomDomainAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/apprunner_custom_domain_association.html aws_apprunner_custom_domain_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ApprunnerCustomDomainAssociationConfig);
    /**
     * @stability stable
     */
    certificateValidationRecords(index: string): ApprunnerCustomDomainAssociationCertificateValidationRecords;
    /**
     * @stability stable
     */
    get dnsTarget(): string;
    private _domainName?;
    /**
     * @stability stable
     */
    get domainName(): string;
    /**
     * @stability stable
     */
    set domainName(value: string);
    /**
     * @stability stable
     */
    get domainNameInput(): string | undefined;
    private _enableWwwSubdomain?;
    /**
     * @stability stable
     */
    get enableWwwSubdomain(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableWwwSubdomain(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableWwwSubdomain(): void;
    /**
     * @stability stable
     */
    get enableWwwSubdomainInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _serviceArn?;
    /**
     * @stability stable
     */
    get serviceArn(): string;
    /**
     * @stability stable
     */
    set serviceArn(value: string);
    /**
     * @stability stable
     */
    get serviceArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

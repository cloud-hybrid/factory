import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Amplify.
 *
 * @stability stable
 */
export interface AmplifyDomainAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#app_id AmplifyDomainAssociation#app_id}.
     *
     * @stability stable
     */
    readonly appId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#domain_name AmplifyDomainAssociation#domain_name}.
     *
     * @stability stable
     */
    readonly domainName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#wait_for_verification AmplifyDomainAssociation#wait_for_verification}.
     *
     * @stability stable
     */
    readonly waitForVerification?: boolean | cdktf.IResolvable;
    /**
     * sub_domain block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#sub_domain AmplifyDomainAssociation#sub_domain}
     *
     * @stability stable
     */
    readonly subDomain: AmplifyDomainAssociationSubDomain[];
}
/**
 * @stability stable
 */
export interface AmplifyDomainAssociationSubDomain {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#branch_name AmplifyDomainAssociation#branch_name}.
     *
     * @stability stable
     */
    readonly branchName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html#prefix AmplifyDomainAssociation#prefix}.
     *
     * @stability stable
     */
    readonly prefix: string;
}
export declare function amplifyDomainAssociationSubDomainToTerraform(struct?: AmplifyDomainAssociationSubDomain): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html aws_amplify_domain_association}.
 *
 * @stability stable
 */
export declare class AmplifyDomainAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/amplify_domain_association.html aws_amplify_domain_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: AmplifyDomainAssociationConfig);
    private _appId?;
    /**
     * @stability stable
     */
    get appId(): string;
    /**
     * @stability stable
     */
    set appId(value: string);
    /**
     * @stability stable
     */
    get appIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get certificateVerificationDnsRecord(): string;
    private _domainName?;
    /**
     * @stability stable
     */
    get domainName(): string;
    /**
     * @stability stable
     */
    set domainName(value: string);
    /**
     * @stability stable
     */
    get domainNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _waitForVerification?;
    /**
     * @stability stable
     */
    get waitForVerification(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set waitForVerification(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetWaitForVerification(): void;
    /**
     * @stability stable
     */
    get waitForVerificationInput(): boolean | cdktf.IResolvable | undefined;
    private _subDomain?;
    /**
     * @stability stable
     */
    get subDomain(): AmplifyDomainAssociationSubDomain[];
    /**
     * @stability stable
     */
    set subDomain(value: AmplifyDomainAssociationSubDomain[]);
    /**
     * @stability stable
     */
    get subDomainInput(): AmplifyDomainAssociationSubDomain[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

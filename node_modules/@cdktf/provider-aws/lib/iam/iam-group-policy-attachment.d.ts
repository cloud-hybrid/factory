import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Identity and Access Management.
 *
 * @stability stable
 */
export interface IamGroupPolicyAttachmentConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iam_group_policy_attachment.html#group IamGroupPolicyAttachment#group}.
     *
     * @stability stable
     */
    readonly group: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/iam_group_policy_attachment.html#policy_arn IamGroupPolicyAttachment#policy_arn}.
     *
     * @stability stable
     */
    readonly policyArn: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/iam_group_policy_attachment.html aws_iam_group_policy_attachment}.
 *
 * @stability stable
 */
export declare class IamGroupPolicyAttachment extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/iam_group_policy_attachment.html aws_iam_group_policy_attachment} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: IamGroupPolicyAttachmentConfig);
    private _group?;
    /**
     * @stability stable
     */
    get group(): string;
    /**
     * @stability stable
     */
    set group(value: string);
    /**
     * @stability stable
     */
    get groupInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _policyArn?;
    /**
     * @stability stable
     */
    get policyArn(): string;
    /**
     * @stability stable
     */
    set policyArn(value: string);
    /**
     * @stability stable
     */
    get policyArnInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

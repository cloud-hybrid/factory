import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Identity and Access Management.
 *
 * @stability stable
 */
export interface DataAwsIamRolesConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/iam_roles.html#name_regex DataAwsIamRoles#name_regex}.
     *
     * @stability stable
     */
    readonly nameRegex?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/iam_roles.html#path_prefix DataAwsIamRoles#path_prefix}.
     *
     * @stability stable
     */
    readonly pathPrefix?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/iam_roles.html aws_iam_roles}.
 *
 * @stability stable
 */
export declare class DataAwsIamRoles extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/iam_roles.html aws_iam_roles} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: DataAwsIamRolesConfig);
    /**
     * @stability stable
     */
    get arns(): string[];
    /**
     * @stability stable
     */
    get id(): string;
    private _nameRegex?;
    /**
     * @stability stable
     */
    get nameRegex(): string;
    /**
     * @stability stable
     */
    set nameRegex(value: string);
    /**
     * @stability stable
     */
    resetNameRegex(): void;
    /**
     * @stability stable
     */
    get nameRegexInput(): string | undefined;
    /**
     * @stability stable
     */
    get names(): string[];
    private _pathPrefix?;
    /**
     * @stability stable
     */
    get pathPrefix(): string;
    /**
     * @stability stable
     */
    set pathPrefix(value: string);
    /**
     * @stability stable
     */
    resetPathPrefix(): void;
    /**
     * @stability stable
     */
    get pathPrefixInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Route 53.
 *
 * @stability stable
 */
export interface Route53KeySigningKeyConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html#hosted_zone_id Route53KeySigningKey#hosted_zone_id}.
     *
     * @stability stable
     */
    readonly hostedZoneId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html#key_management_service_arn Route53KeySigningKey#key_management_service_arn}.
     *
     * @stability stable
     */
    readonly keyManagementServiceArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html#name Route53KeySigningKey#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html#status Route53KeySigningKey#status}.
     *
     * @stability stable
     */
    readonly status?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html aws_route53_key_signing_key}.
 *
 * @stability stable
 */
export declare class Route53KeySigningKey extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/route53_key_signing_key.html aws_route53_key_signing_key} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: Route53KeySigningKeyConfig);
    /**
     * @stability stable
     */
    get digestAlgorithmMnemonic(): string;
    /**
     * @stability stable
     */
    get digestAlgorithmType(): number;
    /**
     * @stability stable
     */
    get digestValue(): string;
    /**
     * @stability stable
     */
    get dnskeyRecord(): string;
    /**
     * @stability stable
     */
    get dsRecord(): string;
    /**
     * @stability stable
     */
    get flag(): number;
    private _hostedZoneId?;
    /**
     * @stability stable
     */
    get hostedZoneId(): string;
    /**
     * @stability stable
     */
    set hostedZoneId(value: string);
    /**
     * @stability stable
     */
    get hostedZoneIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _keyManagementServiceArn?;
    /**
     * @stability stable
     */
    get keyManagementServiceArn(): string;
    /**
     * @stability stable
     */
    set keyManagementServiceArn(value: string);
    /**
     * @stability stable
     */
    get keyManagementServiceArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get keyTag(): number;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    /**
     * @stability stable
     */
    get publicKey(): string;
    /**
     * @stability stable
     */
    get signingAlgorithmMnemonic(): string;
    /**
     * @stability stable
     */
    get signingAlgorithmType(): number;
    private _status?;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    set status(value: string);
    /**
     * @stability stable
     */
    resetStatus(): void;
    /**
     * @stability stable
     */
    get statusInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Route 53.
 *
 * @stability stable
 */
export interface DataAwsRoute53ResolverEndpointConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html#resolver_endpoint_id DataAwsRoute53ResolverEndpoint#resolver_endpoint_id}.
     *
     * @stability stable
     */
    readonly resolverEndpointId?: string;
    /**
     * filter block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html#filter DataAwsRoute53ResolverEndpoint#filter}
     *
     * @stability stable
     */
    readonly filter?: DataAwsRoute53ResolverEndpointFilter[];
}
/**
 * @stability stable
 */
export interface DataAwsRoute53ResolverEndpointFilter {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html#name DataAwsRoute53ResolverEndpoint#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html#values DataAwsRoute53ResolverEndpoint#values}.
     *
     * @stability stable
     */
    readonly values: string[];
}
export declare function dataAwsRoute53ResolverEndpointFilterToTerraform(struct?: DataAwsRoute53ResolverEndpointFilter): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html aws_route53_resolver_endpoint}.
 *
 * @stability stable
 */
export declare class DataAwsRoute53ResolverEndpoint extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/route53_resolver_endpoint.html aws_route53_resolver_endpoint} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: DataAwsRoute53ResolverEndpointConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get direction(): string;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get ipAddresses(): string[];
    /**
     * @stability stable
     */
    get name(): string;
    private _resolverEndpointId?;
    /**
     * @stability stable
     */
    get resolverEndpointId(): string;
    /**
     * @stability stable
     */
    set resolverEndpointId(value: string);
    /**
     * @stability stable
     */
    resetResolverEndpointId(): void;
    /**
     * @stability stable
     */
    get resolverEndpointIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    get vpcId(): string;
    private _filter?;
    /**
     * @stability stable
     */
    get filter(): DataAwsRoute53ResolverEndpointFilter[];
    /**
     * @stability stable
     */
    set filter(value: DataAwsRoute53ResolverEndpointFilter[]);
    /**
     * @stability stable
     */
    resetFilter(): void;
    /**
     * @stability stable
     */
    get filterInput(): DataAwsRoute53ResolverEndpointFilter[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

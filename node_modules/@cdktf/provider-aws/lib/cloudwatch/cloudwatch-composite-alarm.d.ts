import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS CloudWatch.
 *
 * @stability stable
 */
export interface CloudwatchCompositeAlarmConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#actions_enabled CloudwatchCompositeAlarm#actions_enabled}.
     *
     * @stability stable
     */
    readonly actionsEnabled?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#alarm_actions CloudwatchCompositeAlarm#alarm_actions}.
     *
     * @stability stable
     */
    readonly alarmActions?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#alarm_description CloudwatchCompositeAlarm#alarm_description}.
     *
     * @stability stable
     */
    readonly alarmDescription?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#alarm_name CloudwatchCompositeAlarm#alarm_name}.
     *
     * @stability stable
     */
    readonly alarmName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#alarm_rule CloudwatchCompositeAlarm#alarm_rule}.
     *
     * @stability stable
     */
    readonly alarmRule: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#insufficient_data_actions CloudwatchCompositeAlarm#insufficient_data_actions}.
     *
     * @stability stable
     */
    readonly insufficientDataActions?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#ok_actions CloudwatchCompositeAlarm#ok_actions}.
     *
     * @stability stable
     */
    readonly okActions?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#tags CloudwatchCompositeAlarm#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html#tags_all CloudwatchCompositeAlarm#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html aws_cloudwatch_composite_alarm}.
 *
 * @stability stable
 */
export declare class CloudwatchCompositeAlarm extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/cloudwatch_composite_alarm.html aws_cloudwatch_composite_alarm} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: CloudwatchCompositeAlarmConfig);
    private _actionsEnabled?;
    /**
     * @stability stable
     */
    get actionsEnabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set actionsEnabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetActionsEnabled(): void;
    /**
     * @stability stable
     */
    get actionsEnabledInput(): boolean | cdktf.IResolvable | undefined;
    private _alarmActions?;
    /**
     * @stability stable
     */
    get alarmActions(): string[];
    /**
     * @stability stable
     */
    set alarmActions(value: string[]);
    /**
     * @stability stable
     */
    resetAlarmActions(): void;
    /**
     * @stability stable
     */
    get alarmActionsInput(): string[] | undefined;
    private _alarmDescription?;
    /**
     * @stability stable
     */
    get alarmDescription(): string;
    /**
     * @stability stable
     */
    set alarmDescription(value: string);
    /**
     * @stability stable
     */
    resetAlarmDescription(): void;
    /**
     * @stability stable
     */
    get alarmDescriptionInput(): string | undefined;
    private _alarmName?;
    /**
     * @stability stable
     */
    get alarmName(): string;
    /**
     * @stability stable
     */
    set alarmName(value: string);
    /**
     * @stability stable
     */
    get alarmNameInput(): string | undefined;
    private _alarmRule?;
    /**
     * @stability stable
     */
    get alarmRule(): string;
    /**
     * @stability stable
     */
    set alarmRule(value: string);
    /**
     * @stability stable
     */
    get alarmRuleInput(): string | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _insufficientDataActions?;
    /**
     * @stability stable
     */
    get insufficientDataActions(): string[];
    /**
     * @stability stable
     */
    set insufficientDataActions(value: string[]);
    /**
     * @stability stable
     */
    resetInsufficientDataActions(): void;
    /**
     * @stability stable
     */
    get insufficientDataActionsInput(): string[] | undefined;
    private _okActions?;
    /**
     * @stability stable
     */
    get okActions(): string[];
    /**
     * @stability stable
     */
    set okActions(value: string[]);
    /**
     * @stability stable
     */
    resetOkActions(): void;
    /**
     * @stability stable
     */
    get okActionsInput(): string[] | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Redshift.
 *
 * @stability stable
 */
export interface RedshiftScheduledActionConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#description RedshiftScheduledAction#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#enable RedshiftScheduledAction#enable}.
     *
     * @stability stable
     */
    readonly enable?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#end_time RedshiftScheduledAction#end_time}.
     *
     * @stability stable
     */
    readonly endTime?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#iam_role RedshiftScheduledAction#iam_role}.
     *
     * @stability stable
     */
    readonly iamRole: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#name RedshiftScheduledAction#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#schedule RedshiftScheduledAction#schedule}.
     *
     * @stability stable
     */
    readonly schedule: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#start_time RedshiftScheduledAction#start_time}.
     *
     * @stability stable
     */
    readonly startTime?: string;
    /**
     * target_action block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#target_action RedshiftScheduledAction#target_action}
     *
     * @stability stable
     */
    readonly targetAction: RedshiftScheduledActionTargetAction;
}
/**
 * @stability stable
 */
export interface RedshiftScheduledActionTargetActionPauseCluster {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#cluster_identifier RedshiftScheduledAction#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier: string;
}
export declare function redshiftScheduledActionTargetActionPauseClusterToTerraform(struct?: RedshiftScheduledActionTargetActionPauseClusterOutputReference | RedshiftScheduledActionTargetActionPauseCluster): any;
/**
 * @stability stable
 */
export declare class RedshiftScheduledActionTargetActionPauseClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RedshiftScheduledActionTargetActionPauseCluster | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RedshiftScheduledActionTargetActionPauseCluster | undefined);
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface RedshiftScheduledActionTargetActionResizeCluster {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#classic RedshiftScheduledAction#classic}.
     *
     * @stability stable
     */
    readonly classic?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#cluster_identifier RedshiftScheduledAction#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#cluster_type RedshiftScheduledAction#cluster_type}.
     *
     * @stability stable
     */
    readonly clusterType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#node_type RedshiftScheduledAction#node_type}.
     *
     * @stability stable
     */
    readonly nodeType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#number_of_nodes RedshiftScheduledAction#number_of_nodes}.
     *
     * @stability stable
     */
    readonly numberOfNodes?: number;
}
export declare function redshiftScheduledActionTargetActionResizeClusterToTerraform(struct?: RedshiftScheduledActionTargetActionResizeClusterOutputReference | RedshiftScheduledActionTargetActionResizeCluster): any;
/**
 * @stability stable
 */
export declare class RedshiftScheduledActionTargetActionResizeClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RedshiftScheduledActionTargetActionResizeCluster | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RedshiftScheduledActionTargetActionResizeCluster | undefined);
    private _classic?;
    /**
     * @stability stable
     */
    get classic(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set classic(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetClassic(): void;
    /**
     * @stability stable
     */
    get classicInput(): boolean | cdktf.IResolvable | undefined;
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
    private _clusterType?;
    /**
     * @stability stable
     */
    get clusterType(): string;
    /**
     * @stability stable
     */
    set clusterType(value: string);
    /**
     * @stability stable
     */
    resetClusterType(): void;
    /**
     * @stability stable
     */
    get clusterTypeInput(): string | undefined;
    private _nodeType?;
    /**
     * @stability stable
     */
    get nodeType(): string;
    /**
     * @stability stable
     */
    set nodeType(value: string);
    /**
     * @stability stable
     */
    resetNodeType(): void;
    /**
     * @stability stable
     */
    get nodeTypeInput(): string | undefined;
    private _numberOfNodes?;
    /**
     * @stability stable
     */
    get numberOfNodes(): number;
    /**
     * @stability stable
     */
    set numberOfNodes(value: number);
    /**
     * @stability stable
     */
    resetNumberOfNodes(): void;
    /**
     * @stability stable
     */
    get numberOfNodesInput(): number | undefined;
}
/**
 * @stability stable
 */
export interface RedshiftScheduledActionTargetActionResumeCluster {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#cluster_identifier RedshiftScheduledAction#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier: string;
}
export declare function redshiftScheduledActionTargetActionResumeClusterToTerraform(struct?: RedshiftScheduledActionTargetActionResumeClusterOutputReference | RedshiftScheduledActionTargetActionResumeCluster): any;
/**
 * @stability stable
 */
export declare class RedshiftScheduledActionTargetActionResumeClusterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RedshiftScheduledActionTargetActionResumeCluster | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RedshiftScheduledActionTargetActionResumeCluster | undefined);
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface RedshiftScheduledActionTargetAction {
    /**
     * pause_cluster block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#pause_cluster RedshiftScheduledAction#pause_cluster}
     *
     * @stability stable
     */
    readonly pauseCluster?: RedshiftScheduledActionTargetActionPauseCluster;
    /**
     * resize_cluster block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#resize_cluster RedshiftScheduledAction#resize_cluster}
     *
     * @stability stable
     */
    readonly resizeCluster?: RedshiftScheduledActionTargetActionResizeCluster;
    /**
     * resume_cluster block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html#resume_cluster RedshiftScheduledAction#resume_cluster}
     *
     * @stability stable
     */
    readonly resumeCluster?: RedshiftScheduledActionTargetActionResumeCluster;
}
export declare function redshiftScheduledActionTargetActionToTerraform(struct?: RedshiftScheduledActionTargetActionOutputReference | RedshiftScheduledActionTargetAction): any;
/**
 * @stability stable
 */
export declare class RedshiftScheduledActionTargetActionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): RedshiftScheduledActionTargetAction | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: RedshiftScheduledActionTargetAction | undefined);
    private _pauseCluster;
    /**
     * @stability stable
     */
    get pauseCluster(): RedshiftScheduledActionTargetActionPauseClusterOutputReference;
    /**
     * @stability stable
     */
    putPauseCluster(value: RedshiftScheduledActionTargetActionPauseCluster): void;
    /**
     * @stability stable
     */
    resetPauseCluster(): void;
    /**
     * @stability stable
     */
    get pauseClusterInput(): RedshiftScheduledActionTargetActionPauseCluster | undefined;
    private _resizeCluster;
    /**
     * @stability stable
     */
    get resizeCluster(): RedshiftScheduledActionTargetActionResizeClusterOutputReference;
    /**
     * @stability stable
     */
    putResizeCluster(value: RedshiftScheduledActionTargetActionResizeCluster): void;
    /**
     * @stability stable
     */
    resetResizeCluster(): void;
    /**
     * @stability stable
     */
    get resizeClusterInput(): RedshiftScheduledActionTargetActionResizeCluster | undefined;
    private _resumeCluster;
    /**
     * @stability stable
     */
    get resumeCluster(): RedshiftScheduledActionTargetActionResumeClusterOutputReference;
    /**
     * @stability stable
     */
    putResumeCluster(value: RedshiftScheduledActionTargetActionResumeCluster): void;
    /**
     * @stability stable
     */
    resetResumeCluster(): void;
    /**
     * @stability stable
     */
    get resumeClusterInput(): RedshiftScheduledActionTargetActionResumeCluster | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html aws_redshift_scheduled_action}.
 *
 * @stability stable
 */
export declare class RedshiftScheduledAction extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/redshift_scheduled_action.html aws_redshift_scheduled_action} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: RedshiftScheduledActionConfig);
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _enable?;
    /**
     * @stability stable
     */
    get enable(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enable(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnable(): void;
    /**
     * @stability stable
     */
    get enableInput(): boolean | cdktf.IResolvable | undefined;
    private _endTime?;
    /**
     * @stability stable
     */
    get endTime(): string;
    /**
     * @stability stable
     */
    set endTime(value: string);
    /**
     * @stability stable
     */
    resetEndTime(): void;
    /**
     * @stability stable
     */
    get endTimeInput(): string | undefined;
    private _iamRole?;
    /**
     * @stability stable
     */
    get iamRole(): string;
    /**
     * @stability stable
     */
    set iamRole(value: string);
    /**
     * @stability stable
     */
    get iamRoleInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _schedule?;
    /**
     * @stability stable
     */
    get schedule(): string;
    /**
     * @stability stable
     */
    set schedule(value: string);
    /**
     * @stability stable
     */
    get scheduleInput(): string | undefined;
    private _startTime?;
    /**
     * @stability stable
     */
    get startTime(): string;
    /**
     * @stability stable
     */
    set startTime(value: string);
    /**
     * @stability stable
     */
    resetStartTime(): void;
    /**
     * @stability stable
     */
    get startTimeInput(): string | undefined;
    private _targetAction;
    /**
     * @stability stable
     */
    get targetAction(): RedshiftScheduledActionTargetActionOutputReference;
    /**
     * @stability stable
     */
    putTargetAction(value: RedshiftScheduledActionTargetAction): void;
    /**
     * @stability stable
     */
    get targetActionInput(): RedshiftScheduledActionTargetAction | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

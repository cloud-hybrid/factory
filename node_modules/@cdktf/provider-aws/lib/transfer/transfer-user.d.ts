import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Transfer.
 *
 * @stability stable
 */
export interface TransferUserConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#home_directory TransferUser#home_directory}.
     *
     * @stability stable
     */
    readonly homeDirectory?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#home_directory_type TransferUser#home_directory_type}.
     *
     * @stability stable
     */
    readonly homeDirectoryType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#policy TransferUser#policy}.
     *
     * @stability stable
     */
    readonly policy?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#role TransferUser#role}.
     *
     * @stability stable
     */
    readonly role: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#server_id TransferUser#server_id}.
     *
     * @stability stable
     */
    readonly serverId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#tags TransferUser#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#tags_all TransferUser#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#user_name TransferUser#user_name}.
     *
     * @stability stable
     */
    readonly userName: string;
    /**
     * home_directory_mappings block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#home_directory_mappings TransferUser#home_directory_mappings}
     *
     * @stability stable
     */
    readonly homeDirectoryMappings?: TransferUserHomeDirectoryMappings[];
    /**
     * posix_profile block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#posix_profile TransferUser#posix_profile}
     *
     * @stability stable
     */
    readonly posixProfile?: TransferUserPosixProfile;
}
/**
 * @stability stable
 */
export interface TransferUserHomeDirectoryMappings {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#entry TransferUser#entry}.
     *
     * @stability stable
     */
    readonly entry: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#target TransferUser#target}.
     *
     * @stability stable
     */
    readonly target: string;
}
export declare function transferUserHomeDirectoryMappingsToTerraform(struct?: TransferUserHomeDirectoryMappings): any;
/**
 * @stability stable
 */
export interface TransferUserPosixProfile {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#gid TransferUser#gid}.
     *
     * @stability stable
     */
    readonly gid: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#secondary_gids TransferUser#secondary_gids}.
     *
     * @stability stable
     */
    readonly secondaryGids?: number[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html#uid TransferUser#uid}.
     *
     * @stability stable
     */
    readonly uid: number;
}
export declare function transferUserPosixProfileToTerraform(struct?: TransferUserPosixProfileOutputReference | TransferUserPosixProfile): any;
/**
 * @stability stable
 */
export declare class TransferUserPosixProfileOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): TransferUserPosixProfile | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: TransferUserPosixProfile | undefined);
    private _gid?;
    /**
     * @stability stable
     */
    get gid(): number;
    /**
     * @stability stable
     */
    set gid(value: number);
    /**
     * @stability stable
     */
    get gidInput(): number | undefined;
    private _secondaryGids?;
    /**
     * @stability stable
     */
    get secondaryGids(): number[];
    /**
     * @stability stable
     */
    set secondaryGids(value: number[]);
    /**
     * @stability stable
     */
    resetSecondaryGids(): void;
    /**
     * @stability stable
     */
    get secondaryGidsInput(): number[] | undefined;
    private _uid?;
    /**
     * @stability stable
     */
    get uid(): number;
    /**
     * @stability stable
     */
    set uid(value: number);
    /**
     * @stability stable
     */
    get uidInput(): number | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html aws_transfer_user}.
 *
 * @stability stable
 */
export declare class TransferUser extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/transfer_user.html aws_transfer_user} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: TransferUserConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _homeDirectory?;
    /**
     * @stability stable
     */
    get homeDirectory(): string;
    /**
     * @stability stable
     */
    set homeDirectory(value: string);
    /**
     * @stability stable
     */
    resetHomeDirectory(): void;
    /**
     * @stability stable
     */
    get homeDirectoryInput(): string | undefined;
    private _homeDirectoryType?;
    /**
     * @stability stable
     */
    get homeDirectoryType(): string;
    /**
     * @stability stable
     */
    set homeDirectoryType(value: string);
    /**
     * @stability stable
     */
    resetHomeDirectoryType(): void;
    /**
     * @stability stable
     */
    get homeDirectoryTypeInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _policy?;
    /**
     * @stability stable
     */
    get policy(): string;
    /**
     * @stability stable
     */
    set policy(value: string);
    /**
     * @stability stable
     */
    resetPolicy(): void;
    /**
     * @stability stable
     */
    get policyInput(): string | undefined;
    private _role?;
    /**
     * @stability stable
     */
    get role(): string;
    /**
     * @stability stable
     */
    set role(value: string);
    /**
     * @stability stable
     */
    get roleInput(): string | undefined;
    private _serverId?;
    /**
     * @stability stable
     */
    get serverId(): string;
    /**
     * @stability stable
     */
    set serverId(value: string);
    /**
     * @stability stable
     */
    get serverIdInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _userName?;
    /**
     * @stability stable
     */
    get userName(): string;
    /**
     * @stability stable
     */
    set userName(value: string);
    /**
     * @stability stable
     */
    get userNameInput(): string | undefined;
    private _homeDirectoryMappings?;
    /**
     * @stability stable
     */
    get homeDirectoryMappings(): TransferUserHomeDirectoryMappings[];
    /**
     * @stability stable
     */
    set homeDirectoryMappings(value: TransferUserHomeDirectoryMappings[]);
    /**
     * @stability stable
     */
    resetHomeDirectoryMappings(): void;
    /**
     * @stability stable
     */
    get homeDirectoryMappingsInput(): TransferUserHomeDirectoryMappings[] | undefined;
    private _posixProfile;
    /**
     * @stability stable
     */
    get posixProfile(): TransferUserPosixProfileOutputReference;
    /**
     * @stability stable
     */
    putPosixProfile(value: TransferUserPosixProfile): void;
    /**
     * @stability stable
     */
    resetPosixProfile(): void;
    /**
     * @stability stable
     */
    get posixProfileInput(): TransferUserPosixProfile | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Key Management Service.
 *
 * @stability stable
 */
export interface KmsCiphertextConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html#context KmsCiphertext#context}.
     *
     * @stability stable
     */
    readonly context?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html#key_id KmsCiphertext#key_id}.
     *
     * @stability stable
     */
    readonly keyId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html#plaintext KmsCiphertext#plaintext}.
     *
     * @stability stable
     */
    readonly plaintext: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html aws_kms_ciphertext}.
 *
 * @stability stable
 */
export declare class KmsCiphertext extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html aws_kms_ciphertext} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: KmsCiphertextConfig);
    /**
     * @stability stable
     */
    get ciphertextBlob(): string;
    private _context?;
    /**
     * @stability stable
     */
    get context(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set context(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetContext(): void;
    /**
     * @stability stable
     */
    get contextInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _keyId?;
    /**
     * @stability stable
     */
    get keyId(): string;
    /**
     * @stability stable
     */
    set keyId(value: string);
    /**
     * @stability stable
     */
    get keyIdInput(): string | undefined;
    private _plaintext?;
    /**
     * @stability stable
     */
    get plaintext(): string;
    /**
     * @stability stable
     */
    set plaintext(value: string);
    /**
     * @stability stable
     */
    get plaintextInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

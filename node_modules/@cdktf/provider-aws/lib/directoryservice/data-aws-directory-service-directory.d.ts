import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Directory Service.
 *
 * @stability stable
 */
export interface DataAwsDirectoryServiceDirectoryConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/directory_service_directory.html#directory_id DataAwsDirectoryServiceDirectory#directory_id}.
     *
     * @stability stable
     */
    readonly directoryId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/directory_service_directory.html#tags DataAwsDirectoryServiceDirectory#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * @stability stable
 */
export declare class DataAwsDirectoryServiceDirectoryConnectSettings extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    /**
     * @stability stable
     */
    get connectIps(): string[];
    /**
     * @stability stable
     */
    get customerDnsIps(): string[];
    /**
     * @stability stable
     */
    get customerUsername(): string;
    /**
     * @stability stable
     */
    get subnetIds(): string[];
    /**
     * @stability stable
     */
    get vpcId(): string;
}
/**
 * @stability stable
 */
export declare class DataAwsDirectoryServiceDirectoryVpcSettings extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    /**
     * @stability stable
     */
    get subnetIds(): string[];
    /**
     * @stability stable
     */
    get vpcId(): string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/directory_service_directory.html aws_directory_service_directory}.
 *
 * @stability stable
 */
export declare class DataAwsDirectoryServiceDirectory extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/directory_service_directory.html aws_directory_service_directory} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DataAwsDirectoryServiceDirectoryConfig);
    /**
     * @stability stable
     */
    get accessUrl(): string;
    /**
     * @stability stable
     */
    get alias(): string;
    /**
     * @stability stable
     */
    connectSettings(index: string): DataAwsDirectoryServiceDirectoryConnectSettings;
    /**
     * @stability stable
     */
    get description(): string;
    private _directoryId?;
    /**
     * @stability stable
     */
    get directoryId(): string;
    /**
     * @stability stable
     */
    set directoryId(value: string);
    /**
     * @stability stable
     */
    get directoryIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get dnsIpAddresses(): string[];
    /**
     * @stability stable
     */
    get edition(): string;
    /**
     * @stability stable
     */
    get enableSso(): any;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    get securityGroupId(): string;
    /**
     * @stability stable
     */
    get shortName(): string;
    /**
     * @stability stable
     */
    get size(): string;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get type(): string;
    /**
     * @stability stable
     */
    vpcSettings(index: string): DataAwsDirectoryServiceDirectoryVpcSettings;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

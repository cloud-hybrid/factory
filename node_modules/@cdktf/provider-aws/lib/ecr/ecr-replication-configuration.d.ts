import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS EC2 Container Registry.
 *
 * @stability stable
 */
export interface EcrReplicationConfigurationConfig extends cdktf.TerraformMetaArguments {
    /**
     * replication_configuration block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html#replication_configuration EcrReplicationConfiguration#replication_configuration}
     *
     * @stability stable
     */
    readonly replicationConfiguration?: EcrReplicationConfigurationReplicationConfiguration;
}
/**
 * @stability stable
 */
export interface EcrReplicationConfigurationReplicationConfigurationRuleDestination {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html#region EcrReplicationConfiguration#region}.
     *
     * @stability stable
     */
    readonly region: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html#registry_id EcrReplicationConfiguration#registry_id}.
     *
     * @stability stable
     */
    readonly registryId: string;
}
export declare function ecrReplicationConfigurationReplicationConfigurationRuleDestinationToTerraform(struct?: EcrReplicationConfigurationReplicationConfigurationRuleDestination): any;
/**
 * @stability stable
 */
export interface EcrReplicationConfigurationReplicationConfigurationRule {
    /**
     * destination block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html#destination EcrReplicationConfiguration#destination}
     *
     * @stability stable
     */
    readonly destination: EcrReplicationConfigurationReplicationConfigurationRuleDestination[];
}
export declare function ecrReplicationConfigurationReplicationConfigurationRuleToTerraform(struct?: EcrReplicationConfigurationReplicationConfigurationRuleOutputReference | EcrReplicationConfigurationReplicationConfigurationRule): any;
/**
 * @stability stable
 */
export declare class EcrReplicationConfigurationReplicationConfigurationRuleOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcrReplicationConfigurationReplicationConfigurationRule | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcrReplicationConfigurationReplicationConfigurationRule | undefined);
    private _destination?;
    /**
     * @stability stable
     */
    get destination(): EcrReplicationConfigurationReplicationConfigurationRuleDestination[];
    /**
     * @stability stable
     */
    set destination(value: EcrReplicationConfigurationReplicationConfigurationRuleDestination[]);
    /**
     * @stability stable
     */
    get destinationInput(): EcrReplicationConfigurationReplicationConfigurationRuleDestination[] | undefined;
}
/**
 * @stability stable
 */
export interface EcrReplicationConfigurationReplicationConfiguration {
    /**
     * rule block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html#rule EcrReplicationConfiguration#rule}
     *
     * @stability stable
     */
    readonly rule: EcrReplicationConfigurationReplicationConfigurationRule;
}
export declare function ecrReplicationConfigurationReplicationConfigurationToTerraform(struct?: EcrReplicationConfigurationReplicationConfigurationOutputReference | EcrReplicationConfigurationReplicationConfiguration): any;
/**
 * @stability stable
 */
export declare class EcrReplicationConfigurationReplicationConfigurationOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EcrReplicationConfigurationReplicationConfiguration | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EcrReplicationConfigurationReplicationConfiguration | undefined);
    private _rule;
    /**
     * @stability stable
     */
    get rule(): EcrReplicationConfigurationReplicationConfigurationRuleOutputReference;
    /**
     * @stability stable
     */
    putRule(value: EcrReplicationConfigurationReplicationConfigurationRule): void;
    /**
     * @stability stable
     */
    get ruleInput(): EcrReplicationConfigurationReplicationConfigurationRule | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html aws_ecr_replication_configuration}.
 *
 * @stability stable
 */
export declare class EcrReplicationConfiguration extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ecr_replication_configuration.html aws_ecr_replication_configuration} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: EcrReplicationConfigurationConfig);
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get registryId(): string;
    private _replicationConfiguration;
    /**
     * @stability stable
     */
    get replicationConfiguration(): EcrReplicationConfigurationReplicationConfigurationOutputReference;
    /**
     * @stability stable
     */
    putReplicationConfiguration(value: EcrReplicationConfigurationReplicationConfiguration): void;
    /**
     * @stability stable
     */
    resetReplicationConfiguration(): void;
    /**
     * @stability stable
     */
    get replicationConfigurationInput(): EcrReplicationConfigurationReplicationConfiguration | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

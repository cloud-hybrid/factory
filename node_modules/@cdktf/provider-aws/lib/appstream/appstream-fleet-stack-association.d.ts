import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AppStream.
 *
 * @stability stable
 */
export interface AppstreamFleetStackAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/appstream_fleet_stack_association.html#fleet_name AppstreamFleetStackAssociation#fleet_name}.
     *
     * @stability stable
     */
    readonly fleetName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/appstream_fleet_stack_association.html#stack_name AppstreamFleetStackAssociation#stack_name}.
     *
     * @stability stable
     */
    readonly stackName: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/appstream_fleet_stack_association.html aws_appstream_fleet_stack_association}.
 *
 * @stability stable
 */
export declare class AppstreamFleetStackAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/appstream_fleet_stack_association.html aws_appstream_fleet_stack_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: AppstreamFleetStackAssociationConfig);
    private _fleetName?;
    /**
     * @stability stable
     */
    get fleetName(): string;
    /**
     * @stability stable
     */
    set fleetName(value: string);
    /**
     * @stability stable
     */
    get fleetNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _stackName?;
    /**
     * @stability stable
     */
    get stackName(): string;
    /**
     * @stability stable
     */
    set stackName(value: string);
    /**
     * @stability stable
     */
    get stackNameInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

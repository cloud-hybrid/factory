import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Neptune.
 *
 * @stability stable
 */
export interface NeptuneClusterSnapshotConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html#db_cluster_identifier NeptuneClusterSnapshot#db_cluster_identifier}.
     *
     * @stability stable
     */
    readonly dbClusterIdentifier: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html#db_cluster_snapshot_identifier NeptuneClusterSnapshot#db_cluster_snapshot_identifier}.
     *
     * @stability stable
     */
    readonly dbClusterSnapshotIdentifier: string;
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html#timeouts NeptuneClusterSnapshot#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: NeptuneClusterSnapshotTimeouts;
}
/**
 * @stability stable
 */
export interface NeptuneClusterSnapshotTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html#create NeptuneClusterSnapshot#create}.
     *
     * @stability stable
     */
    readonly create?: string;
}
export declare function neptuneClusterSnapshotTimeoutsToTerraform(struct?: NeptuneClusterSnapshotTimeoutsOutputReference | NeptuneClusterSnapshotTimeouts): any;
/**
 * @stability stable
 */
export declare class NeptuneClusterSnapshotTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): NeptuneClusterSnapshotTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: NeptuneClusterSnapshotTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html aws_neptune_cluster_snapshot}.
 *
 * @stability stable
 */
export declare class NeptuneClusterSnapshot extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/neptune_cluster_snapshot.html aws_neptune_cluster_snapshot} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: NeptuneClusterSnapshotConfig);
    /**
     * @stability stable
     */
    get allocatedStorage(): number;
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    private _dbClusterIdentifier?;
    /**
     * @stability stable
     */
    get dbClusterIdentifier(): string;
    /**
     * @stability stable
     */
    set dbClusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get dbClusterIdentifierInput(): string | undefined;
    /**
     * @stability stable
     */
    get dbClusterSnapshotArn(): string;
    private _dbClusterSnapshotIdentifier?;
    /**
     * @stability stable
     */
    get dbClusterSnapshotIdentifier(): string;
    /**
     * @stability stable
     */
    set dbClusterSnapshotIdentifier(value: string);
    /**
     * @stability stable
     */
    get dbClusterSnapshotIdentifierInput(): string | undefined;
    /**
     * @stability stable
     */
    get engine(): string;
    /**
     * @stability stable
     */
    get engineVersion(): string;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get kmsKeyId(): string;
    /**
     * @stability stable
     */
    get licenseModel(): string;
    /**
     * @stability stable
     */
    get port(): number;
    /**
     * @stability stable
     */
    get snapshotType(): string;
    /**
     * @stability stable
     */
    get sourceDbClusterSnapshotArn(): string;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    get storageEncrypted(): any;
    /**
     * @stability stable
     */
    get vpcId(): string;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): NeptuneClusterSnapshotTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: NeptuneClusterSnapshotTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): NeptuneClusterSnapshotTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

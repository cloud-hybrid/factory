import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Secrets Manager.
 *
 * @stability stable
 */
export interface SecretsmanagerSecretConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#description SecretsmanagerSecret#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#force_overwrite_replica_secret SecretsmanagerSecret#force_overwrite_replica_secret}.
     *
     * @stability stable
     */
    readonly forceOverwriteReplicaSecret?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#kms_key_id SecretsmanagerSecret#kms_key_id}.
     *
     * @stability stable
     */
    readonly kmsKeyId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#name SecretsmanagerSecret#name}.
     *
     * @stability stable
     */
    readonly name?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#name_prefix SecretsmanagerSecret#name_prefix}.
     *
     * @stability stable
     */
    readonly namePrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#policy SecretsmanagerSecret#policy}.
     *
     * @stability stable
     */
    readonly policy?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#recovery_window_in_days SecretsmanagerSecret#recovery_window_in_days}.
     *
     * @stability stable
     */
    readonly recoveryWindowInDays?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#rotation_lambda_arn SecretsmanagerSecret#rotation_lambda_arn}.
     *
     * @stability stable
     */
    readonly rotationLambdaArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#tags SecretsmanagerSecret#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#tags_all SecretsmanagerSecret#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * replica block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#replica SecretsmanagerSecret#replica}
     *
     * @stability stable
     */
    readonly replica?: SecretsmanagerSecretReplica[];
    /**
     * rotation_rules block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#rotation_rules SecretsmanagerSecret#rotation_rules}
     *
     * @stability stable
     */
    readonly rotationRules?: SecretsmanagerSecretRotationRules;
}
/**
 * @stability stable
 */
export interface SecretsmanagerSecretReplica {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#kms_key_id SecretsmanagerSecret#kms_key_id}.
     *
     * @stability stable
     */
    readonly kmsKeyId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#region SecretsmanagerSecret#region}.
     *
     * @stability stable
     */
    readonly region: string;
}
export declare function secretsmanagerSecretReplicaToTerraform(struct?: SecretsmanagerSecretReplica): any;
/**
 * @stability stable
 */
export interface SecretsmanagerSecretRotationRules {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html#automatically_after_days SecretsmanagerSecret#automatically_after_days}.
     *
     * @stability stable
     */
    readonly automaticallyAfterDays: number;
}
export declare function secretsmanagerSecretRotationRulesToTerraform(struct?: SecretsmanagerSecretRotationRulesOutputReference | SecretsmanagerSecretRotationRules): any;
/**
 * @stability stable
 */
export declare class SecretsmanagerSecretRotationRulesOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): SecretsmanagerSecretRotationRules | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: SecretsmanagerSecretRotationRules | undefined);
    private _automaticallyAfterDays?;
    /**
     * @stability stable
     */
    get automaticallyAfterDays(): number;
    /**
     * @stability stable
     */
    set automaticallyAfterDays(value: number);
    /**
     * @stability stable
     */
    get automaticallyAfterDaysInput(): number | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html aws_secretsmanager_secret}.
 *
 * @stability stable
 */
export declare class SecretsmanagerSecret extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/secretsmanager_secret.html aws_secretsmanager_secret} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: SecretsmanagerSecretConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _forceOverwriteReplicaSecret?;
    /**
     * @stability stable
     */
    get forceOverwriteReplicaSecret(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set forceOverwriteReplicaSecret(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetForceOverwriteReplicaSecret(): void;
    /**
     * @stability stable
     */
    get forceOverwriteReplicaSecretInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _kmsKeyId?;
    /**
     * @stability stable
     */
    get kmsKeyId(): string;
    /**
     * @stability stable
     */
    set kmsKeyId(value: string);
    /**
     * @stability stable
     */
    resetKmsKeyId(): void;
    /**
     * @stability stable
     */
    get kmsKeyIdInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    resetName(): void;
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _namePrefix?;
    /**
     * @stability stable
     */
    get namePrefix(): string;
    /**
     * @stability stable
     */
    set namePrefix(value: string);
    /**
     * @stability stable
     */
    resetNamePrefix(): void;
    /**
     * @stability stable
     */
    get namePrefixInput(): string | undefined;
    private _policy?;
    /**
     * @stability stable
     */
    get policy(): string;
    /**
     * @stability stable
     */
    set policy(value: string);
    /**
     * @stability stable
     */
    resetPolicy(): void;
    /**
     * @stability stable
     */
    get policyInput(): string | undefined;
    private _recoveryWindowInDays?;
    /**
     * @stability stable
     */
    get recoveryWindowInDays(): number;
    /**
     * @stability stable
     */
    set recoveryWindowInDays(value: number);
    /**
     * @stability stable
     */
    resetRecoveryWindowInDays(): void;
    /**
     * @stability stable
     */
    get recoveryWindowInDaysInput(): number | undefined;
    /**
     * @stability stable
     */
    get rotationEnabled(): any;
    private _rotationLambdaArn?;
    /**
     * @stability stable
     */
    get rotationLambdaArn(): string;
    /**
     * @stability stable
     */
    set rotationLambdaArn(value: string);
    /**
     * @stability stable
     */
    resetRotationLambdaArn(): void;
    /**
     * @stability stable
     */
    get rotationLambdaArnInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _replica?;
    /**
     * @stability stable
     */
    get replica(): SecretsmanagerSecretReplica[];
    /**
     * @stability stable
     */
    set replica(value: SecretsmanagerSecretReplica[]);
    /**
     * @stability stable
     */
    resetReplica(): void;
    /**
     * @stability stable
     */
    get replicaInput(): SecretsmanagerSecretReplica[] | undefined;
    private _rotationRules;
    /**
     * @stability stable
     */
    get rotationRules(): SecretsmanagerSecretRotationRulesOutputReference;
    /**
     * @stability stable
     */
    putRotationRules(value: SecretsmanagerSecretRotationRules): void;
    /**
     * @stability stable
     */
    resetRotationRules(): void;
    /**
     * @stability stable
     */
    get rotationRulesInput(): SecretsmanagerSecretRotationRules | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

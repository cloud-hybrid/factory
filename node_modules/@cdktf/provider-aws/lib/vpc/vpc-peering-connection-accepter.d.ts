import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS VPC.
 *
 * @stability stable
 */
export interface VpcPeeringConnectionAccepterAConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#auto_accept VpcPeeringConnectionAccepterA#auto_accept}.
     *
     * @stability stable
     */
    readonly autoAccept?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#tags VpcPeeringConnectionAccepterA#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#tags_all VpcPeeringConnectionAccepterA#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#vpc_peering_connection_id VpcPeeringConnectionAccepterA#vpc_peering_connection_id}.
     *
     * @stability stable
     */
    readonly vpcPeeringConnectionId: string;
    /**
     * accepter block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#accepter VpcPeeringConnectionAccepterA#accepter}
     *
     * @stability stable
     */
    readonly accepter?: VpcPeeringConnectionAccepterAccepter;
    /**
     * requester block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#requester VpcPeeringConnectionAccepterA#requester}
     *
     * @stability stable
     */
    readonly requester?: VpcPeeringConnectionAccepterRequester;
}
/**
 * @stability stable
 */
export interface VpcPeeringConnectionAccepterAccepter {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_classic_link_to_remote_vpc VpcPeeringConnectionAccepterA#allow_classic_link_to_remote_vpc}.
     *
     * @stability stable
     */
    readonly allowClassicLinkToRemoteVpc?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_remote_vpc_dns_resolution VpcPeeringConnectionAccepterA#allow_remote_vpc_dns_resolution}.
     *
     * @stability stable
     */
    readonly allowRemoteVpcDnsResolution?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_vpc_to_remote_classic_link VpcPeeringConnectionAccepterA#allow_vpc_to_remote_classic_link}.
     *
     * @stability stable
     */
    readonly allowVpcToRemoteClassicLink?: boolean | cdktf.IResolvable;
}
export declare function vpcPeeringConnectionAccepterAccepterToTerraform(struct?: VpcPeeringConnectionAccepterAccepterOutputReference | VpcPeeringConnectionAccepterAccepter): any;
/**
 * @stability stable
 */
export declare class VpcPeeringConnectionAccepterAccepterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): VpcPeeringConnectionAccepterAccepter | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: VpcPeeringConnectionAccepterAccepter | undefined);
    private _allowClassicLinkToRemoteVpc?;
    /**
     * @stability stable
     */
    get allowClassicLinkToRemoteVpc(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowClassicLinkToRemoteVpc(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowClassicLinkToRemoteVpc(): void;
    /**
     * @stability stable
     */
    get allowClassicLinkToRemoteVpcInput(): boolean | cdktf.IResolvable | undefined;
    private _allowRemoteVpcDnsResolution?;
    /**
     * @stability stable
     */
    get allowRemoteVpcDnsResolution(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowRemoteVpcDnsResolution(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowRemoteVpcDnsResolution(): void;
    /**
     * @stability stable
     */
    get allowRemoteVpcDnsResolutionInput(): boolean | cdktf.IResolvable | undefined;
    private _allowVpcToRemoteClassicLink?;
    /**
     * @stability stable
     */
    get allowVpcToRemoteClassicLink(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowVpcToRemoteClassicLink(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowVpcToRemoteClassicLink(): void;
    /**
     * @stability stable
     */
    get allowVpcToRemoteClassicLinkInput(): boolean | cdktf.IResolvable | undefined;
}
/**
 * @stability stable
 */
export interface VpcPeeringConnectionAccepterRequester {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_classic_link_to_remote_vpc VpcPeeringConnectionAccepterA#allow_classic_link_to_remote_vpc}.
     *
     * @stability stable
     */
    readonly allowClassicLinkToRemoteVpc?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_remote_vpc_dns_resolution VpcPeeringConnectionAccepterA#allow_remote_vpc_dns_resolution}.
     *
     * @stability stable
     */
    readonly allowRemoteVpcDnsResolution?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html#allow_vpc_to_remote_classic_link VpcPeeringConnectionAccepterA#allow_vpc_to_remote_classic_link}.
     *
     * @stability stable
     */
    readonly allowVpcToRemoteClassicLink?: boolean | cdktf.IResolvable;
}
export declare function vpcPeeringConnectionAccepterRequesterToTerraform(struct?: VpcPeeringConnectionAccepterRequesterOutputReference | VpcPeeringConnectionAccepterRequester): any;
/**
 * @stability stable
 */
export declare class VpcPeeringConnectionAccepterRequesterOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): VpcPeeringConnectionAccepterRequester | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: VpcPeeringConnectionAccepterRequester | undefined);
    private _allowClassicLinkToRemoteVpc?;
    /**
     * @stability stable
     */
    get allowClassicLinkToRemoteVpc(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowClassicLinkToRemoteVpc(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowClassicLinkToRemoteVpc(): void;
    /**
     * @stability stable
     */
    get allowClassicLinkToRemoteVpcInput(): boolean | cdktf.IResolvable | undefined;
    private _allowRemoteVpcDnsResolution?;
    /**
     * @stability stable
     */
    get allowRemoteVpcDnsResolution(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowRemoteVpcDnsResolution(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowRemoteVpcDnsResolution(): void;
    /**
     * @stability stable
     */
    get allowRemoteVpcDnsResolutionInput(): boolean | cdktf.IResolvable | undefined;
    private _allowVpcToRemoteClassicLink?;
    /**
     * @stability stable
     */
    get allowVpcToRemoteClassicLink(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set allowVpcToRemoteClassicLink(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAllowVpcToRemoteClassicLink(): void;
    /**
     * @stability stable
     */
    get allowVpcToRemoteClassicLinkInput(): boolean | cdktf.IResolvable | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html aws_vpc_peering_connection_accepter}.
 *
 * @stability stable
 */
export declare class VpcPeeringConnectionAccepterA extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/vpc_peering_connection_accepter.html aws_vpc_peering_connection_accepter} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: VpcPeeringConnectionAccepterAConfig);
    /**
     * @stability stable
     */
    get acceptStatus(): string;
    private _autoAccept?;
    /**
     * @stability stable
     */
    get autoAccept(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set autoAccept(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAutoAccept(): void;
    /**
     * @stability stable
     */
    get autoAcceptInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get peerOwnerId(): string;
    /**
     * @stability stable
     */
    get peerRegion(): string;
    /**
     * @stability stable
     */
    get peerVpcId(): string;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get vpcId(): string;
    private _vpcPeeringConnectionId?;
    /**
     * @stability stable
     */
    get vpcPeeringConnectionId(): string;
    /**
     * @stability stable
     */
    set vpcPeeringConnectionId(value: string);
    /**
     * @stability stable
     */
    get vpcPeeringConnectionIdInput(): string | undefined;
    private _accepter;
    /**
     * @stability stable
     */
    get accepter(): VpcPeeringConnectionAccepterAccepterOutputReference;
    /**
     * @stability stable
     */
    putAccepter(value: VpcPeeringConnectionAccepterAccepter): void;
    /**
     * @stability stable
     */
    resetAccepter(): void;
    /**
     * @stability stable
     */
    get accepterInput(): VpcPeeringConnectionAccepterAccepter | undefined;
    private _requester;
    /**
     * @stability stable
     */
    get requester(): VpcPeeringConnectionAccepterRequesterOutputReference;
    /**
     * @stability stable
     */
    putRequester(value: VpcPeeringConnectionAccepterRequester): void;
    /**
     * @stability stable
     */
    resetRequester(): void;
    /**
     * @stability stable
     */
    get requesterInput(): VpcPeeringConnectionAccepterRequester | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

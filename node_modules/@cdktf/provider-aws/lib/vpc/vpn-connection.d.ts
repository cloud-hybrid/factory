import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS VPC.
 *
 * @stability stable
 */
export interface VpnConnectionConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#customer_gateway_id VpnConnection#customer_gateway_id}.
     *
     * @stability stable
     */
    readonly customerGatewayId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#enable_acceleration VpnConnection#enable_acceleration}.
     *
     * @stability stable
     */
    readonly enableAcceleration?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#local_ipv4_network_cidr VpnConnection#local_ipv4_network_cidr}.
     *
     * @stability stable
     */
    readonly localIpv4NetworkCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#local_ipv6_network_cidr VpnConnection#local_ipv6_network_cidr}.
     *
     * @stability stable
     */
    readonly localIpv6NetworkCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#remote_ipv4_network_cidr VpnConnection#remote_ipv4_network_cidr}.
     *
     * @stability stable
     */
    readonly remoteIpv4NetworkCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#remote_ipv6_network_cidr VpnConnection#remote_ipv6_network_cidr}.
     *
     * @stability stable
     */
    readonly remoteIpv6NetworkCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#static_routes_only VpnConnection#static_routes_only}.
     *
     * @stability stable
     */
    readonly staticRoutesOnly?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tags VpnConnection#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tags_all VpnConnection#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#transit_gateway_id VpnConnection#transit_gateway_id}.
     *
     * @stability stable
     */
    readonly transitGatewayId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_dpd_timeout_action VpnConnection#tunnel1_dpd_timeout_action}.
     *
     * @stability stable
     */
    readonly tunnel1DpdTimeoutAction?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_dpd_timeout_seconds VpnConnection#tunnel1_dpd_timeout_seconds}.
     *
     * @stability stable
     */
    readonly tunnel1DpdTimeoutSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_ike_versions VpnConnection#tunnel1_ike_versions}.
     *
     * @stability stable
     */
    readonly tunnel1IkeVersions?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_inside_cidr VpnConnection#tunnel1_inside_cidr}.
     *
     * @stability stable
     */
    readonly tunnel1InsideCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_inside_ipv6_cidr VpnConnection#tunnel1_inside_ipv6_cidr}.
     *
     * @stability stable
     */
    readonly tunnel1InsideIpv6Cidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase1_dh_group_numbers VpnConnection#tunnel1_phase1_dh_group_numbers}.
     *
     * @stability stable
     */
    readonly tunnel1Phase1DhGroupNumbers?: number[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase1_encryption_algorithms VpnConnection#tunnel1_phase1_encryption_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel1Phase1EncryptionAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase1_integrity_algorithms VpnConnection#tunnel1_phase1_integrity_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel1Phase1IntegrityAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase1_lifetime_seconds VpnConnection#tunnel1_phase1_lifetime_seconds}.
     *
     * @stability stable
     */
    readonly tunnel1Phase1LifetimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase2_dh_group_numbers VpnConnection#tunnel1_phase2_dh_group_numbers}.
     *
     * @stability stable
     */
    readonly tunnel1Phase2DhGroupNumbers?: number[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase2_encryption_algorithms VpnConnection#tunnel1_phase2_encryption_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel1Phase2EncryptionAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase2_integrity_algorithms VpnConnection#tunnel1_phase2_integrity_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel1Phase2IntegrityAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_phase2_lifetime_seconds VpnConnection#tunnel1_phase2_lifetime_seconds}.
     *
     * @stability stable
     */
    readonly tunnel1Phase2LifetimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_preshared_key VpnConnection#tunnel1_preshared_key}.
     *
     * @stability stable
     */
    readonly tunnel1PresharedKey?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_rekey_fuzz_percentage VpnConnection#tunnel1_rekey_fuzz_percentage}.
     *
     * @stability stable
     */
    readonly tunnel1RekeyFuzzPercentage?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_rekey_margin_time_seconds VpnConnection#tunnel1_rekey_margin_time_seconds}.
     *
     * @stability stable
     */
    readonly tunnel1RekeyMarginTimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_replay_window_size VpnConnection#tunnel1_replay_window_size}.
     *
     * @stability stable
     */
    readonly tunnel1ReplayWindowSize?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel1_startup_action VpnConnection#tunnel1_startup_action}.
     *
     * @stability stable
     */
    readonly tunnel1StartupAction?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_dpd_timeout_action VpnConnection#tunnel2_dpd_timeout_action}.
     *
     * @stability stable
     */
    readonly tunnel2DpdTimeoutAction?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_dpd_timeout_seconds VpnConnection#tunnel2_dpd_timeout_seconds}.
     *
     * @stability stable
     */
    readonly tunnel2DpdTimeoutSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_ike_versions VpnConnection#tunnel2_ike_versions}.
     *
     * @stability stable
     */
    readonly tunnel2IkeVersions?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_inside_cidr VpnConnection#tunnel2_inside_cidr}.
     *
     * @stability stable
     */
    readonly tunnel2InsideCidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_inside_ipv6_cidr VpnConnection#tunnel2_inside_ipv6_cidr}.
     *
     * @stability stable
     */
    readonly tunnel2InsideIpv6Cidr?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase1_dh_group_numbers VpnConnection#tunnel2_phase1_dh_group_numbers}.
     *
     * @stability stable
     */
    readonly tunnel2Phase1DhGroupNumbers?: number[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase1_encryption_algorithms VpnConnection#tunnel2_phase1_encryption_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel2Phase1EncryptionAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase1_integrity_algorithms VpnConnection#tunnel2_phase1_integrity_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel2Phase1IntegrityAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase1_lifetime_seconds VpnConnection#tunnel2_phase1_lifetime_seconds}.
     *
     * @stability stable
     */
    readonly tunnel2Phase1LifetimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase2_dh_group_numbers VpnConnection#tunnel2_phase2_dh_group_numbers}.
     *
     * @stability stable
     */
    readonly tunnel2Phase2DhGroupNumbers?: number[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase2_encryption_algorithms VpnConnection#tunnel2_phase2_encryption_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel2Phase2EncryptionAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase2_integrity_algorithms VpnConnection#tunnel2_phase2_integrity_algorithms}.
     *
     * @stability stable
     */
    readonly tunnel2Phase2IntegrityAlgorithms?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_phase2_lifetime_seconds VpnConnection#tunnel2_phase2_lifetime_seconds}.
     *
     * @stability stable
     */
    readonly tunnel2Phase2LifetimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_preshared_key VpnConnection#tunnel2_preshared_key}.
     *
     * @stability stable
     */
    readonly tunnel2PresharedKey?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_rekey_fuzz_percentage VpnConnection#tunnel2_rekey_fuzz_percentage}.
     *
     * @stability stable
     */
    readonly tunnel2RekeyFuzzPercentage?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_rekey_margin_time_seconds VpnConnection#tunnel2_rekey_margin_time_seconds}.
     *
     * @stability stable
     */
    readonly tunnel2RekeyMarginTimeSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_replay_window_size VpnConnection#tunnel2_replay_window_size}.
     *
     * @stability stable
     */
    readonly tunnel2ReplayWindowSize?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel2_startup_action VpnConnection#tunnel2_startup_action}.
     *
     * @stability stable
     */
    readonly tunnel2StartupAction?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#tunnel_inside_ip_version VpnConnection#tunnel_inside_ip_version}.
     *
     * @stability stable
     */
    readonly tunnelInsideIpVersion?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#type VpnConnection#type}.
     *
     * @stability stable
     */
    readonly type: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html#vpn_gateway_id VpnConnection#vpn_gateway_id}.
     *
     * @stability stable
     */
    readonly vpnGatewayId?: string;
}
/**
 * @stability stable
 */
export declare class VpnConnectionRoutes extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get destinationCidrBlock(): string;
    /**
     * @stability stable
     */
    get source(): string;
    /**
     * @stability stable
     */
    get state(): string;
}
/**
 * @stability stable
 */
export declare class VpnConnectionVgwTelemetry extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get acceptedRouteCount(): number;
    /**
     * @stability stable
     */
    get lastStatusChange(): string;
    /**
     * @stability stable
     */
    get outsideIpAddress(): string;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    get statusMessage(): string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html aws_vpn_connection}.
 *
 * @stability stable
 */
export declare class VpnConnection extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/vpn_connection.html aws_vpn_connection} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: VpnConnectionConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get customerGatewayConfiguration(): string;
    private _customerGatewayId?;
    /**
     * @stability stable
     */
    get customerGatewayId(): string;
    /**
     * @stability stable
     */
    set customerGatewayId(value: string);
    /**
     * @stability stable
     */
    get customerGatewayIdInput(): string | undefined;
    private _enableAcceleration?;
    /**
     * @stability stable
     */
    get enableAcceleration(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableAcceleration(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableAcceleration(): void;
    /**
     * @stability stable
     */
    get enableAccelerationInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _localIpv4NetworkCidr?;
    /**
     * @stability stable
     */
    get localIpv4NetworkCidr(): string;
    /**
     * @stability stable
     */
    set localIpv4NetworkCidr(value: string);
    /**
     * @stability stable
     */
    resetLocalIpv4NetworkCidr(): void;
    /**
     * @stability stable
     */
    get localIpv4NetworkCidrInput(): string | undefined;
    private _localIpv6NetworkCidr?;
    /**
     * @stability stable
     */
    get localIpv6NetworkCidr(): string;
    /**
     * @stability stable
     */
    set localIpv6NetworkCidr(value: string);
    /**
     * @stability stable
     */
    resetLocalIpv6NetworkCidr(): void;
    /**
     * @stability stable
     */
    get localIpv6NetworkCidrInput(): string | undefined;
    private _remoteIpv4NetworkCidr?;
    /**
     * @stability stable
     */
    get remoteIpv4NetworkCidr(): string;
    /**
     * @stability stable
     */
    set remoteIpv4NetworkCidr(value: string);
    /**
     * @stability stable
     */
    resetRemoteIpv4NetworkCidr(): void;
    /**
     * @stability stable
     */
    get remoteIpv4NetworkCidrInput(): string | undefined;
    private _remoteIpv6NetworkCidr?;
    /**
     * @stability stable
     */
    get remoteIpv6NetworkCidr(): string;
    /**
     * @stability stable
     */
    set remoteIpv6NetworkCidr(value: string);
    /**
     * @stability stable
     */
    resetRemoteIpv6NetworkCidr(): void;
    /**
     * @stability stable
     */
    get remoteIpv6NetworkCidrInput(): string | undefined;
    /**
     * @stability stable
     */
    routes(index: string): VpnConnectionRoutes;
    private _staticRoutesOnly?;
    /**
     * @stability stable
     */
    get staticRoutesOnly(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set staticRoutesOnly(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetStaticRoutesOnly(): void;
    /**
     * @stability stable
     */
    get staticRoutesOnlyInput(): boolean | cdktf.IResolvable | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get transitGatewayAttachmentId(): string;
    private _transitGatewayId?;
    /**
     * @stability stable
     */
    get transitGatewayId(): string;
    /**
     * @stability stable
     */
    set transitGatewayId(value: string);
    /**
     * @stability stable
     */
    resetTransitGatewayId(): void;
    /**
     * @stability stable
     */
    get transitGatewayIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get tunnel1Address(): string;
    /**
     * @stability stable
     */
    get tunnel1BgpAsn(): string;
    /**
     * @stability stable
     */
    get tunnel1BgpHoldtime(): number;
    /**
     * @stability stable
     */
    get tunnel1CgwInsideAddress(): string;
    private _tunnel1DpdTimeoutAction?;
    /**
     * @stability stable
     */
    get tunnel1DpdTimeoutAction(): string;
    /**
     * @stability stable
     */
    set tunnel1DpdTimeoutAction(value: string);
    /**
     * @stability stable
     */
    resetTunnel1DpdTimeoutAction(): void;
    /**
     * @stability stable
     */
    get tunnel1DpdTimeoutActionInput(): string | undefined;
    private _tunnel1DpdTimeoutSeconds?;
    /**
     * @stability stable
     */
    get tunnel1DpdTimeoutSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel1DpdTimeoutSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel1DpdTimeoutSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel1DpdTimeoutSecondsInput(): number | undefined;
    private _tunnel1IkeVersions?;
    /**
     * @stability stable
     */
    get tunnel1IkeVersions(): string[];
    /**
     * @stability stable
     */
    set tunnel1IkeVersions(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel1IkeVersions(): void;
    /**
     * @stability stable
     */
    get tunnel1IkeVersionsInput(): string[] | undefined;
    private _tunnel1InsideCidr?;
    /**
     * @stability stable
     */
    get tunnel1InsideCidr(): string;
    /**
     * @stability stable
     */
    set tunnel1InsideCidr(value: string);
    /**
     * @stability stable
     */
    resetTunnel1InsideCidr(): void;
    /**
     * @stability stable
     */
    get tunnel1InsideCidrInput(): string | undefined;
    private _tunnel1InsideIpv6Cidr?;
    /**
     * @stability stable
     */
    get tunnel1InsideIpv6Cidr(): string;
    /**
     * @stability stable
     */
    set tunnel1InsideIpv6Cidr(value: string);
    /**
     * @stability stable
     */
    resetTunnel1InsideIpv6Cidr(): void;
    /**
     * @stability stable
     */
    get tunnel1InsideIpv6CidrInput(): string | undefined;
    private _tunnel1Phase1DhGroupNumbers?;
    /**
     * @stability stable
     */
    get tunnel1Phase1DhGroupNumbers(): number[];
    /**
     * @stability stable
     */
    set tunnel1Phase1DhGroupNumbers(value: number[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase1DhGroupNumbers(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase1DhGroupNumbersInput(): number[] | undefined;
    private _tunnel1Phase1EncryptionAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel1Phase1EncryptionAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel1Phase1EncryptionAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase1EncryptionAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase1EncryptionAlgorithmsInput(): string[] | undefined;
    private _tunnel1Phase1IntegrityAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel1Phase1IntegrityAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel1Phase1IntegrityAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase1IntegrityAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase1IntegrityAlgorithmsInput(): string[] | undefined;
    private _tunnel1Phase1LifetimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel1Phase1LifetimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel1Phase1LifetimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel1Phase1LifetimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase1LifetimeSecondsInput(): number | undefined;
    private _tunnel1Phase2DhGroupNumbers?;
    /**
     * @stability stable
     */
    get tunnel1Phase2DhGroupNumbers(): number[];
    /**
     * @stability stable
     */
    set tunnel1Phase2DhGroupNumbers(value: number[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase2DhGroupNumbers(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase2DhGroupNumbersInput(): number[] | undefined;
    private _tunnel1Phase2EncryptionAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel1Phase2EncryptionAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel1Phase2EncryptionAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase2EncryptionAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase2EncryptionAlgorithmsInput(): string[] | undefined;
    private _tunnel1Phase2IntegrityAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel1Phase2IntegrityAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel1Phase2IntegrityAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel1Phase2IntegrityAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase2IntegrityAlgorithmsInput(): string[] | undefined;
    private _tunnel1Phase2LifetimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel1Phase2LifetimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel1Phase2LifetimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel1Phase2LifetimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel1Phase2LifetimeSecondsInput(): number | undefined;
    private _tunnel1PresharedKey?;
    /**
     * @stability stable
     */
    get tunnel1PresharedKey(): string;
    /**
     * @stability stable
     */
    set tunnel1PresharedKey(value: string);
    /**
     * @stability stable
     */
    resetTunnel1PresharedKey(): void;
    /**
     * @stability stable
     */
    get tunnel1PresharedKeyInput(): string | undefined;
    private _tunnel1RekeyFuzzPercentage?;
    /**
     * @stability stable
     */
    get tunnel1RekeyFuzzPercentage(): number;
    /**
     * @stability stable
     */
    set tunnel1RekeyFuzzPercentage(value: number);
    /**
     * @stability stable
     */
    resetTunnel1RekeyFuzzPercentage(): void;
    /**
     * @stability stable
     */
    get tunnel1RekeyFuzzPercentageInput(): number | undefined;
    private _tunnel1RekeyMarginTimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel1RekeyMarginTimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel1RekeyMarginTimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel1RekeyMarginTimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel1RekeyMarginTimeSecondsInput(): number | undefined;
    private _tunnel1ReplayWindowSize?;
    /**
     * @stability stable
     */
    get tunnel1ReplayWindowSize(): number;
    /**
     * @stability stable
     */
    set tunnel1ReplayWindowSize(value: number);
    /**
     * @stability stable
     */
    resetTunnel1ReplayWindowSize(): void;
    /**
     * @stability stable
     */
    get tunnel1ReplayWindowSizeInput(): number | undefined;
    private _tunnel1StartupAction?;
    /**
     * @stability stable
     */
    get tunnel1StartupAction(): string;
    /**
     * @stability stable
     */
    set tunnel1StartupAction(value: string);
    /**
     * @stability stable
     */
    resetTunnel1StartupAction(): void;
    /**
     * @stability stable
     */
    get tunnel1StartupActionInput(): string | undefined;
    /**
     * @stability stable
     */
    get tunnel1VgwInsideAddress(): string;
    /**
     * @stability stable
     */
    get tunnel2Address(): string;
    /**
     * @stability stable
     */
    get tunnel2BgpAsn(): string;
    /**
     * @stability stable
     */
    get tunnel2BgpHoldtime(): number;
    /**
     * @stability stable
     */
    get tunnel2CgwInsideAddress(): string;
    private _tunnel2DpdTimeoutAction?;
    /**
     * @stability stable
     */
    get tunnel2DpdTimeoutAction(): string;
    /**
     * @stability stable
     */
    set tunnel2DpdTimeoutAction(value: string);
    /**
     * @stability stable
     */
    resetTunnel2DpdTimeoutAction(): void;
    /**
     * @stability stable
     */
    get tunnel2DpdTimeoutActionInput(): string | undefined;
    private _tunnel2DpdTimeoutSeconds?;
    /**
     * @stability stable
     */
    get tunnel2DpdTimeoutSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel2DpdTimeoutSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel2DpdTimeoutSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel2DpdTimeoutSecondsInput(): number | undefined;
    private _tunnel2IkeVersions?;
    /**
     * @stability stable
     */
    get tunnel2IkeVersions(): string[];
    /**
     * @stability stable
     */
    set tunnel2IkeVersions(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel2IkeVersions(): void;
    /**
     * @stability stable
     */
    get tunnel2IkeVersionsInput(): string[] | undefined;
    private _tunnel2InsideCidr?;
    /**
     * @stability stable
     */
    get tunnel2InsideCidr(): string;
    /**
     * @stability stable
     */
    set tunnel2InsideCidr(value: string);
    /**
     * @stability stable
     */
    resetTunnel2InsideCidr(): void;
    /**
     * @stability stable
     */
    get tunnel2InsideCidrInput(): string | undefined;
    private _tunnel2InsideIpv6Cidr?;
    /**
     * @stability stable
     */
    get tunnel2InsideIpv6Cidr(): string;
    /**
     * @stability stable
     */
    set tunnel2InsideIpv6Cidr(value: string);
    /**
     * @stability stable
     */
    resetTunnel2InsideIpv6Cidr(): void;
    /**
     * @stability stable
     */
    get tunnel2InsideIpv6CidrInput(): string | undefined;
    private _tunnel2Phase1DhGroupNumbers?;
    /**
     * @stability stable
     */
    get tunnel2Phase1DhGroupNumbers(): number[];
    /**
     * @stability stable
     */
    set tunnel2Phase1DhGroupNumbers(value: number[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase1DhGroupNumbers(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase1DhGroupNumbersInput(): number[] | undefined;
    private _tunnel2Phase1EncryptionAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel2Phase1EncryptionAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel2Phase1EncryptionAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase1EncryptionAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase1EncryptionAlgorithmsInput(): string[] | undefined;
    private _tunnel2Phase1IntegrityAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel2Phase1IntegrityAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel2Phase1IntegrityAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase1IntegrityAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase1IntegrityAlgorithmsInput(): string[] | undefined;
    private _tunnel2Phase1LifetimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel2Phase1LifetimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel2Phase1LifetimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel2Phase1LifetimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase1LifetimeSecondsInput(): number | undefined;
    private _tunnel2Phase2DhGroupNumbers?;
    /**
     * @stability stable
     */
    get tunnel2Phase2DhGroupNumbers(): number[];
    /**
     * @stability stable
     */
    set tunnel2Phase2DhGroupNumbers(value: number[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase2DhGroupNumbers(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase2DhGroupNumbersInput(): number[] | undefined;
    private _tunnel2Phase2EncryptionAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel2Phase2EncryptionAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel2Phase2EncryptionAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase2EncryptionAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase2EncryptionAlgorithmsInput(): string[] | undefined;
    private _tunnel2Phase2IntegrityAlgorithms?;
    /**
     * @stability stable
     */
    get tunnel2Phase2IntegrityAlgorithms(): string[];
    /**
     * @stability stable
     */
    set tunnel2Phase2IntegrityAlgorithms(value: string[]);
    /**
     * @stability stable
     */
    resetTunnel2Phase2IntegrityAlgorithms(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase2IntegrityAlgorithmsInput(): string[] | undefined;
    private _tunnel2Phase2LifetimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel2Phase2LifetimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel2Phase2LifetimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel2Phase2LifetimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel2Phase2LifetimeSecondsInput(): number | undefined;
    private _tunnel2PresharedKey?;
    /**
     * @stability stable
     */
    get tunnel2PresharedKey(): string;
    /**
     * @stability stable
     */
    set tunnel2PresharedKey(value: string);
    /**
     * @stability stable
     */
    resetTunnel2PresharedKey(): void;
    /**
     * @stability stable
     */
    get tunnel2PresharedKeyInput(): string | undefined;
    private _tunnel2RekeyFuzzPercentage?;
    /**
     * @stability stable
     */
    get tunnel2RekeyFuzzPercentage(): number;
    /**
     * @stability stable
     */
    set tunnel2RekeyFuzzPercentage(value: number);
    /**
     * @stability stable
     */
    resetTunnel2RekeyFuzzPercentage(): void;
    /**
     * @stability stable
     */
    get tunnel2RekeyFuzzPercentageInput(): number | undefined;
    private _tunnel2RekeyMarginTimeSeconds?;
    /**
     * @stability stable
     */
    get tunnel2RekeyMarginTimeSeconds(): number;
    /**
     * @stability stable
     */
    set tunnel2RekeyMarginTimeSeconds(value: number);
    /**
     * @stability stable
     */
    resetTunnel2RekeyMarginTimeSeconds(): void;
    /**
     * @stability stable
     */
    get tunnel2RekeyMarginTimeSecondsInput(): number | undefined;
    private _tunnel2ReplayWindowSize?;
    /**
     * @stability stable
     */
    get tunnel2ReplayWindowSize(): number;
    /**
     * @stability stable
     */
    set tunnel2ReplayWindowSize(value: number);
    /**
     * @stability stable
     */
    resetTunnel2ReplayWindowSize(): void;
    /**
     * @stability stable
     */
    get tunnel2ReplayWindowSizeInput(): number | undefined;
    private _tunnel2StartupAction?;
    /**
     * @stability stable
     */
    get tunnel2StartupAction(): string;
    /**
     * @stability stable
     */
    set tunnel2StartupAction(value: string);
    /**
     * @stability stable
     */
    resetTunnel2StartupAction(): void;
    /**
     * @stability stable
     */
    get tunnel2StartupActionInput(): string | undefined;
    /**
     * @stability stable
     */
    get tunnel2VgwInsideAddress(): string;
    private _tunnelInsideIpVersion?;
    /**
     * @stability stable
     */
    get tunnelInsideIpVersion(): string;
    /**
     * @stability stable
     */
    set tunnelInsideIpVersion(value: string);
    /**
     * @stability stable
     */
    resetTunnelInsideIpVersion(): void;
    /**
     * @stability stable
     */
    get tunnelInsideIpVersionInput(): string | undefined;
    private _type?;
    /**
     * @stability stable
     */
    get type(): string;
    /**
     * @stability stable
     */
    set type(value: string);
    /**
     * @stability stable
     */
    get typeInput(): string | undefined;
    /**
     * @stability stable
     */
    vgwTelemetry(index: string): VpnConnectionVgwTelemetry;
    private _vpnGatewayId?;
    /**
     * @stability stable
     */
    get vpnGatewayId(): string;
    /**
     * @stability stable
     */
    set vpnGatewayId(value: string);
    /**
     * @stability stable
     */
    resetVpnGatewayId(): void;
    /**
     * @stability stable
     */
    get vpnGatewayIdInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

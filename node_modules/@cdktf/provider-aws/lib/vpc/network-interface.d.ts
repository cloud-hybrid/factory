import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS VPC.
 *
 * @stability stable
 */
export interface NetworkInterfaceConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#description NetworkInterface#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#interface_type NetworkInterface#interface_type}.
     *
     * @stability stable
     */
    readonly interfaceType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv4_prefix_count NetworkInterface#ipv4_prefix_count}.
     *
     * @stability stable
     */
    readonly ipv4PrefixCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv4_prefixes NetworkInterface#ipv4_prefixes}.
     *
     * @stability stable
     */
    readonly ipv4Prefixes?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv6_address_count NetworkInterface#ipv6_address_count}.
     *
     * @stability stable
     */
    readonly ipv6AddressCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv6_addresses NetworkInterface#ipv6_addresses}.
     *
     * @stability stable
     */
    readonly ipv6Addresses?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv6_prefix_count NetworkInterface#ipv6_prefix_count}.
     *
     * @stability stable
     */
    readonly ipv6PrefixCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#ipv6_prefixes NetworkInterface#ipv6_prefixes}.
     *
     * @stability stable
     */
    readonly ipv6Prefixes?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#private_ip NetworkInterface#private_ip}.
     *
     * @stability stable
     */
    readonly privateIp?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#private_ips NetworkInterface#private_ips}.
     *
     * @stability stable
     */
    readonly privateIps?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#private_ips_count NetworkInterface#private_ips_count}.
     *
     * @stability stable
     */
    readonly privateIpsCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#security_groups NetworkInterface#security_groups}.
     *
     * @stability stable
     */
    readonly securityGroups?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#source_dest_check NetworkInterface#source_dest_check}.
     *
     * @stability stable
     */
    readonly sourceDestCheck?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#subnet_id NetworkInterface#subnet_id}.
     *
     * @stability stable
     */
    readonly subnetId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#tags NetworkInterface#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#tags_all NetworkInterface#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * attachment block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#attachment NetworkInterface#attachment}
     *
     * @stability stable
     */
    readonly attachment?: NetworkInterfaceAttachment[];
}
/**
 * @stability stable
 */
export interface NetworkInterfaceAttachment {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#device_index NetworkInterface#device_index}.
     *
     * @stability stable
     */
    readonly deviceIndex: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html#instance NetworkInterface#instance}.
     *
     * @stability stable
     */
    readonly instance: string;
}
export declare function networkInterfaceAttachmentToTerraform(struct?: NetworkInterfaceAttachment): any;
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html aws_network_interface}.
 *
 * @stability stable
 */
export declare class NetworkInterface extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/network_interface.html aws_network_interface} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: NetworkInterfaceConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _interfaceType?;
    /**
     * @stability stable
     */
    get interfaceType(): string;
    /**
     * @stability stable
     */
    set interfaceType(value: string);
    /**
     * @stability stable
     */
    resetInterfaceType(): void;
    /**
     * @stability stable
     */
    get interfaceTypeInput(): string | undefined;
    private _ipv4PrefixCount?;
    /**
     * @stability stable
     */
    get ipv4PrefixCount(): number;
    /**
     * @stability stable
     */
    set ipv4PrefixCount(value: number);
    /**
     * @stability stable
     */
    resetIpv4PrefixCount(): void;
    /**
     * @stability stable
     */
    get ipv4PrefixCountInput(): number | undefined;
    private _ipv4Prefixes?;
    /**
     * @stability stable
     */
    get ipv4Prefixes(): string[];
    /**
     * @stability stable
     */
    set ipv4Prefixes(value: string[]);
    /**
     * @stability stable
     */
    resetIpv4Prefixes(): void;
    /**
     * @stability stable
     */
    get ipv4PrefixesInput(): string[] | undefined;
    private _ipv6AddressCount?;
    /**
     * @stability stable
     */
    get ipv6AddressCount(): number;
    /**
     * @stability stable
     */
    set ipv6AddressCount(value: number);
    /**
     * @stability stable
     */
    resetIpv6AddressCount(): void;
    /**
     * @stability stable
     */
    get ipv6AddressCountInput(): number | undefined;
    private _ipv6Addresses?;
    /**
     * @stability stable
     */
    get ipv6Addresses(): string[];
    /**
     * @stability stable
     */
    set ipv6Addresses(value: string[]);
    /**
     * @stability stable
     */
    resetIpv6Addresses(): void;
    /**
     * @stability stable
     */
    get ipv6AddressesInput(): string[] | undefined;
    private _ipv6PrefixCount?;
    /**
     * @stability stable
     */
    get ipv6PrefixCount(): number;
    /**
     * @stability stable
     */
    set ipv6PrefixCount(value: number);
    /**
     * @stability stable
     */
    resetIpv6PrefixCount(): void;
    /**
     * @stability stable
     */
    get ipv6PrefixCountInput(): number | undefined;
    private _ipv6Prefixes?;
    /**
     * @stability stable
     */
    get ipv6Prefixes(): string[];
    /**
     * @stability stable
     */
    set ipv6Prefixes(value: string[]);
    /**
     * @stability stable
     */
    resetIpv6Prefixes(): void;
    /**
     * @stability stable
     */
    get ipv6PrefixesInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get macAddress(): string;
    /**
     * @stability stable
     */
    get outpostArn(): string;
    /**
     * @stability stable
     */
    get ownerId(): string;
    /**
     * @stability stable
     */
    get privateDnsName(): string;
    private _privateIp?;
    /**
     * @stability stable
     */
    get privateIp(): string;
    /**
     * @stability stable
     */
    set privateIp(value: string);
    /**
     * @stability stable
     */
    resetPrivateIp(): void;
    /**
     * @stability stable
     */
    get privateIpInput(): string | undefined;
    private _privateIps?;
    /**
     * @stability stable
     */
    get privateIps(): string[];
    /**
     * @stability stable
     */
    set privateIps(value: string[]);
    /**
     * @stability stable
     */
    resetPrivateIps(): void;
    /**
     * @stability stable
     */
    get privateIpsInput(): string[] | undefined;
    private _privateIpsCount?;
    /**
     * @stability stable
     */
    get privateIpsCount(): number;
    /**
     * @stability stable
     */
    set privateIpsCount(value: number);
    /**
     * @stability stable
     */
    resetPrivateIpsCount(): void;
    /**
     * @stability stable
     */
    get privateIpsCountInput(): number | undefined;
    private _securityGroups?;
    /**
     * @stability stable
     */
    get securityGroups(): string[];
    /**
     * @stability stable
     */
    set securityGroups(value: string[]);
    /**
     * @stability stable
     */
    resetSecurityGroups(): void;
    /**
     * @stability stable
     */
    get securityGroupsInput(): string[] | undefined;
    private _sourceDestCheck?;
    /**
     * @stability stable
     */
    get sourceDestCheck(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set sourceDestCheck(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetSourceDestCheck(): void;
    /**
     * @stability stable
     */
    get sourceDestCheckInput(): boolean | cdktf.IResolvable | undefined;
    private _subnetId?;
    /**
     * @stability stable
     */
    get subnetId(): string;
    /**
     * @stability stable
     */
    set subnetId(value: string);
    /**
     * @stability stable
     */
    get subnetIdInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _attachment?;
    /**
     * @stability stable
     */
    get attachment(): NetworkInterfaceAttachment[];
    /**
     * @stability stable
     */
    set attachment(value: NetworkInterfaceAttachment[]);
    /**
     * @stability stable
     */
    resetAttachment(): void;
    /**
     * @stability stable
     */
    get attachmentInput(): NetworkInterfaceAttachment[] | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

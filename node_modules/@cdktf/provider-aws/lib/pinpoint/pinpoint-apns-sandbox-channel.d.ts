import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Pinpoint.
 *
 * @stability stable
 */
export interface PinpointApnsSandboxChannelConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#application_id PinpointApnsSandboxChannel#application_id}.
     *
     * @stability stable
     */
    readonly applicationId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#bundle_id PinpointApnsSandboxChannel#bundle_id}.
     *
     * @stability stable
     */
    readonly bundleId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#certificate PinpointApnsSandboxChannel#certificate}.
     *
     * @stability stable
     */
    readonly certificate?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#default_authentication_method PinpointApnsSandboxChannel#default_authentication_method}.
     *
     * @stability stable
     */
    readonly defaultAuthenticationMethod?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#enabled PinpointApnsSandboxChannel#enabled}.
     *
     * @stability stable
     */
    readonly enabled?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#private_key PinpointApnsSandboxChannel#private_key}.
     *
     * @stability stable
     */
    readonly privateKey?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#team_id PinpointApnsSandboxChannel#team_id}.
     *
     * @stability stable
     */
    readonly teamId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#token_key PinpointApnsSandboxChannel#token_key}.
     *
     * @stability stable
     */
    readonly tokenKey?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html#token_key_id PinpointApnsSandboxChannel#token_key_id}.
     *
     * @stability stable
     */
    readonly tokenKeyId?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html aws_pinpoint_apns_sandbox_channel}.
 *
 * @stability stable
 */
export declare class PinpointApnsSandboxChannel extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/pinpoint_apns_sandbox_channel.html aws_pinpoint_apns_sandbox_channel} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: PinpointApnsSandboxChannelConfig);
    private _applicationId?;
    /**
     * @stability stable
     */
    get applicationId(): string;
    /**
     * @stability stable
     */
    set applicationId(value: string);
    /**
     * @stability stable
     */
    get applicationIdInput(): string | undefined;
    private _bundleId?;
    /**
     * @stability stable
     */
    get bundleId(): string;
    /**
     * @stability stable
     */
    set bundleId(value: string);
    /**
     * @stability stable
     */
    resetBundleId(): void;
    /**
     * @stability stable
     */
    get bundleIdInput(): string | undefined;
    private _certificate?;
    /**
     * @stability stable
     */
    get certificate(): string;
    /**
     * @stability stable
     */
    set certificate(value: string);
    /**
     * @stability stable
     */
    resetCertificate(): void;
    /**
     * @stability stable
     */
    get certificateInput(): string | undefined;
    private _defaultAuthenticationMethod?;
    /**
     * @stability stable
     */
    get defaultAuthenticationMethod(): string;
    /**
     * @stability stable
     */
    set defaultAuthenticationMethod(value: string);
    /**
     * @stability stable
     */
    resetDefaultAuthenticationMethod(): void;
    /**
     * @stability stable
     */
    get defaultAuthenticationMethodInput(): string | undefined;
    private _enabled?;
    /**
     * @stability stable
     */
    get enabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnabled(): void;
    /**
     * @stability stable
     */
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _privateKey?;
    /**
     * @stability stable
     */
    get privateKey(): string;
    /**
     * @stability stable
     */
    set privateKey(value: string);
    /**
     * @stability stable
     */
    resetPrivateKey(): void;
    /**
     * @stability stable
     */
    get privateKeyInput(): string | undefined;
    private _teamId?;
    /**
     * @stability stable
     */
    get teamId(): string;
    /**
     * @stability stable
     */
    set teamId(value: string);
    /**
     * @stability stable
     */
    resetTeamId(): void;
    /**
     * @stability stable
     */
    get teamIdInput(): string | undefined;
    private _tokenKey?;
    /**
     * @stability stable
     */
    get tokenKey(): string;
    /**
     * @stability stable
     */
    set tokenKey(value: string);
    /**
     * @stability stable
     */
    resetTokenKey(): void;
    /**
     * @stability stable
     */
    get tokenKeyInput(): string | undefined;
    private _tokenKeyId?;
    /**
     * @stability stable
     */
    get tokenKeyId(): string;
    /**
     * @stability stable
     */
    set tokenKeyId(value: string);
    /**
     * @stability stable
     */
    resetTokenKeyId(): void;
    /**
     * @stability stable
     */
    get tokenKeyIdInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { DirectedGraph } from "graphology";
import { Scope } from "./types";
export declare function forEachGlobal<T, R>(scope: Scope, prefix: string, record: Record<string, T> | undefined, iterator: (scope: Scope, key: string, id: string, value: T, graph: DirectedGraph) => R): Record<string, (graph: DirectedGraph) => R>;
export declare function forEachProvider<T, R>(scope: Scope, record: Record<string, T[]> | undefined, iterator: (scope: Scope, key: string, id: string, value: T, graph: DirectedGraph) => R): Record<string, (graph: DirectedGraph) => R>;
export declare function forEachNamespaced<T, R>(scope: Scope, record: Record<string, Record<string, T>> | undefined, iterator: (scope: Scope, type: string, key: string, id: string, value: T, graph: DirectedGraph) => R, prefix?: string): Record<string, (graph: DirectedGraph) => R>;
export declare function resourceStats(obj: Record<string, Record<string, unknown>>): Record<string, Record<string, number>>;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_1 = require("camelcase");
const decamelize = require("decamelize");
const COMMON_ABBREVIATIONS = [
    'KiB',
    'MiB',
    'GiB',
];
function toCamelCase(...args) {
    return camelcase_1.default(args);
}
exports.toCamelCase = toCamelCase;
function toPascalCase(...args) {
    return camelcase_1.default(args, { pascalCase: true });
}
exports.toPascalCase = toPascalCase;
const ABBREV_RE = new RegExp(`(^|[^A-Z])(${COMMON_ABBREVIATIONS.map(regexQuote).join('|')})($|[^a-z])`, 'g');
function toSnakeCase(s, sep = '_') {
    // Save common abbrevations
    s = s.replace(ABBREV_RE, (_, before, abbr, after) => before + ucfirst(abbr.toLowerCase()) + after);
    return decamelize(s, sep);
    function ucfirst(str) {
        return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase();
    }
}
exports.toSnakeCase = toSnakeCase;
function regexQuote(s) {
    return s.replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNhc2UtdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBaUQ7QUFDakQseUNBQXlDO0FBRXpDLE1BQU0sb0JBQW9CLEdBQUc7SUFDM0IsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0NBQ04sQ0FBQztBQUVGLFNBQWdCLFdBQVcsQ0FBQyxHQUFHLElBQWM7SUFDM0MsT0FBTyxtQkFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pCLENBQUM7QUFGRCxrQ0FFQztBQUVELFNBQWdCLFlBQVksQ0FBQyxHQUFHLElBQWM7SUFDNUMsT0FBTyxtQkFBUyxDQUFDLElBQUksRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCxvQ0FFQztBQUVELE1BQU0sU0FBUyxHQUFHLElBQUksTUFBTSxDQUFDLGNBQWMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzdHLFNBQWdCLFdBQVcsQ0FBQyxDQUFTLEVBQUUsR0FBRyxHQUFHLEdBQUc7SUFDOUMsMkJBQTJCO0lBQzNCLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQztJQUNuRyxPQUFPLFVBQVUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFFMUIsU0FBUyxPQUFPLENBQUMsR0FBVztRQUMxQixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEUsQ0FBQztBQUNILENBQUM7QUFSRCxrQ0FRQztBQUVELFNBQVMsVUFBVSxDQUFDLENBQVM7SUFDM0IsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLHNCQUFzQixFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ25ELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZhdWx0IGFzIGNhbWVsY2FzZSB9IGZyb20gJ2NhbWVsY2FzZSc7XG5pbXBvcnQgKiBhcyBkZWNhbWVsaXplIGZyb20gJ2RlY2FtZWxpemUnO1xuXG5jb25zdCBDT01NT05fQUJCUkVWSUFUSU9OUyA9IFtcbiAgJ0tpQicsXG4gICdNaUInLFxuICAnR2lCJyxcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0NhbWVsQ2FzZSguLi5hcmdzOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gIHJldHVybiBjYW1lbGNhc2UoYXJncyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b1Bhc2NhbENhc2UoLi4uYXJnczogc3RyaW5nW10pOiBzdHJpbmcge1xuICByZXR1cm4gY2FtZWxjYXNlKGFyZ3MsIHsgcGFzY2FsQ2FzZTogdHJ1ZSB9KTtcbn1cblxuY29uc3QgQUJCUkVWX1JFID0gbmV3IFJlZ0V4cChgKF58W15BLVpdKSgke0NPTU1PTl9BQkJSRVZJQVRJT05TLm1hcChyZWdleFF1b3RlKS5qb2luKCd8Jyl9KSgkfFteYS16XSlgLCAnZycpO1xuZXhwb3J0IGZ1bmN0aW9uIHRvU25ha2VDYXNlKHM6IHN0cmluZywgc2VwID0gJ18nKTogc3RyaW5nIHtcbiAgLy8gU2F2ZSBjb21tb24gYWJicmV2YXRpb25zXG4gIHMgPSBzLnJlcGxhY2UoQUJCUkVWX1JFLCAoXywgYmVmb3JlLCBhYmJyLCBhZnRlcikgPT4gYmVmb3JlICsgdWNmaXJzdChhYmJyLnRvTG93ZXJDYXNlKCkpICsgYWZ0ZXIpO1xuICByZXR1cm4gZGVjYW1lbGl6ZShzLCBzZXApO1xuXG4gIGZ1bmN0aW9uIHVjZmlyc3Qoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyLnN1YnN0cigwLCAxKS50b1VwcGVyQ2FzZSgpICsgc3RyLnN1YnN0cigxKS50b0xvd2VyQ2FzZSgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlZ2V4UXVvdGUoczogc3RyaW5nKSB7XG4gIHJldHVybiBzLnJlcGxhY2UoL1suPyorXiRbXFxdXFxcXCgpe318LV0vZywgJ1xcXFwkJicpO1xufVxuIl19
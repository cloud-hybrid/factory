"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const childProcess = require("child_process");
const path = require("path");
const util_1 = require("util");
const exec = util_1.promisify(childProcess.exec);
test('jsii-tree', () => expect(jsiiTree()).resolves.toMatchSnapshot());
test('jsii-tree --all', () => expect(jsiiTree('--all')).resolves.toMatchSnapshot());
test('jsii-tree --types', () => expect(jsiiTree('--types')).resolves.toMatchSnapshot());
test('jsii-tree --members', () => expect(jsiiTree('--members')).resolves.toMatchSnapshot());
test('jsii-tree --inheritance', () => expect(jsiiTree('--inheritance')).resolves.toMatchSnapshot());
test('jsii-tree --signatures', () => expect(jsiiTree('--signatures')).resolves.toMatchSnapshot());
async function jsiiTree(...args) {
    const command = [
        process.execPath,
        ...process.execArgv,
        path.join(__dirname, '..', 'bin', 'jsii-tree'),
        args.join(' '),
        '--no-colors',
        path.dirname(require.resolve('jsii-calc/package.json')),
    ].join(' ');
    const { stdout, stderr } = await exec(command);
    if (stderr) {
        console.error(stderr);
    }
    return stdout;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNpaS10cmVlLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJqc2lpLXRyZWUudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhDQUE4QztBQUM5Qyw2QkFBNkI7QUFDN0IsK0JBQWlDO0FBRWpDLE1BQU0sSUFBSSxHQUFHLGdCQUFTLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRTFDLElBQUksQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFdkUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxDQUMzQixNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFeEQsSUFBSSxDQUFDLG1CQUFtQixFQUFFLEdBQUcsRUFBRSxDQUM3QixNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFMUQsSUFBSSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRSxDQUMvQixNQUFNLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFNUQsSUFBSSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRSxDQUNuQyxNQUFNLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFaEUsSUFBSSxDQUFDLHdCQUF3QixFQUFFLEdBQUcsRUFBRSxDQUNsQyxNQUFNLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUM7QUFFL0QsS0FBSyxVQUFVLFFBQVEsQ0FBQyxHQUFHLElBQWM7SUFDdkMsTUFBTSxPQUFPLEdBQUc7UUFDZCxPQUFPLENBQUMsUUFBUTtRQUNoQixHQUFHLE9BQU8sQ0FBQyxRQUFRO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsV0FBVyxDQUFDO1FBQzlDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQ2QsYUFBYTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0tBQ3hELENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRVosTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUUvQyxJQUFJLE1BQU0sRUFBRTtRQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDdkI7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY2hpbGRQcm9jZXNzIGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnO1xuXG5jb25zdCBleGVjID0gcHJvbWlzaWZ5KGNoaWxkUHJvY2Vzcy5leGVjKTtcblxudGVzdCgnanNpaS10cmVlJywgKCkgPT4gZXhwZWN0KGpzaWlUcmVlKCkpLnJlc29sdmVzLnRvTWF0Y2hTbmFwc2hvdCgpKTtcblxudGVzdCgnanNpaS10cmVlIC0tYWxsJywgKCkgPT5cbiAgZXhwZWN0KGpzaWlUcmVlKCctLWFsbCcpKS5yZXNvbHZlcy50b01hdGNoU25hcHNob3QoKSk7XG5cbnRlc3QoJ2pzaWktdHJlZSAtLXR5cGVzJywgKCkgPT5cbiAgZXhwZWN0KGpzaWlUcmVlKCctLXR5cGVzJykpLnJlc29sdmVzLnRvTWF0Y2hTbmFwc2hvdCgpKTtcblxudGVzdCgnanNpaS10cmVlIC0tbWVtYmVycycsICgpID0+XG4gIGV4cGVjdChqc2lpVHJlZSgnLS1tZW1iZXJzJykpLnJlc29sdmVzLnRvTWF0Y2hTbmFwc2hvdCgpKTtcblxudGVzdCgnanNpaS10cmVlIC0taW5oZXJpdGFuY2UnLCAoKSA9PlxuICBleHBlY3QoanNpaVRyZWUoJy0taW5oZXJpdGFuY2UnKSkucmVzb2x2ZXMudG9NYXRjaFNuYXBzaG90KCkpO1xuXG50ZXN0KCdqc2lpLXRyZWUgLS1zaWduYXR1cmVzJywgKCkgPT5cbiAgZXhwZWN0KGpzaWlUcmVlKCctLXNpZ25hdHVyZXMnKSkucmVzb2x2ZXMudG9NYXRjaFNuYXBzaG90KCkpO1xuXG5hc3luYyBmdW5jdGlvbiBqc2lpVHJlZSguLi5hcmdzOiBzdHJpbmdbXSkge1xuICBjb25zdCBjb21tYW5kID0gW1xuICAgIHByb2Nlc3MuZXhlY1BhdGgsXG4gICAgLi4ucHJvY2Vzcy5leGVjQXJndixcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4nLCAnYmluJywgJ2pzaWktdHJlZScpLFxuICAgIGFyZ3Muam9pbignICcpLFxuICAgICctLW5vLWNvbG9ycycsXG4gICAgcGF0aC5kaXJuYW1lKHJlcXVpcmUucmVzb2x2ZSgnanNpaS1jYWxjL3BhY2thZ2UuanNvbicpKSxcbiAgXS5qb2luKCcgJyk7XG5cbiAgY29uc3QgeyBzdGRvdXQsIHN0ZGVyciB9ID0gYXdhaXQgZXhlYyhjb21tYW5kKTtcblxuICBpZiAoc3RkZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihzdGRlcnIpO1xuICB9XG5cbiAgcmV0dXJuIHN0ZG91dDtcbn1cbiJdfQ==
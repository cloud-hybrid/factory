/// <reference types="node" />
import { Terraform, TerraformPlan, TerraformOutput, AbstractTerraformPlan } from "./terraform";
import { SynthesizedStack } from "../../helper/synth-stack";
export declare class TerraformCliPlan extends AbstractTerraformPlan implements TerraformPlan {
    readonly planFile: string;
    readonly plan: {
        [key: string]: any;
    };
    constructor(planFile: string, plan: {
        [key: string]: any;
    });
}
export declare class TerraformCli implements Terraform {
    readonly stack: SynthesizedStack;
    readonly workdir: string;
    constructor(stack: SynthesizedStack);
    init(): Promise<void>;
    plan(destroy?: boolean): Promise<TerraformPlan>;
    deploy(planFile: string, stdout: (chunk: Buffer) => any, extraOptions?: string[]): Promise<void>;
    destroy(stdout: (chunk: Buffer) => any): Promise<void>;
    version(): Promise<string>;
    output(): Promise<{
        [key: string]: TerraformOutput;
    }>;
    private get stateFileOption();
    setUserAgent(): Promise<void>;
}

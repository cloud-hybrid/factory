"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ORIGINAL_SNIPPET_KEY = void 0;
exports.ORIGINAL_SNIPPET_KEY = '$';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQTZCYSxRQUFBLG9CQUFvQixHQUFHLEdBQUcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNuaXBwZXRMb2NhdGlvbiB9IGZyb20gJy4uL3NuaXBwZXQnO1xuXG4vKipcbiAqIFRhYmxldCBmaWxlIHNjaGVtYVxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxldFNjaGVtYSB7XG4gIC8qKlxuICAgKiBTY2hlbWEgdmVyc2lvblxuICAgKi9cbiAgdmVyc2lvbjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGF0IHZlcnNpb24gb2YgdGhlIHRvb2wgdGhpcyBzY2hlbWEgd2FzIGdlbmVyYXRlZCB3aXRoXG4gICAqXG4gICAqIEhhc2hpbmcgYWxnb3JpdGhtcyBtYXkgZGVwZW5kIG9uIHRoZSB0b29sIHZlcnNpb24sIGFuZCB0aGUgdG9vbFxuICAgKiB3aWxsIHJlamVjdCB0YWJsZXRzIGdlbmVyYXRlZCBieSBkaWZmZXJlbnQgdmVyc2lvbnMuXG4gICAqXG4gICAqIFNpbmNlIHRhYmxldHMgYXJlIGRlc2lnbmVkIHRvIGJlIHVzZWQgYXMgc2NyYXRjaCBzcGFjZSBkdXJpbmcgYSBidWlsZCwgbm90XG4gICAqIGRlc2lnbmVkIHRvIGJlIHN0b3JlZCBsb25nLXRlcm0sIHRoaXMgbGltaXRhdGlvbiBkb2VzIG5vdCBpbXBhY3RcbiAgICogdXNhYmlsaXR5LlxuICAgKi9cbiAgdG9vbFZlcnNpb246IHN0cmluZztcblxuICAvKipcbiAgICogQWxsIHRoZSBzbmlwcGV0cyBpbiB0aGUgdGFibGV0XG4gICAqL1xuICBzbmlwcGV0czogeyBba2V5OiBzdHJpbmddOiBUcmFuc2xhdGVkU25pcHBldFNjaGVtYSB9O1xufVxuXG5leHBvcnQgY29uc3QgT1JJR0lOQUxfU05JUFBFVF9LRVkgPSAnJCc7XG5cbi8qKlxuICogU2NoZW1hIGZvciBhIHNuaXBwZXRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUcmFuc2xhdGVkU25pcHBldFNjaGVtYSB7XG4gIC8qKlxuICAgKiBUcmFuc2xhdGlvbnMgZm9yIGVhY2ggaW5kaXZpZHVhbCBsYW5ndWFnZVxuICAgKlxuICAgKiBTaW5jZSBUeXBlU2NyaXB0IGlzIGEgdmFsaWQgb3V0cHV0IHRyYW5zbGF0aW9uLCB0aGUgb3JpZ2luYWwgd2lsbCBiZVxuICAgKiBsaXN0ZWQgdW5kZXIgdGhlIGtleSAnJCcuXG4gICAqL1xuICByZWFkb25seSB0cmFuc2xhdGlvbnM6IHsgW2tleTogc3RyaW5nXTogVHJhbnNsYXRpb25TY2hlbWEgfTtcblxuICAvKipcbiAgICogQSBkZXNjcmlwdGlvbiBvZiB0aGUgbG9jYXRpb24gdGhpcyBjb2RlIHNuaXBwZXQgd2FzIGZvdW5kXG4gICAqL1xuICByZWFkb25seSBsb2NhdGlvbjogU25pcHBldExvY2F0aW9uO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoaXMgd2FzIGNvbXBpbGVkIHdpdGhvdXQgZXJyb3JzXG4gICAqXG4gICAqIFVuZGVmaW5lZCBtZWFucyBjb21waWxhdGlvbiB3YXMgbm90IGF0dGVtcHRlZC5cbiAgICovXG4gIHJlYWRvbmx5IGRpZENvbXBpbGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBGUU5zIG9mIGNsYXNzZXMgYW5kIGZ1bmN0aW9ucyByZWZlcmVuY2VkIGluIHRoaXMgc25pcHBldC5cbiAgICovXG4gIHJlYWRvbmx5IGZxbnNSZWZlcmVuY2VkPzogc3RyaW5nW107XG5cbiAgLyoqXG4gICAqIEEgZmluZ2VycHJpbnQgb2YgdGhlIHR5cGVzIHJlZmVyZW5jZWQgaW4gYGZxbnNSZWZlcmVuY2VkYC5cbiAgICpcbiAgICogVGhpcyBjYW4gYmUgdXNlZCB0byB2YWxpZGF0ZS9pbnZhbGlkYXRlIHByZXZpb3VzIGNvbXBpbGF0aW9ucyBvZiBhIHNuaXBwZXQuXG4gICAqXG4gICAqIEEgc25pcHBldCBuZWVkcyB0byBiZSByZWNvbXBpbGVkIGlmOlxuICAgKlxuICAgKiAtIEl0cyBzb3VyY2UgdGV4dCBjaGFuZ2VzOiBoYXNoIHdpbGwgYmUgZGlmZmVyZW50XG4gICAqIC0gSXRzIGZpeHR1cmUgY2hhbmdlczogZnVsbFNvdXJjZSB3aWxsIGJlIGRpZmZlcmVudFxuICAgKiAtIFRoZSByZWZlcmVuY2VkIHR5cGVzIGhhdmUgY2hhbmdlZDogZmluZ2VycHJpbnQgd2lsbCBiZSBkaWZmZXJlbnRcbiAgICovXG4gIHJlYWRvbmx5IGZxbnNGaW5nZXJwcmludD86IHN0cmluZztcblxuICAvKipcbiAgICogQ291bnRzIHRoZSBudW1iZXIgb2YgaW5zdGFuY2VzIGVhY2gga2luZCBvZiBUeXBlc2NyaXB0IG9iamVjdCBzaG93cyB1cCBpbiB0aGUgc25pcHBldCBBU1QuXG4gICAqL1xuICByZWFkb25seSBzeW50YXhLaW5kQ291bnRlcj86IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH07XG5cbiAgLyoqXG4gICAqIFRoZSBmdWxsIHNvdXJjZSAod2l0aCBmaXh0dXJlKSB0aGF0IHdhcyBjb21waWxlZFxuICAgKi9cbiAgcmVhZG9ubHkgZnVsbFNvdXJjZT86IHN0cmluZztcbn1cblxuLyoqXG4gKiBBIHNpbmdsZSBzbmlwcGV0J3MgdHJhbnNsYXRpb25cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUcmFuc2xhdGlvblNjaGVtYSB7XG4gIC8qKlxuICAgKiBUaGUgc291cmNlIG9mIGEgc2luZ2xlIHRyYW5zbGF0aW9uXG4gICAqL1xuICByZWFkb25seSBzb3VyY2U6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHZlcnNpb24gb2YgdGhlIHRyYW5zbGF0b3IgdXNlZCB0byBvYnRhaW4gdGhpcyB0cmFuc2xhdGlvblxuICAgKi9cbiAgcmVhZG9ubHkgdmVyc2lvbjogc3RyaW5nO1xufVxuIl19
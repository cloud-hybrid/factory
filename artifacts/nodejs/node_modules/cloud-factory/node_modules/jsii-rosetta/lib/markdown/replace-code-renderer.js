"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplaceCodeTransform = void 0;
/**
 * Renderer that replaces code blocks in a MarkDown document
 */
class ReplaceCodeTransform {
    constructor(replacer) {
        this.replacer = replacer;
    }
    code_block(node) {
        var _a, _b;
        const line = node.sourcepos[0][0];
        const ret = this.replacer({
            language: (_a = node.info) !== null && _a !== void 0 ? _a : '',
            source: (_b = node.literal) !== null && _b !== void 0 ? _b : '',
        }, line);
        node.info = ret.language;
        node.literal = ret.source + (!ret.source || ret.source.endsWith('\n') ? '' : '\n');
    }
    block_quote() {
        /* nothing */
    }
    code() {
        /* nothing */
    }
    text() {
        /* nothing */
    }
    softbreak() {
        /* nothing */
    }
    linebreak() {
        /* nothing */
    }
    emph() {
        /* nothing */
    }
    strong() {
        /* nothing */
    }
    html_inline() {
        /* nothing */
    }
    html_block() {
        /* nothing */
    }
    link() {
        /* nothing */
    }
    image() {
        /* nothing */
    }
    document() {
        /* nothing */
    }
    paragraph() {
        /* nothing */
    }
    list() {
        /* nothing */
    }
    item() {
        /* nothing */
    }
    heading() {
        /* nothing */
    }
    thematic_break() {
        /* nothing */
    }
    custom_block() {
        /* nothing */
    }
    custom_inline() {
        /* nothing */
    }
}
exports.ReplaceCodeTransform = ReplaceCodeTransform;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGFjZS1jb2RlLXJlbmRlcmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicmVwbGFjZS1jb2RlLXJlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BOztHQUVHO0FBQ0gsTUFBYSxvQkFBb0I7SUFDL0IsWUFBb0MsUUFBc0I7UUFBdEIsYUFBUSxHQUFSLFFBQVEsQ0FBYztJQUFHLENBQUM7SUFFdkQsVUFBVSxDQUFDLElBQWE7O1FBQzdCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FDdkI7WUFDRSxRQUFRLFFBQUUsSUFBSSxDQUFDLElBQUksbUNBQUksRUFBRTtZQUN6QixNQUFNLFFBQUUsSUFBSSxDQUFDLE9BQU8sbUNBQUksRUFBRTtTQUMzQixFQUNELElBQUksQ0FDTCxDQUFDO1FBQ0YsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyRixDQUFDO0lBRU0sV0FBVztRQUNoQixhQUFhO0lBQ2YsQ0FBQztJQUNNLElBQUk7UUFDVCxhQUFhO0lBQ2YsQ0FBQztJQUNNLElBQUk7UUFDVCxhQUFhO0lBQ2YsQ0FBQztJQUNNLFNBQVM7UUFDZCxhQUFhO0lBQ2YsQ0FBQztJQUNNLFNBQVM7UUFDZCxhQUFhO0lBQ2YsQ0FBQztJQUNNLElBQUk7UUFDVCxhQUFhO0lBQ2YsQ0FBQztJQUNNLE1BQU07UUFDWCxhQUFhO0lBQ2YsQ0FBQztJQUNNLFdBQVc7UUFDaEIsYUFBYTtJQUNmLENBQUM7SUFDTSxVQUFVO1FBQ2YsYUFBYTtJQUNmLENBQUM7SUFDTSxJQUFJO1FBQ1QsYUFBYTtJQUNmLENBQUM7SUFDTSxLQUFLO1FBQ1YsYUFBYTtJQUNmLENBQUM7SUFDTSxRQUFRO1FBQ2IsYUFBYTtJQUNmLENBQUM7SUFDTSxTQUFTO1FBQ2QsYUFBYTtJQUNmLENBQUM7SUFDTSxJQUFJO1FBQ1QsYUFBYTtJQUNmLENBQUM7SUFDTSxJQUFJO1FBQ1QsYUFBYTtJQUNmLENBQUM7SUFDTSxPQUFPO1FBQ1osYUFBYTtJQUNmLENBQUM7SUFDTSxjQUFjO1FBQ25CLGFBQWE7SUFDZixDQUFDO0lBQ00sWUFBWTtRQUNqQixhQUFhO0lBQ2YsQ0FBQztJQUNNLGFBQWE7UUFDbEIsYUFBYTtJQUNmLENBQUM7Q0FDRjtBQXpFRCxvREF5RUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjbSBmcm9tICdjb21tb25tYXJrJztcblxuaW1wb3J0IHsgQ29tbW9uTWFya1Zpc2l0b3IgfSBmcm9tICcuL21hcmtkb3duJztcbmltcG9ydCB7IENvZGVCbG9jayB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBDb2RlUmVwbGFjZXIgPSAoY29kZTogQ29kZUJsb2NrLCBsaW5lOiBudW1iZXIpID0+IENvZGVCbG9jaztcblxuLyoqXG4gKiBSZW5kZXJlciB0aGF0IHJlcGxhY2VzIGNvZGUgYmxvY2tzIGluIGEgTWFya0Rvd24gZG9jdW1lbnRcbiAqL1xuZXhwb3J0IGNsYXNzIFJlcGxhY2VDb2RlVHJhbnNmb3JtIGltcGxlbWVudHMgQ29tbW9uTWFya1Zpc2l0b3Ige1xuICBwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSByZXBsYWNlcjogQ29kZVJlcGxhY2VyKSB7fVxuXG4gIHB1YmxpYyBjb2RlX2Jsb2NrKG5vZGU6IGNtLk5vZGUpIHtcbiAgICBjb25zdCBsaW5lID0gbm9kZS5zb3VyY2Vwb3NbMF1bMF07XG4gICAgY29uc3QgcmV0ID0gdGhpcy5yZXBsYWNlcihcbiAgICAgIHtcbiAgICAgICAgbGFuZ3VhZ2U6IG5vZGUuaW5mbyA/PyAnJyxcbiAgICAgICAgc291cmNlOiBub2RlLmxpdGVyYWwgPz8gJycsXG4gICAgICB9LFxuICAgICAgbGluZSxcbiAgICApO1xuICAgIG5vZGUuaW5mbyA9IHJldC5sYW5ndWFnZTtcbiAgICBub2RlLmxpdGVyYWwgPSByZXQuc291cmNlICsgKCFyZXQuc291cmNlIHx8IHJldC5zb3VyY2UuZW5kc1dpdGgoJ1xcbicpID8gJycgOiAnXFxuJyk7XG4gIH1cblxuICBwdWJsaWMgYmxvY2tfcXVvdGUoKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBjb2RlKCk6IHZvaWQge1xuICAgIC8qIG5vdGhpbmcgKi9cbiAgfVxuICBwdWJsaWMgdGV4dCgpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIHNvZnRicmVhaygpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIGxpbmVicmVhaygpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIGVtcGgoKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBzdHJvbmcoKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBodG1sX2lubGluZSgpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIGh0bWxfYmxvY2soKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBsaW5rKCk6IHZvaWQge1xuICAgIC8qIG5vdGhpbmcgKi9cbiAgfVxuICBwdWJsaWMgaW1hZ2UoKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBkb2N1bWVudCgpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIHBhcmFncmFwaCgpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIGxpc3QoKTogdm9pZCB7XG4gICAgLyogbm90aGluZyAqL1xuICB9XG4gIHB1YmxpYyBpdGVtKCk6IHZvaWQge1xuICAgIC8qIG5vdGhpbmcgKi9cbiAgfVxuICBwdWJsaWMgaGVhZGluZygpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbiAgcHVibGljIHRoZW1hdGljX2JyZWFrKCk6IHZvaWQge1xuICAgIC8qIG5vdGhpbmcgKi9cbiAgfVxuICBwdWJsaWMgY3VzdG9tX2Jsb2NrKCk6IHZvaWQge1xuICAgIC8qIG5vdGhpbmcgKi9cbiAgfVxuICBwdWJsaWMgY3VzdG9tX2lubGluZSgpOiB2b2lkIHtcbiAgICAvKiBub3RoaW5nICovXG4gIH1cbn1cbiJdfQ==
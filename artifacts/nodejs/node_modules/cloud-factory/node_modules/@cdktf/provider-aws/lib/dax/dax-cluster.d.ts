import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS DynamoDB Accelerator.
 *
 * @stability stable
 */
export interface DaxClusterConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#availability_zones DaxCluster#availability_zones}.
     *
     * @stability stable
     */
    readonly availabilityZones?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#cluster_name DaxCluster#cluster_name}.
     *
     * @stability stable
     */
    readonly clusterName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#description DaxCluster#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#iam_role_arn DaxCluster#iam_role_arn}.
     *
     * @stability stable
     */
    readonly iamRoleArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#maintenance_window DaxCluster#maintenance_window}.
     *
     * @stability stable
     */
    readonly maintenanceWindow?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#node_type DaxCluster#node_type}.
     *
     * @stability stable
     */
    readonly nodeType: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#notification_topic_arn DaxCluster#notification_topic_arn}.
     *
     * @stability stable
     */
    readonly notificationTopicArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#parameter_group_name DaxCluster#parameter_group_name}.
     *
     * @stability stable
     */
    readonly parameterGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#replication_factor DaxCluster#replication_factor}.
     *
     * @stability stable
     */
    readonly replicationFactor: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#security_group_ids DaxCluster#security_group_ids}.
     *
     * @stability stable
     */
    readonly securityGroupIds?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#subnet_group_name DaxCluster#subnet_group_name}.
     *
     * @stability stable
     */
    readonly subnetGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#tags DaxCluster#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#tags_all DaxCluster#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * server_side_encryption block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#server_side_encryption DaxCluster#server_side_encryption}
     *
     * @stability stable
     */
    readonly serverSideEncryption?: DaxClusterServerSideEncryption;
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#timeouts DaxCluster#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: DaxClusterTimeouts;
}
/**
 * @stability stable
 */
export declare class DaxClusterNodes extends cdktf.ComplexComputedList {
    /**
     * @stability stable
     */
    get address(): string;
    /**
     * @stability stable
     */
    get availabilityZone(): string;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get port(): number;
}
/**
 * @stability stable
 */
export interface DaxClusterServerSideEncryption {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#enabled DaxCluster#enabled}.
     *
     * @stability stable
     */
    readonly enabled?: boolean | cdktf.IResolvable;
}
export declare function daxClusterServerSideEncryptionToTerraform(struct?: DaxClusterServerSideEncryptionOutputReference | DaxClusterServerSideEncryption): any;
/**
 * @stability stable
 */
export declare class DaxClusterServerSideEncryptionOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): DaxClusterServerSideEncryption | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: DaxClusterServerSideEncryption | undefined);
    private _enabled?;
    /**
     * @stability stable
     */
    get enabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnabled(): void;
    /**
     * @stability stable
     */
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
}
/**
 * @stability stable
 */
export interface DaxClusterTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#create DaxCluster#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#delete DaxCluster#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html#update DaxCluster#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function daxClusterTimeoutsToTerraform(struct?: DaxClusterTimeoutsOutputReference | DaxClusterTimeouts): any;
/**
 * @stability stable
 */
export declare class DaxClusterTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): DaxClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: DaxClusterTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html aws_dax_cluster}.
 *
 * @stability stable
 */
export declare class DaxCluster extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/dax_cluster.html aws_dax_cluster} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DaxClusterConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _availabilityZones?;
    /**
     * @stability stable
     */
    get availabilityZones(): string[];
    /**
     * @stability stable
     */
    set availabilityZones(value: string[]);
    /**
     * @stability stable
     */
    resetAvailabilityZones(): void;
    /**
     * @stability stable
     */
    get availabilityZonesInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get clusterAddress(): string;
    private _clusterName?;
    /**
     * @stability stable
     */
    get clusterName(): string;
    /**
     * @stability stable
     */
    set clusterName(value: string);
    /**
     * @stability stable
     */
    get clusterNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get configurationEndpoint(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _iamRoleArn?;
    /**
     * @stability stable
     */
    get iamRoleArn(): string;
    /**
     * @stability stable
     */
    set iamRoleArn(value: string);
    /**
     * @stability stable
     */
    get iamRoleArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _maintenanceWindow?;
    /**
     * @stability stable
     */
    get maintenanceWindow(): string;
    /**
     * @stability stable
     */
    set maintenanceWindow(value: string);
    /**
     * @stability stable
     */
    resetMaintenanceWindow(): void;
    /**
     * @stability stable
     */
    get maintenanceWindowInput(): string | undefined;
    private _nodeType?;
    /**
     * @stability stable
     */
    get nodeType(): string;
    /**
     * @stability stable
     */
    set nodeType(value: string);
    /**
     * @stability stable
     */
    get nodeTypeInput(): string | undefined;
    /**
     * @stability stable
     */
    nodes(index: string): DaxClusterNodes;
    private _notificationTopicArn?;
    /**
     * @stability stable
     */
    get notificationTopicArn(): string;
    /**
     * @stability stable
     */
    set notificationTopicArn(value: string);
    /**
     * @stability stable
     */
    resetNotificationTopicArn(): void;
    /**
     * @stability stable
     */
    get notificationTopicArnInput(): string | undefined;
    private _parameterGroupName?;
    /**
     * @stability stable
     */
    get parameterGroupName(): string;
    /**
     * @stability stable
     */
    set parameterGroupName(value: string);
    /**
     * @stability stable
     */
    resetParameterGroupName(): void;
    /**
     * @stability stable
     */
    get parameterGroupNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get port(): number;
    private _replicationFactor?;
    /**
     * @stability stable
     */
    get replicationFactor(): number;
    /**
     * @stability stable
     */
    set replicationFactor(value: number);
    /**
     * @stability stable
     */
    get replicationFactorInput(): number | undefined;
    private _securityGroupIds?;
    /**
     * @stability stable
     */
    get securityGroupIds(): string[];
    /**
     * @stability stable
     */
    set securityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    resetSecurityGroupIds(): void;
    /**
     * @stability stable
     */
    get securityGroupIdsInput(): string[] | undefined;
    private _subnetGroupName?;
    /**
     * @stability stable
     */
    get subnetGroupName(): string;
    /**
     * @stability stable
     */
    set subnetGroupName(value: string);
    /**
     * @stability stable
     */
    resetSubnetGroupName(): void;
    /**
     * @stability stable
     */
    get subnetGroupNameInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _serverSideEncryption;
    /**
     * @stability stable
     */
    get serverSideEncryption(): DaxClusterServerSideEncryptionOutputReference;
    /**
     * @stability stable
     */
    putServerSideEncryption(value: DaxClusterServerSideEncryption): void;
    /**
     * @stability stable
     */
    resetServerSideEncryption(): void;
    /**
     * @stability stable
     */
    get serverSideEncryptionInput(): DaxClusterServerSideEncryption | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): DaxClusterTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: DaxClusterTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): DaxClusterTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

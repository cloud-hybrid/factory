import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Glue.
 *
 * @stability stable
 */
export interface GlueSchemaConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#compatibility GlueSchema#compatibility}.
     *
     * @stability stable
     */
    readonly compatibility: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#data_format GlueSchema#data_format}.
     *
     * @stability stable
     */
    readonly dataFormat: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#description GlueSchema#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#registry_arn GlueSchema#registry_arn}.
     *
     * @stability stable
     */
    readonly registryArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#schema_definition GlueSchema#schema_definition}.
     *
     * @stability stable
     */
    readonly schemaDefinition: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#schema_name GlueSchema#schema_name}.
     *
     * @stability stable
     */
    readonly schemaName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#tags GlueSchema#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html#tags_all GlueSchema#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html aws_glue_schema}.
 *
 * @stability stable
 */
export declare class GlueSchema extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/glue_schema.html aws_glue_schema} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: GlueSchemaConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _compatibility?;
    /**
     * @stability stable
     */
    get compatibility(): string;
    /**
     * @stability stable
     */
    set compatibility(value: string);
    /**
     * @stability stable
     */
    get compatibilityInput(): string | undefined;
    private _dataFormat?;
    /**
     * @stability stable
     */
    get dataFormat(): string;
    /**
     * @stability stable
     */
    set dataFormat(value: string);
    /**
     * @stability stable
     */
    get dataFormatInput(): string | undefined;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get latestSchemaVersion(): number;
    /**
     * @stability stable
     */
    get nextSchemaVersion(): number;
    private _registryArn?;
    /**
     * @stability stable
     */
    get registryArn(): string;
    /**
     * @stability stable
     */
    set registryArn(value: string);
    /**
     * @stability stable
     */
    resetRegistryArn(): void;
    /**
     * @stability stable
     */
    get registryArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get registryName(): string;
    /**
     * @stability stable
     */
    get schemaCheckpoint(): number;
    private _schemaDefinition?;
    /**
     * @stability stable
     */
    get schemaDefinition(): string;
    /**
     * @stability stable
     */
    set schemaDefinition(value: string);
    /**
     * @stability stable
     */
    get schemaDefinitionInput(): string | undefined;
    private _schemaName?;
    /**
     * @stability stable
     */
    get schemaName(): string;
    /**
     * @stability stable
     */
    set schemaName(value: string);
    /**
     * @stability stable
     */
    get schemaNameInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

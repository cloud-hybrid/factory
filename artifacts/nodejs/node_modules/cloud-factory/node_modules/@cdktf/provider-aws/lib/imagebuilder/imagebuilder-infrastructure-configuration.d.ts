import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Image Builder.
 *
 * @stability stable
 */
export interface ImagebuilderInfrastructureConfigurationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#description ImagebuilderInfrastructureConfiguration#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#instance_profile_name ImagebuilderInfrastructureConfiguration#instance_profile_name}.
     *
     * @stability stable
     */
    readonly instanceProfileName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#instance_types ImagebuilderInfrastructureConfiguration#instance_types}.
     *
     * @stability stable
     */
    readonly instanceTypes?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#key_pair ImagebuilderInfrastructureConfiguration#key_pair}.
     *
     * @stability stable
     */
    readonly keyPair?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#name ImagebuilderInfrastructureConfiguration#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#resource_tags ImagebuilderInfrastructureConfiguration#resource_tags}.
     *
     * @stability stable
     */
    readonly resourceTags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#security_group_ids ImagebuilderInfrastructureConfiguration#security_group_ids}.
     *
     * @stability stable
     */
    readonly securityGroupIds?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#sns_topic_arn ImagebuilderInfrastructureConfiguration#sns_topic_arn}.
     *
     * @stability stable
     */
    readonly snsTopicArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#subnet_id ImagebuilderInfrastructureConfiguration#subnet_id}.
     *
     * @stability stable
     */
    readonly subnetId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#tags ImagebuilderInfrastructureConfiguration#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#tags_all ImagebuilderInfrastructureConfiguration#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#terminate_instance_on_failure ImagebuilderInfrastructureConfiguration#terminate_instance_on_failure}.
     *
     * @stability stable
     */
    readonly terminateInstanceOnFailure?: boolean | cdktf.IResolvable;
    /**
     * logging block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#logging ImagebuilderInfrastructureConfiguration#logging}
     *
     * @stability stable
     */
    readonly logging?: ImagebuilderInfrastructureConfigurationLogging;
}
/**
 * @stability stable
 */
export interface ImagebuilderInfrastructureConfigurationLoggingS3Logs {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#s3_bucket_name ImagebuilderInfrastructureConfiguration#s3_bucket_name}.
     *
     * @stability stable
     */
    readonly s3BucketName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#s3_key_prefix ImagebuilderInfrastructureConfiguration#s3_key_prefix}.
     *
     * @stability stable
     */
    readonly s3KeyPrefix?: string;
}
export declare function imagebuilderInfrastructureConfigurationLoggingS3LogsToTerraform(struct?: ImagebuilderInfrastructureConfigurationLoggingS3LogsOutputReference | ImagebuilderInfrastructureConfigurationLoggingS3Logs): any;
/**
 * @stability stable
 */
export declare class ImagebuilderInfrastructureConfigurationLoggingS3LogsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): ImagebuilderInfrastructureConfigurationLoggingS3Logs | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: ImagebuilderInfrastructureConfigurationLoggingS3Logs | undefined);
    private _s3BucketName?;
    /**
     * @stability stable
     */
    get s3BucketName(): string;
    /**
     * @stability stable
     */
    set s3BucketName(value: string);
    /**
     * @stability stable
     */
    get s3BucketNameInput(): string | undefined;
    private _s3KeyPrefix?;
    /**
     * @stability stable
     */
    get s3KeyPrefix(): string;
    /**
     * @stability stable
     */
    set s3KeyPrefix(value: string);
    /**
     * @stability stable
     */
    resetS3KeyPrefix(): void;
    /**
     * @stability stable
     */
    get s3KeyPrefixInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface ImagebuilderInfrastructureConfigurationLogging {
    /**
     * s3_logs block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html#s3_logs ImagebuilderInfrastructureConfiguration#s3_logs}
     *
     * @stability stable
     */
    readonly s3Logs: ImagebuilderInfrastructureConfigurationLoggingS3Logs;
}
export declare function imagebuilderInfrastructureConfigurationLoggingToTerraform(struct?: ImagebuilderInfrastructureConfigurationLoggingOutputReference | ImagebuilderInfrastructureConfigurationLogging): any;
/**
 * @stability stable
 */
export declare class ImagebuilderInfrastructureConfigurationLoggingOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): ImagebuilderInfrastructureConfigurationLogging | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: ImagebuilderInfrastructureConfigurationLogging | undefined);
    private _s3Logs;
    /**
     * @stability stable
     */
    get s3Logs(): ImagebuilderInfrastructureConfigurationLoggingS3LogsOutputReference;
    /**
     * @stability stable
     */
    putS3Logs(value: ImagebuilderInfrastructureConfigurationLoggingS3Logs): void;
    /**
     * @stability stable
     */
    get s3LogsInput(): ImagebuilderInfrastructureConfigurationLoggingS3Logs | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html aws_imagebuilder_infrastructure_configuration}.
 *
 * @stability stable
 */
export declare class ImagebuilderInfrastructureConfiguration extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/imagebuilder_infrastructure_configuration.html aws_imagebuilder_infrastructure_configuration} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ImagebuilderInfrastructureConfigurationConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get dateCreated(): string;
    /**
     * @stability stable
     */
    get dateUpdated(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instanceProfileName?;
    /**
     * @stability stable
     */
    get instanceProfileName(): string;
    /**
     * @stability stable
     */
    set instanceProfileName(value: string);
    /**
     * @stability stable
     */
    get instanceProfileNameInput(): string | undefined;
    private _instanceTypes?;
    /**
     * @stability stable
     */
    get instanceTypes(): string[];
    /**
     * @stability stable
     */
    set instanceTypes(value: string[]);
    /**
     * @stability stable
     */
    resetInstanceTypes(): void;
    /**
     * @stability stable
     */
    get instanceTypesInput(): string[] | undefined;
    private _keyPair?;
    /**
     * @stability stable
     */
    get keyPair(): string;
    /**
     * @stability stable
     */
    set keyPair(value: string);
    /**
     * @stability stable
     */
    resetKeyPair(): void;
    /**
     * @stability stable
     */
    get keyPairInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _resourceTags?;
    /**
     * @stability stable
     */
    get resourceTags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set resourceTags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetResourceTags(): void;
    /**
     * @stability stable
     */
    get resourceTagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _securityGroupIds?;
    /**
     * @stability stable
     */
    get securityGroupIds(): string[];
    /**
     * @stability stable
     */
    set securityGroupIds(value: string[]);
    /**
     * @stability stable
     */
    resetSecurityGroupIds(): void;
    /**
     * @stability stable
     */
    get securityGroupIdsInput(): string[] | undefined;
    private _snsTopicArn?;
    /**
     * @stability stable
     */
    get snsTopicArn(): string;
    /**
     * @stability stable
     */
    set snsTopicArn(value: string);
    /**
     * @stability stable
     */
    resetSnsTopicArn(): void;
    /**
     * @stability stable
     */
    get snsTopicArnInput(): string | undefined;
    private _subnetId?;
    /**
     * @stability stable
     */
    get subnetId(): string;
    /**
     * @stability stable
     */
    set subnetId(value: string);
    /**
     * @stability stable
     */
    resetSubnetId(): void;
    /**
     * @stability stable
     */
    get subnetIdInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _terminateInstanceOnFailure?;
    /**
     * @stability stable
     */
    get terminateInstanceOnFailure(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set terminateInstanceOnFailure(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTerminateInstanceOnFailure(): void;
    /**
     * @stability stable
     */
    get terminateInstanceOnFailureInput(): boolean | cdktf.IResolvable | undefined;
    private _logging;
    /**
     * @stability stable
     */
    get logging(): ImagebuilderInfrastructureConfigurationLoggingOutputReference;
    /**
     * @stability stable
     */
    putLogging(value: ImagebuilderInfrastructureConfigurationLogging): void;
    /**
     * @stability stable
     */
    resetLogging(): void;
    /**
     * @stability stable
     */
    get loggingInput(): ImagebuilderInfrastructureConfigurationLogging | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

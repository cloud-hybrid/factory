import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Lambda.
 *
 * @stability stable
 */
export interface LambdaAliasConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#description LambdaAlias#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#function_name LambdaAlias#function_name}.
     *
     * @stability stable
     */
    readonly functionName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#function_version LambdaAlias#function_version}.
     *
     * @stability stable
     */
    readonly functionVersion: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#name LambdaAlias#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * routing_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#routing_config LambdaAlias#routing_config}
     *
     * @stability stable
     */
    readonly routingConfig?: LambdaAliasRoutingConfig;
}
/**
 * @stability stable
 */
export interface LambdaAliasRoutingConfig {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html#additional_version_weights LambdaAlias#additional_version_weights}.
     *
     * @stability stable
     */
    readonly additionalVersionWeights?: {
        [key: string]: number;
    } | cdktf.IResolvable;
}
export declare function lambdaAliasRoutingConfigToTerraform(struct?: LambdaAliasRoutingConfigOutputReference | LambdaAliasRoutingConfig): any;
/**
 * @stability stable
 */
export declare class LambdaAliasRoutingConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): LambdaAliasRoutingConfig | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: LambdaAliasRoutingConfig | undefined);
    private _additionalVersionWeights?;
    /**
     * @stability stable
     */
    get additionalVersionWeights(): {
        [key: string]: number;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set additionalVersionWeights(value: {
        [key: string]: number;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetAdditionalVersionWeights(): void;
    /**
     * @stability stable
     */
    get additionalVersionWeightsInput(): cdktf.IResolvable | {
        [key: string]: number;
    } | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html aws_lambda_alias}.
 *
 * @stability stable
 */
export declare class LambdaAlias extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/lambda_alias.html aws_lambda_alias} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: LambdaAliasConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _functionName?;
    /**
     * @stability stable
     */
    get functionName(): string;
    /**
     * @stability stable
     */
    set functionName(value: string);
    /**
     * @stability stable
     */
    get functionNameInput(): string | undefined;
    private _functionVersion?;
    /**
     * @stability stable
     */
    get functionVersion(): string;
    /**
     * @stability stable
     */
    set functionVersion(value: string);
    /**
     * @stability stable
     */
    get functionVersionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get invokeArn(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _routingConfig;
    /**
     * @stability stable
     */
    get routingConfig(): LambdaAliasRoutingConfigOutputReference;
    /**
     * @stability stable
     */
    putRoutingConfig(value: LambdaAliasRoutingConfig): void;
    /**
     * @stability stable
     */
    resetRoutingConfig(): void;
    /**
     * @stability stable
     */
    get routingConfigInput(): LambdaAliasRoutingConfig | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

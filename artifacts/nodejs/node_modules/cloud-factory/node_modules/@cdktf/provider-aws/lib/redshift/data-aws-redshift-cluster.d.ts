import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Redshift.
 *
 * @stability stable
 */
export interface DataAwsRedshiftClusterConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/redshift_cluster.html#cluster_identifier DataAwsRedshiftCluster#cluster_identifier}.
     *
     * @stability stable
     */
    readonly clusterIdentifier: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/redshift_cluster.html#tags DataAwsRedshiftCluster#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/redshift_cluster.html aws_redshift_cluster}.
 *
 * @stability stable
 */
export declare class DataAwsRedshiftCluster extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/redshift_cluster.html aws_redshift_cluster} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DataAwsRedshiftClusterConfig);
    /**
     * @stability stable
     */
    get allowVersionUpgrade(): any;
    /**
     * @stability stable
     */
    get automatedSnapshotRetentionPeriod(): number;
    /**
     * @stability stable
     */
    get availabilityZone(): string;
    /**
     * @stability stable
     */
    get bucketName(): string;
    private _clusterIdentifier?;
    /**
     * @stability stable
     */
    get clusterIdentifier(): string;
    /**
     * @stability stable
     */
    set clusterIdentifier(value: string);
    /**
     * @stability stable
     */
    get clusterIdentifierInput(): string | undefined;
    /**
     * @stability stable
     */
    get clusterParameterGroupName(): string;
    /**
     * @stability stable
     */
    get clusterPublicKey(): string;
    /**
     * @stability stable
     */
    get clusterRevisionNumber(): string;
    /**
     * @stability stable
     */
    get clusterSecurityGroups(): string[];
    /**
     * @stability stable
     */
    get clusterSubnetGroupName(): string;
    /**
     * @stability stable
     */
    get clusterType(): string;
    /**
     * @stability stable
     */
    get clusterVersion(): string;
    /**
     * @stability stable
     */
    get databaseName(): string;
    /**
     * @stability stable
     */
    get elasticIp(): string;
    /**
     * @stability stable
     */
    get enableLogging(): any;
    /**
     * @stability stable
     */
    get encrypted(): any;
    /**
     * @stability stable
     */
    get endpoint(): string;
    /**
     * @stability stable
     */
    get enhancedVpcRouting(): any;
    /**
     * @stability stable
     */
    get iamRoles(): string[];
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get kmsKeyId(): string;
    /**
     * @stability stable
     */
    get masterUsername(): string;
    /**
     * @stability stable
     */
    get nodeType(): string;
    /**
     * @stability stable
     */
    get numberOfNodes(): number;
    /**
     * @stability stable
     */
    get port(): number;
    /**
     * @stability stable
     */
    get preferredMaintenanceWindow(): string;
    /**
     * @stability stable
     */
    get publiclyAccessible(): any;
    /**
     * @stability stable
     */
    get s3KeyPrefix(): string;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get vpcId(): string;
    /**
     * @stability stable
     */
    get vpcSecurityGroupIds(): string[];
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

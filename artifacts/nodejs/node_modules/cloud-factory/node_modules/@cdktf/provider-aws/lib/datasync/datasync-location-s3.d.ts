import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS DataSync.
 *
 * @stability stable
 */
export interface DatasyncLocationS3Config extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#agent_arns DatasyncLocationS3#agent_arns}.
     *
     * @stability stable
     */
    readonly agentArns?: string[];
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#s3_bucket_arn DatasyncLocationS3#s3_bucket_arn}.
     *
     * @stability stable
     */
    readonly s3BucketArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#s3_storage_class DatasyncLocationS3#s3_storage_class}.
     *
     * @stability stable
     */
    readonly s3StorageClass?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#subdirectory DatasyncLocationS3#subdirectory}.
     *
     * @stability stable
     */
    readonly subdirectory: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#tags DatasyncLocationS3#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#tags_all DatasyncLocationS3#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * s3_config block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#s3_config DatasyncLocationS3#s3_config}
     *
     * @stability stable
     */
    readonly s3Config: DatasyncLocationS3S3Config;
}
/**
 * @stability stable
 */
export interface DatasyncLocationS3S3Config {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html#bucket_access_role_arn DatasyncLocationS3#bucket_access_role_arn}.
     *
     * @stability stable
     */
    readonly bucketAccessRoleArn: string;
}
export declare function datasyncLocationS3S3ConfigToTerraform(struct?: DatasyncLocationS3S3ConfigOutputReference | DatasyncLocationS3S3Config): any;
/**
 * @stability stable
 */
export declare class DatasyncLocationS3S3ConfigOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): DatasyncLocationS3S3Config | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: DatasyncLocationS3S3Config | undefined);
    private _bucketAccessRoleArn?;
    /**
     * @stability stable
     */
    get bucketAccessRoleArn(): string;
    /**
     * @stability stable
     */
    set bucketAccessRoleArn(value: string);
    /**
     * @stability stable
     */
    get bucketAccessRoleArnInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html aws_datasync_location_s3}.
 *
 * @stability stable
 */
export declare class DatasyncLocationS3 extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/datasync_location_s3.html aws_datasync_location_s3} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DatasyncLocationS3Config);
    private _agentArns?;
    /**
     * @stability stable
     */
    get agentArns(): string[];
    /**
     * @stability stable
     */
    set agentArns(value: string[]);
    /**
     * @stability stable
     */
    resetAgentArns(): void;
    /**
     * @stability stable
     */
    get agentArnsInput(): string[] | undefined;
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _s3BucketArn?;
    /**
     * @stability stable
     */
    get s3BucketArn(): string;
    /**
     * @stability stable
     */
    set s3BucketArn(value: string);
    /**
     * @stability stable
     */
    get s3BucketArnInput(): string | undefined;
    private _s3StorageClass?;
    /**
     * @stability stable
     */
    get s3StorageClass(): string;
    /**
     * @stability stable
     */
    set s3StorageClass(value: string);
    /**
     * @stability stable
     */
    resetS3StorageClass(): void;
    /**
     * @stability stable
     */
    get s3StorageClassInput(): string | undefined;
    private _subdirectory?;
    /**
     * @stability stable
     */
    get subdirectory(): string;
    /**
     * @stability stable
     */
    set subdirectory(value: string);
    /**
     * @stability stable
     */
    get subdirectoryInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    get uri(): string;
    private _s3Config;
    /**
     * @stability stable
     */
    get s3Config(): DatasyncLocationS3S3ConfigOutputReference;
    /**
     * @stability stable
     */
    putS3Config(value: DatasyncLocationS3S3Config): void;
    /**
     * @stability stable
     */
    get s3ConfigInput(): DatasyncLocationS3S3Config | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Elastic Kubernetes Service.
 *
 * @stability stable
 */
export interface EksIdentityProviderConfigConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#cluster_name EksIdentityProviderConfig#cluster_name}.
     *
     * @stability stable
     */
    readonly clusterName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#tags EksIdentityProviderConfig#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#tags_all EksIdentityProviderConfig#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * oidc block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#oidc EksIdentityProviderConfig#oidc}
     *
     * @stability stable
     */
    readonly oidc: EksIdentityProviderConfigOidc;
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#timeouts EksIdentityProviderConfig#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: EksIdentityProviderConfigTimeouts;
}
/**
 * @stability stable
 */
export interface EksIdentityProviderConfigOidc {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#client_id EksIdentityProviderConfig#client_id}.
     *
     * @stability stable
     */
    readonly clientId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#groups_claim EksIdentityProviderConfig#groups_claim}.
     *
     * @stability stable
     */
    readonly groupsClaim?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#groups_prefix EksIdentityProviderConfig#groups_prefix}.
     *
     * @stability stable
     */
    readonly groupsPrefix?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#identity_provider_config_name EksIdentityProviderConfig#identity_provider_config_name}.
     *
     * @stability stable
     */
    readonly identityProviderConfigName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#issuer_url EksIdentityProviderConfig#issuer_url}.
     *
     * @stability stable
     */
    readonly issuerUrl: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#required_claims EksIdentityProviderConfig#required_claims}.
     *
     * @stability stable
     */
    readonly requiredClaims?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#username_claim EksIdentityProviderConfig#username_claim}.
     *
     * @stability stable
     */
    readonly usernameClaim?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#username_prefix EksIdentityProviderConfig#username_prefix}.
     *
     * @stability stable
     */
    readonly usernamePrefix?: string;
}
export declare function eksIdentityProviderConfigOidcToTerraform(struct?: EksIdentityProviderConfigOidcOutputReference | EksIdentityProviderConfigOidc): any;
/**
 * @stability stable
 */
export declare class EksIdentityProviderConfigOidcOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksIdentityProviderConfigOidc | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksIdentityProviderConfigOidc | undefined);
    private _clientId?;
    /**
     * @stability stable
     */
    get clientId(): string;
    /**
     * @stability stable
     */
    set clientId(value: string);
    /**
     * @stability stable
     */
    get clientIdInput(): string | undefined;
    private _groupsClaim?;
    /**
     * @stability stable
     */
    get groupsClaim(): string;
    /**
     * @stability stable
     */
    set groupsClaim(value: string);
    /**
     * @stability stable
     */
    resetGroupsClaim(): void;
    /**
     * @stability stable
     */
    get groupsClaimInput(): string | undefined;
    private _groupsPrefix?;
    /**
     * @stability stable
     */
    get groupsPrefix(): string;
    /**
     * @stability stable
     */
    set groupsPrefix(value: string);
    /**
     * @stability stable
     */
    resetGroupsPrefix(): void;
    /**
     * @stability stable
     */
    get groupsPrefixInput(): string | undefined;
    private _identityProviderConfigName?;
    /**
     * @stability stable
     */
    get identityProviderConfigName(): string;
    /**
     * @stability stable
     */
    set identityProviderConfigName(value: string);
    /**
     * @stability stable
     */
    get identityProviderConfigNameInput(): string | undefined;
    private _issuerUrl?;
    /**
     * @stability stable
     */
    get issuerUrl(): string;
    /**
     * @stability stable
     */
    set issuerUrl(value: string);
    /**
     * @stability stable
     */
    get issuerUrlInput(): string | undefined;
    private _requiredClaims?;
    /**
     * @stability stable
     */
    get requiredClaims(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set requiredClaims(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetRequiredClaims(): void;
    /**
     * @stability stable
     */
    get requiredClaimsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _usernameClaim?;
    /**
     * @stability stable
     */
    get usernameClaim(): string;
    /**
     * @stability stable
     */
    set usernameClaim(value: string);
    /**
     * @stability stable
     */
    resetUsernameClaim(): void;
    /**
     * @stability stable
     */
    get usernameClaimInput(): string | undefined;
    private _usernamePrefix?;
    /**
     * @stability stable
     */
    get usernamePrefix(): string;
    /**
     * @stability stable
     */
    set usernamePrefix(value: string);
    /**
     * @stability stable
     */
    resetUsernamePrefix(): void;
    /**
     * @stability stable
     */
    get usernamePrefixInput(): string | undefined;
}
/**
 * @stability stable
 */
export interface EksIdentityProviderConfigTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#create EksIdentityProviderConfig#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html#delete EksIdentityProviderConfig#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
}
export declare function eksIdentityProviderConfigTimeoutsToTerraform(struct?: EksIdentityProviderConfigTimeoutsOutputReference | EksIdentityProviderConfigTimeouts): any;
/**
 * @stability stable
 */
export declare class EksIdentityProviderConfigTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): EksIdentityProviderConfigTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: EksIdentityProviderConfigTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html aws_eks_identity_provider_config}.
 *
 * @stability stable
 */
export declare class EksIdentityProviderConfig extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/eks_identity_provider_config.html aws_eks_identity_provider_config} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: EksIdentityProviderConfigConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _clusterName?;
    /**
     * @stability stable
     */
    get clusterName(): string;
    /**
     * @stability stable
     */
    set clusterName(value: string);
    /**
     * @stability stable
     */
    get clusterNameInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get status(): string;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _oidc;
    /**
     * @stability stable
     */
    get oidc(): EksIdentityProviderConfigOidcOutputReference;
    /**
     * @stability stable
     */
    putOidc(value: EksIdentityProviderConfigOidc): void;
    /**
     * @stability stable
     */
    get oidcInput(): EksIdentityProviderConfigOidc | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): EksIdentityProviderConfigTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: EksIdentityProviderConfigTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): EksIdentityProviderConfigTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

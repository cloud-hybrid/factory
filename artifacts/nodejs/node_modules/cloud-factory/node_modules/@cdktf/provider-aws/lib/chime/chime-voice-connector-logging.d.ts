import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * Amazon Chime.
 *
 * @stability stable
 */
export interface ChimeVoiceConnectorLoggingConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/chime_voice_connector_logging.html#enable_sip_logs ChimeVoiceConnectorLogging#enable_sip_logs}.
     *
     * @stability stable
     */
    readonly enableSipLogs?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/chime_voice_connector_logging.html#voice_connector_id ChimeVoiceConnectorLogging#voice_connector_id}.
     *
     * @stability stable
     */
    readonly voiceConnectorId: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/chime_voice_connector_logging.html aws_chime_voice_connector_logging}.
 *
 * @stability stable
 */
export declare class ChimeVoiceConnectorLogging extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/chime_voice_connector_logging.html aws_chime_voice_connector_logging} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ChimeVoiceConnectorLoggingConfig);
    private _enableSipLogs?;
    /**
     * @stability stable
     */
    get enableSipLogs(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableSipLogs(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableSipLogs(): void;
    /**
     * @stability stable
     */
    get enableSipLogsInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _voiceConnectorId?;
    /**
     * @stability stable
     */
    get voiceConnectorId(): string;
    /**
     * @stability stable
     */
    set voiceConnectorId(value: string);
    /**
     * @stability stable
     */
    get voiceConnectorIdInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

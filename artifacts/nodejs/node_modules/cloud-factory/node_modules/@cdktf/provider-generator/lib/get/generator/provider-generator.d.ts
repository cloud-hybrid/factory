import { CodeMaker } from "codemaker";
import { ProviderSchema } from "./provider-schema";
import { ConstructsMakerTarget } from "../constructs-maker";
interface ProviderData {
    name: string;
    source: string;
    version: string;
}
export interface ProviderConstraints {
    [fqn: string]: ProviderData;
}
export declare class TerraformProviderGenerator {
    private readonly code;
    private providerConstraints?;
    private resourceParser;
    private resourceEmitter;
    private structEmitter;
    constructor(code: CodeMaker, schema: ProviderSchema, providerConstraints?: ConstructsMakerTarget[] | undefined);
    save(outdir: string): Promise<void>;
    private emitProvider;
    private emitIndexFile;
    private emitResourceFile;
    private emitNamespacedResourceFile;
    private emitResourceFileWithComplexStruct;
    private emitFileHeader;
}
export {};

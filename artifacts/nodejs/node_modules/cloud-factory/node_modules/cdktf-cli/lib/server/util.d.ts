import { WatchErrorOrigin, WatchState } from "./WatchClient";
export declare function readGitignore(directory: string): Promise<string[]>;
export declare type GraphQLWatchState = {
    status: WatchState["status"];
    stacks: Array<{
        name: string;
        constructPath: string;
        synthesizedStackPath: string;
        workingDirectory: string;
    }>;
    resources: Array<{
        id: string;
        action: "CREATE" | "UPDATE" | "DELETE" | "READ" | "NO_OP";
        deployState: "WAITING" | "UPDATING" | "UPDATED" | "CREATING" | "CREATED" | "DESTROYING" | "DESTROYED" | "SUCCESS" | "ERROR";
        changedAt: number;
    }>;
    error?: {
        message: string;
        recoverable: boolean;
        origin: WatchErrorOrigin | "SERVER";
        timestamp: number;
    };
};
export declare function mapWatchState(state: WatchState): GraphQLWatchState;

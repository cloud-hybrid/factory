"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwIfNotProjectDirectory = exports.isCdktfProjectDirectory = void 0;
const path = __importStar(require("path"));
const errors_1 = require("../../../lib/errors");
function isCdktfProjectDirectory(directory) {
    try {
        const cdktfPath = path.join(directory, "cdktf.json");
        const cdktf = require(cdktfPath);
        return cdktf.language && cdktf.app;
    }
    catch (_a) {
        return false;
    }
}
exports.isCdktfProjectDirectory = isCdktfProjectDirectory;
function throwIfNotProjectDirectory(command, directory = process.cwd()) {
    if (!isCdktfProjectDirectory(directory)) {
        throw errors_1.Errors.Usage(command, `${directory} is not a cdktf project directory, no cdktf.json found or cdktf.json is missing language / app keys`);
    }
}
exports.throwIfNotProjectDirectory = throwIfNotProjectDirectory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2stZGlyZWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2hlY2stZGlyZWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBNkI7QUFDN0IsZ0RBQTZDO0FBQzdDLFNBQWdCLHVCQUF1QixDQUFDLFNBQWlCO0lBQ3ZELElBQUk7UUFDRixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztRQUNyRCxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDakMsT0FBTyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUM7S0FDcEM7SUFBQyxXQUFNO1FBQ04sT0FBTyxLQUFLLENBQUM7S0FDZDtBQUNILENBQUM7QUFSRCwwREFRQztBQUVELFNBQWdCLDBCQUEwQixDQUN4QyxPQUFlLEVBQ2YsU0FBUyxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUU7SUFFekIsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3ZDLE1BQU0sZUFBTSxDQUFDLEtBQUssQ0FDaEIsT0FBTyxFQUNQLEdBQUcsU0FBUyxxR0FBcUcsQ0FDbEgsQ0FBQztLQUNIO0FBQ0gsQ0FBQztBQVZELGdFQVVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgRXJyb3JzIH0gZnJvbSBcIi4uLy4uLy4uL2xpYi9lcnJvcnNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc0Nka3RmUHJvamVjdERpcmVjdG9yeShkaXJlY3Rvcnk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNka3RmUGF0aCA9IHBhdGguam9pbihkaXJlY3RvcnksIFwiY2RrdGYuanNvblwiKTtcbiAgICBjb25zdCBjZGt0ZiA9IHJlcXVpcmUoY2RrdGZQYXRoKTtcbiAgICByZXR1cm4gY2RrdGYubGFuZ3VhZ2UgJiYgY2RrdGYuYXBwO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRocm93SWZOb3RQcm9qZWN0RGlyZWN0b3J5KFxuICBjb21tYW5kOiBzdHJpbmcsXG4gIGRpcmVjdG9yeSA9IHByb2Nlc3MuY3dkKClcbik6IHZvaWQge1xuICBpZiAoIWlzQ2RrdGZQcm9qZWN0RGlyZWN0b3J5KGRpcmVjdG9yeSkpIHtcbiAgICB0aHJvdyBFcnJvcnMuVXNhZ2UoXG4gICAgICBjb21tYW5kLFxuICAgICAgYCR7ZGlyZWN0b3J5fSBpcyBub3QgYSBjZGt0ZiBwcm9qZWN0IGRpcmVjdG9yeSwgbm8gY2RrdGYuanNvbiBmb3VuZCBvciBjZGt0Zi5qc29uIGlzIG1pc3NpbmcgbGFuZ3VhZ2UgLyBhcHAga2V5c2BcbiAgICApO1xuICB9XG59XG4iXX0=
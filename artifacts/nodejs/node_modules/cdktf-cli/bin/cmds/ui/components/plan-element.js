"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlanElement = exports.PlanElementStatus = void 0;
const react_1 = __importDefault(require("react"));
const ink_1 = require("ink");
const terraform_1 = require("../models/terraform");
const resource_name_1 = require("./resource-name");
exports.PlanElementStatus = ({ action }) => {
    let actionSymbol;
    let color;
    switch (action) {
        case terraform_1.PlannedResourceAction.CREATE:
            actionSymbol = "+";
            color = "green";
            break;
        case terraform_1.PlannedResourceAction.UPDATE:
            actionSymbol = "~";
            color = "yellow";
            break;
        case terraform_1.PlannedResourceAction.DELETE:
            actionSymbol = "-";
            color = "red";
            break;
        case terraform_1.PlannedResourceAction.READ:
            actionSymbol = "~";
            color = "cyan";
            break;
        case terraform_1.PlannedResourceAction.NO_OP:
            actionSymbol = "~";
            color = "cyan";
            break;
    }
    return react_1.default.createElement(ink_1.Text, { color: color },
        actionSymbol,
        "\u00A0");
};
exports.PlanElement = ({ resource, stackName }) => (react_1.default.createElement(react_1.default.Fragment, null,
    react_1.default.createElement(exports.PlanElementStatus, { action: resource.action }),
    react_1.default.createElement(resource_name_1.ResourceName, { name: resource.id, stackName: stackName })));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhbi1lbGVtZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGxhbi1lbGVtZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrREFBMEI7QUFDMUIsNkJBQTJCO0FBQzNCLG1EQUE2RTtBQUM3RSxtREFBK0M7QUFNbEMsUUFBQSxpQkFBaUIsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUEwQixFQUFFLEVBQUU7SUFDdEUsSUFBSSxZQUFvQixDQUFDO0lBQ3pCLElBQUksS0FBYSxDQUFDO0lBRWxCLFFBQVEsTUFBTSxFQUFFO1FBQ2QsS0FBSyxpQ0FBcUIsQ0FBQyxNQUFNO1lBQy9CLFlBQVksR0FBRyxHQUFHLENBQUM7WUFDbkIsS0FBSyxHQUFHLE9BQU8sQ0FBQztZQUNoQixNQUFNO1FBQ1IsS0FBSyxpQ0FBcUIsQ0FBQyxNQUFNO1lBQy9CLFlBQVksR0FBRyxHQUFHLENBQUM7WUFDbkIsS0FBSyxHQUFHLFFBQVEsQ0FBQztZQUNqQixNQUFNO1FBQ1IsS0FBSyxpQ0FBcUIsQ0FBQyxNQUFNO1lBQy9CLFlBQVksR0FBRyxHQUFHLENBQUM7WUFDbkIsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNkLE1BQU07UUFDUixLQUFLLGlDQUFxQixDQUFDLElBQUk7WUFDN0IsWUFBWSxHQUFHLEdBQUcsQ0FBQztZQUNuQixLQUFLLEdBQUcsTUFBTSxDQUFDO1lBQ2YsTUFBTTtRQUNSLEtBQUssaUNBQXFCLENBQUMsS0FBSztZQUM5QixZQUFZLEdBQUcsR0FBRyxDQUFDO1lBQ25CLEtBQUssR0FBRyxNQUFNLENBQUM7WUFDZixNQUFNO0tBQ1Q7SUFFRCxPQUFPLDhCQUFDLFVBQUksSUFBQyxLQUFLLEVBQUUsS0FBSztRQUFHLFlBQVk7aUJBQWMsQ0FBQztBQUN6RCxDQUFDLENBQUM7QUFPVyxRQUFBLFdBQVcsR0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBb0IsRUFBRSxFQUFFLENBQUMsQ0FDeEU7SUFDRSw4QkFBQyx5QkFBaUIsSUFBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLE1BQU0sR0FBSTtJQUM5Qyw4QkFBQyw0QkFBWSxJQUFDLElBQUksRUFBRSxRQUFRLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxTQUFTLEdBQUksQ0FDeEQsQ0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gXCJpbmtcIjtcbmltcG9ydCB7IFBsYW5uZWRSZXNvdXJjZSwgUGxhbm5lZFJlc291cmNlQWN0aW9uIH0gZnJvbSBcIi4uL21vZGVscy90ZXJyYWZvcm1cIjtcbmltcG9ydCB7IFJlc291cmNlTmFtZSB9IGZyb20gXCIuL3Jlc291cmNlLW5hbWVcIjtcblxuaW50ZXJmYWNlIFBsYW5FbGVtZW50U3RhdHVzUHJvcHMge1xuICBhY3Rpb246IFBsYW5uZWRSZXNvdXJjZUFjdGlvbjtcbn1cblxuZXhwb3J0IGNvbnN0IFBsYW5FbGVtZW50U3RhdHVzID0gKHsgYWN0aW9uIH06IFBsYW5FbGVtZW50U3RhdHVzUHJvcHMpID0+IHtcbiAgbGV0IGFjdGlvblN5bWJvbDogc3RyaW5nO1xuICBsZXQgY29sb3I6IHN0cmluZztcblxuICBzd2l0Y2ggKGFjdGlvbikge1xuICAgIGNhc2UgUGxhbm5lZFJlc291cmNlQWN0aW9uLkNSRUFURTpcbiAgICAgIGFjdGlvblN5bWJvbCA9IFwiK1wiO1xuICAgICAgY29sb3IgPSBcImdyZWVuXCI7XG4gICAgICBicmVhaztcbiAgICBjYXNlIFBsYW5uZWRSZXNvdXJjZUFjdGlvbi5VUERBVEU6XG4gICAgICBhY3Rpb25TeW1ib2wgPSBcIn5cIjtcbiAgICAgIGNvbG9yID0gXCJ5ZWxsb3dcIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgUGxhbm5lZFJlc291cmNlQWN0aW9uLkRFTEVURTpcbiAgICAgIGFjdGlvblN5bWJvbCA9IFwiLVwiO1xuICAgICAgY29sb3IgPSBcInJlZFwiO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBQbGFubmVkUmVzb3VyY2VBY3Rpb24uUkVBRDpcbiAgICAgIGFjdGlvblN5bWJvbCA9IFwiflwiO1xuICAgICAgY29sb3IgPSBcImN5YW5cIjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgUGxhbm5lZFJlc291cmNlQWN0aW9uLk5PX09QOlxuICAgICAgYWN0aW9uU3ltYm9sID0gXCJ+XCI7XG4gICAgICBjb2xvciA9IFwiY3lhblwiO1xuICAgICAgYnJlYWs7XG4gIH1cblxuICByZXR1cm4gPFRleHQgY29sb3I9e2NvbG9yfT57YWN0aW9uU3ltYm9sfSZuYnNwOzwvVGV4dD47XG59O1xuXG5pbnRlcmZhY2UgUGxhbkVsZW1lbnRQcm9wcyB7XG4gIHJlc291cmNlOiBQbGFubmVkUmVzb3VyY2U7XG4gIHN0YWNrTmFtZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFBsYW5FbGVtZW50ID0gKHsgcmVzb3VyY2UsIHN0YWNrTmFtZSB9OiBQbGFuRWxlbWVudFByb3BzKSA9PiAoXG4gIDw+XG4gICAgPFBsYW5FbGVtZW50U3RhdHVzIGFjdGlvbj17cmVzb3VyY2UuYWN0aW9ufSAvPlxuICAgIDxSZXNvdXJjZU5hbWUgbmFtZT17cmVzb3VyY2UuaWR9IHN0YWNrTmFtZT17c3RhY2tOYW1lfSAvPlxuICA8Lz5cbik7XG4iXX0=
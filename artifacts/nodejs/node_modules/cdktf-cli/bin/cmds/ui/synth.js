"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Synth = void 0;
const react_1 = __importStar(require("react"));
const ink_1 = require("ink");
const ink_spinner_1 = __importDefault(require("ink-spinner"));
const terraform_context_1 = require("./terraform-context");
const SynthOutput = ({ jsonOutput }) => {
    const { currentStack, stacks } = terraform_context_1.useTerraformState();
    return (react_1.default.createElement(react_1.default.Fragment, null, jsonOutput ? (react_1.default.createElement(ink_1.Box, null,
        react_1.default.createElement(ink_1.Text, null, currentStack.content))) : (react_1.default.createElement(ink_1.Text, null,
        "Generated Terraform code for the stacks:",
        " ", stacks === null || stacks === void 0 ? void 0 :
        stacks.map((s) => s.name).join(", ")))));
};
exports.Synth = ({ targetDir, targetStack, synthCommand, jsonOutput, }) => {
    const { status, currentStack, errors } = terraform_context_1.useRunSynth({
        targetDir,
        targetStack,
        synthCommand,
    });
    const isSynthesizing = status != terraform_context_1.Status.SYNTHESIZED;
    const statusText = currentStack.name === "" ? (`${status}...`) : (react_1.default.createElement(ink_1.Text, null,
        status,
        react_1.default.createElement(ink_1.Text, { bold: true },
            "\u00A0",
            currentStack.name),
        "..."));
    if (errors)
        return react_1.default.createElement(ink_1.Box, null, errors);
    return (react_1.default.createElement(ink_1.Box, null, isSynthesizing ? (react_1.default.createElement(react_1.Fragment, null,
        react_1.default.createElement(ink_1.Text, { color: "green" },
            react_1.default.createElement(ink_spinner_1.default, { type: "dots" })),
        react_1.default.createElement(ink_1.Box, { paddingLeft: 1 },
            react_1.default.createElement(ink_1.Text, null, statusText)))) : (react_1.default.createElement(react_1.Fragment, null,
        react_1.default.createElement(ink_1.Box, null,
            react_1.default.createElement(SynthOutput, { jsonOutput: jsonOutput }))))));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ludGguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzeW50aC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtDQUF3QztBQUN4Qyw2QkFBZ0M7QUFDaEMsOERBQWtDO0FBQ2xDLDJEQUE2RTtBQWdCN0UsTUFBTSxXQUFXLEdBQUcsQ0FBQyxFQUFFLFVBQVUsRUFBcUIsRUFBc0IsRUFBRTtJQUM1RSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxHQUFHLHFDQUFpQixFQUFFLENBQUM7SUFFckQsT0FBTyxDQUNMLDhEQUNHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FDWiw4QkFBQyxTQUFHO1FBQ0YsOEJBQUMsVUFBSSxRQUFFLFlBQVksQ0FBQyxPQUFPLENBQVEsQ0FDL0IsQ0FDUCxDQUFDLENBQUMsQ0FBQyxDQUNGLDhCQUFDLFVBQUk7O1FBQ3NDLEdBQUcsRUFDM0MsTUFBTSxhQUFOLE1BQU07UUFBTixNQUFNLENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQ2hDLENBQ1IsQ0FDQSxDQUNKLENBQUM7QUFDSixDQUFDLENBQUM7QUFFVyxRQUFBLEtBQUssR0FBRyxDQUFDLEVBQ3BCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsWUFBWSxFQUNaLFVBQVUsR0FDRSxFQUFzQixFQUFFO0lBQ3BDLE1BQU0sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxHQUFHLCtCQUFXLENBQUM7UUFDbkQsU0FBUztRQUNULFdBQVc7UUFDWCxZQUFZO0tBQ2IsQ0FBQyxDQUFDO0lBRUgsTUFBTSxjQUFjLEdBQVksTUFBTSxJQUFJLDBCQUFNLENBQUMsV0FBVyxDQUFDO0lBQzdELE1BQU0sVUFBVSxHQUNkLFlBQVksQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUN6QixHQUFHLE1BQU0sS0FBSyxDQUNmLENBQUMsQ0FBQyxDQUFDLENBQ0YsOEJBQUMsVUFBSTtRQUNGLE1BQU07UUFDUCw4QkFBQyxVQUFJLElBQUMsSUFBSTs7WUFBUSxZQUFZLENBQUMsSUFBSSxDQUFRO2NBQ3RDLENBQ1IsQ0FBQztJQUVKLElBQUksTUFBTTtRQUFFLE9BQU8sOEJBQUMsU0FBRyxRQUFFLE1BQU0sQ0FBTyxDQUFDO0lBRXZDLE9BQU8sQ0FDTCw4QkFBQyxTQUFHLFFBQ0QsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUNoQiw4QkFBQyxnQkFBUTtRQUNQLDhCQUFDLFVBQUksSUFBQyxLQUFLLEVBQUMsT0FBTztZQUNqQiw4QkFBQyxxQkFBTyxJQUFDLElBQUksRUFBQyxNQUFNLEdBQUcsQ0FDbEI7UUFDUCw4QkFBQyxTQUFHLElBQUMsV0FBVyxFQUFFLENBQUM7WUFDakIsOEJBQUMsVUFBSSxRQUFFLFVBQVUsQ0FBUSxDQUNyQixDQUNHLENBQ1osQ0FBQyxDQUFDLENBQUMsQ0FDRiw4QkFBQyxnQkFBUTtRQUNQLDhCQUFDLFNBQUc7WUFDRiw4QkFBQyxXQUFXLElBQUMsVUFBVSxFQUFFLFVBQVUsR0FBSSxDQUNuQyxDQUNHLENBQ1osQ0FDRyxDQUNQLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFRleHQsIEJveCB9IGZyb20gXCJpbmtcIjtcbmltcG9ydCBTcGlubmVyIGZyb20gXCJpbmstc3Bpbm5lclwiO1xuaW1wb3J0IHsgdXNlUnVuU3ludGgsIFN0YXR1cywgdXNlVGVycmFmb3JtU3RhdGUgfSBmcm9tIFwiLi90ZXJyYWZvcm0tY29udGV4dFwiO1xuXG5pbnRlcmZhY2UgQ29tbW9uU3ludGhDb25maWcge1xuICB0YXJnZXREaXI6IHN0cmluZztcbiAgdGFyZ2V0U3RhY2s6IHN0cmluZztcbiAganNvbk91dHB1dDogYm9vbGVhbjtcbn1cblxudHlwZSBTeW50aE91dHB1dENvbmZpZyA9IHtcbiAganNvbk91dHB1dDogYm9vbGVhbjtcbn07XG5cbmludGVyZmFjZSBTeW50aENvbmZpZyBleHRlbmRzIENvbW1vblN5bnRoQ29uZmlnIHtcbiAgc3ludGhDb21tYW5kOiBzdHJpbmc7XG59XG5cbmNvbnN0IFN5bnRoT3V0cHV0ID0gKHsganNvbk91dHB1dCB9OiBTeW50aE91dHB1dENvbmZpZyk6IFJlYWN0LlJlYWN0RWxlbWVudCA9PiB7XG4gIGNvbnN0IHsgY3VycmVudFN0YWNrLCBzdGFja3MgfSA9IHVzZVRlcnJhZm9ybVN0YXRlKCk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2pzb25PdXRwdXQgPyAoXG4gICAgICAgIDxCb3g+XG4gICAgICAgICAgPFRleHQ+e2N1cnJlbnRTdGFjay5jb250ZW50fTwvVGV4dD5cbiAgICAgICAgPC9Cb3g+XG4gICAgICApIDogKFxuICAgICAgICA8VGV4dD5cbiAgICAgICAgICBHZW5lcmF0ZWQgVGVycmFmb3JtIGNvZGUgZm9yIHRoZSBzdGFja3M6e1wiIFwifVxuICAgICAgICAgIHtzdGFja3M/Lm1hcCgocykgPT4gcy5uYW1lKS5qb2luKFwiLCBcIil9XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgU3ludGggPSAoe1xuICB0YXJnZXREaXIsXG4gIHRhcmdldFN0YWNrLFxuICBzeW50aENvbW1hbmQsXG4gIGpzb25PdXRwdXQsXG59OiBTeW50aENvbmZpZyk6IFJlYWN0LlJlYWN0RWxlbWVudCA9PiB7XG4gIGNvbnN0IHsgc3RhdHVzLCBjdXJyZW50U3RhY2ssIGVycm9ycyB9ID0gdXNlUnVuU3ludGgoe1xuICAgIHRhcmdldERpcixcbiAgICB0YXJnZXRTdGFjayxcbiAgICBzeW50aENvbW1hbmQsXG4gIH0pO1xuXG4gIGNvbnN0IGlzU3ludGhlc2l6aW5nOiBib29sZWFuID0gc3RhdHVzICE9IFN0YXR1cy5TWU5USEVTSVpFRDtcbiAgY29uc3Qgc3RhdHVzVGV4dCA9XG4gICAgY3VycmVudFN0YWNrLm5hbWUgPT09IFwiXCIgPyAoXG4gICAgICBgJHtzdGF0dXN9Li4uYFxuICAgICkgOiAoXG4gICAgICA8VGV4dD5cbiAgICAgICAge3N0YXR1c31cbiAgICAgICAgPFRleHQgYm9sZD4mbmJzcDt7Y3VycmVudFN0YWNrLm5hbWV9PC9UZXh0Pi4uLlxuICAgICAgPC9UZXh0PlxuICAgICk7XG5cbiAgaWYgKGVycm9ycykgcmV0dXJuIDxCb3g+e2Vycm9yc308L0JveD47XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuICAgICAge2lzU3ludGhlc2l6aW5nID8gKFxuICAgICAgICA8RnJhZ21lbnQ+XG4gICAgICAgICAgPFRleHQgY29sb3I9XCJncmVlblwiPlxuICAgICAgICAgICAgPFNwaW5uZXIgdHlwZT1cImRvdHNcIiAvPlxuICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICA8Qm94IHBhZGRpbmdMZWZ0PXsxfT5cbiAgICAgICAgICAgIDxUZXh0PntzdGF0dXNUZXh0fTwvVGV4dD5cbiAgICAgICAgICA8L0JveD5cbiAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICkgOiAoXG4gICAgICAgIDxGcmFnbWVudD5cbiAgICAgICAgICA8Qm94PlxuICAgICAgICAgICAgPFN5bnRoT3V0cHV0IGpzb25PdXRwdXQ9e2pzb25PdXRwdXR9IC8+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvRnJhZ21lbnQ+XG4gICAgICApfVxuICAgIDwvQm94PlxuICApO1xufTtcbiJdfQ==
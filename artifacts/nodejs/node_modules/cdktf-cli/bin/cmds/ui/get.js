"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Get = void 0;
const react_1 = __importStar(require("react"));
const fs = __importStar(require("fs-extra"));
const ink_1 = require("ink");
const ink_spinner_1 = __importDefault(require("ink-spinner"));
const provider_generator_1 = require("@cdktf/provider-generator");
const checkpoint_1 = require("../../../lib/checkpoint");
var Status;
(function (Status) {
    Status["STARTING"] = "starting";
    Status["DOWNLOADING"] = "downloading and generating modules and providers";
    Status["DONE"] = "done";
})(Status || (Status = {}));
exports.Get = ({ codeMakerOutput, language, constraints, }) => {
    const [currentStatus, setCurrentStatus] = react_1.default.useState(Status.STARTING);
    const { exit } = ink_1.useApp();
    const constructsOptions = {
        codeMakerOutput: codeMakerOutput,
        targetLanguage: language,
    };
    react_1.default.useEffect(() => {
        const get = async () => {
            try {
                await fs.remove(constructsOptions.codeMakerOutput);
                const constructsMaker = new provider_generator_1.ConstructsMaker(constructsOptions, constraints, (payload) => checkpoint_1.sendTelemetry("get", {
                    language: payload.targetLanguage,
                    ...payload.trackingPayload,
                }));
                setCurrentStatus(Status.DOWNLOADING);
                await constructsMaker.generate();
                setCurrentStatus(Status.DONE);
                if (!(await fs.pathExists(codeMakerOutput))) {
                    console.error(`ERROR: synthesis failed, app expected to create "${codeMakerOutput}"`);
                    process.exit(1);
                }
            }
            catch (e) {
                console.error(e);
                exit(e);
            }
        };
        get();
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []); // only once, we don't expect props to change
    const isGenerating = currentStatus != Status.DONE;
    const statusText = `${currentStatus}...`;
    const jsonTerraformOutput = (react_1.default.createElement(ink_1.Text, null,
        "Generated ",
        react_1.default.createElement(ink_1.Text, { color: "green" }, language),
        " constructs in the output directory: ",
        react_1.default.createElement(ink_1.Text, { bold: true }, codeMakerOutput),
        language === provider_generator_1.Language.GO && (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(ink_1.Newline, null),
            react_1.default.createElement(ink_1.Newline, null),
            react_1.default.createElement(ink_1.Text, null,
                "The generated code depends on",
                " ",
                react_1.default.createElement(ink_1.Text, { color: "cyan" }, "jsii-runtime-go"),
                ". If you haven't yet installed it, you can run",
                " ",
                react_1.default.createElement(ink_1.Text, { color: "blueBright" }, "go mod tidy"),
                " to automatically install it.")))));
    return (react_1.default.createElement(ink_1.Box, null, isGenerating ? (react_1.default.createElement(react_1.Fragment, null,
        react_1.default.createElement(ink_1.Text, { color: "green" },
            react_1.default.createElement(ink_spinner_1.default, { type: "dots" })),
        react_1.default.createElement(ink_1.Box, { paddingLeft: 1 },
            react_1.default.createElement(ink_1.Text, null, statusText)))) : (react_1.default.createElement(react_1.Fragment, null,
        react_1.default.createElement(ink_1.Box, null, jsonTerraformOutput)))));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ2V0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0NBQXdDO0FBQ3hDLDZDQUErQjtBQUMvQiw2QkFBaUQ7QUFDakQsOERBQWtDO0FBQ2xDLGtFQUttQztBQUNuQyx3REFBd0Q7QUFFeEQsSUFBSyxNQUlKO0FBSkQsV0FBSyxNQUFNO0lBQ1QsK0JBQXFCLENBQUE7SUFDckIsMEVBQWdFLENBQUE7SUFDaEUsdUJBQWEsQ0FBQTtBQUNmLENBQUMsRUFKSSxNQUFNLEtBQU4sTUFBTSxRQUlWO0FBUVksUUFBQSxHQUFHLEdBQUcsQ0FBQyxFQUNsQixlQUFlLEVBQ2YsUUFBUSxFQUNSLFdBQVcsR0FDRCxFQUFzQixFQUFFO0lBQ2xDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsR0FBRyxlQUFLLENBQUMsUUFBUSxDQUN0RCxNQUFNLENBQUMsUUFBUSxDQUNoQixDQUFDO0lBQ0YsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLFlBQU0sRUFBRSxDQUFDO0lBRTFCLE1BQU0saUJBQWlCLEdBQWU7UUFDcEMsZUFBZSxFQUFFLGVBQWU7UUFDaEMsY0FBYyxFQUFFLFFBQVE7S0FDekIsQ0FBQztJQUVGLGVBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1FBQ25CLE1BQU0sR0FBRyxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ3JCLElBQUk7Z0JBQ0YsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxDQUFDO2dCQUNuRCxNQUFNLGVBQWUsR0FBRyxJQUFJLG9DQUFlLENBQ3pDLGlCQUFpQixFQUNqQixXQUFXLEVBQ1gsQ0FBQyxPQUdBLEVBQUUsRUFBRSxDQUNILDBCQUFhLENBQUMsS0FBSyxFQUFFO29CQUNuQixRQUFRLEVBQUUsT0FBTyxDQUFDLGNBQWM7b0JBQ2hDLEdBQUcsT0FBTyxDQUFDLGVBQWU7aUJBQzNCLENBQUMsQ0FDTCxDQUFDO2dCQUNGLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDckMsTUFBTSxlQUFlLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ2pDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQUU7b0JBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQ1gsb0RBQW9ELGVBQWUsR0FBRyxDQUN2RSxDQUFDO29CQUNGLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ2pCO2FBQ0Y7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDVDtRQUNILENBQUMsQ0FBQztRQUNGLEdBQUcsRUFBRSxDQUFDO1FBQ04sdURBQXVEO0lBQ3pELENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLDZDQUE2QztJQUVyRCxNQUFNLFlBQVksR0FBWSxhQUFhLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQztJQUMzRCxNQUFNLFVBQVUsR0FBRyxHQUFHLGFBQWEsS0FBSyxDQUFDO0lBQ3pDLE1BQU0sbUJBQW1CLEdBQUcsQ0FDMUIsOEJBQUMsVUFBSTs7UUFDTyw4QkFBQyxVQUFJLElBQUMsS0FBSyxFQUFDLE9BQU8sSUFBRSxRQUFRLENBQVE7O1FBQ3BDLDhCQUFDLFVBQUksSUFBQyxJQUFJLFVBQUUsZUFBZSxDQUFRO1FBQzdDLFFBQVEsS0FBSyw2QkFBUSxDQUFDLEVBQUUsSUFBSSxDQUMzQjtZQUNFLDhCQUFDLGFBQU8sT0FBRztZQUNYLDhCQUFDLGFBQU8sT0FBRztZQUNYLDhCQUFDLFVBQUk7O2dCQUMyQixHQUFHO2dCQUNqQyw4QkFBQyxVQUFJLElBQUMsS0FBSyxFQUFDLE1BQU0sc0JBQXVCOztnQkFDZixHQUFHO2dCQUM3Qiw4QkFBQyxVQUFJLElBQUMsS0FBSyxFQUFDLFlBQVksa0JBQW1CO2dEQUV0QyxDQUNOLENBQ0osQ0FDSSxDQUNSLENBQUM7SUFFRixPQUFPLENBQ0wsOEJBQUMsU0FBRyxRQUNELFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FDZCw4QkFBQyxnQkFBUTtRQUNQLDhCQUFDLFVBQUksSUFBQyxLQUFLLEVBQUMsT0FBTztZQUNqQiw4QkFBQyxxQkFBTyxJQUFDLElBQUksRUFBQyxNQUFNLEdBQUcsQ0FDbEI7UUFDUCw4QkFBQyxTQUFHLElBQUMsV0FBVyxFQUFFLENBQUM7WUFDakIsOEJBQUMsVUFBSSxRQUFFLFVBQVUsQ0FBUSxDQUNyQixDQUNHLENBQ1osQ0FBQyxDQUFDLENBQUMsQ0FDRiw4QkFBQyxnQkFBUTtRQUNQLDhCQUFDLFNBQUcsUUFBRSxtQkFBbUIsQ0FBTyxDQUN2QixDQUNaLENBQ0csQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IFRleHQsIEJveCwgdXNlQXBwLCBOZXdsaW5lIH0gZnJvbSBcImlua1wiO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSBcImluay1zcGlubmVyXCI7XG5pbXBvcnQge1xuICBMYW5ndWFnZSxcbiAgQ29uc3RydWN0c01ha2VyLFxuICBHZXRPcHRpb25zLFxuICBjb25maWcsXG59IGZyb20gXCJAY2RrdGYvcHJvdmlkZXItZ2VuZXJhdG9yXCI7XG5pbXBvcnQgeyBzZW5kVGVsZW1ldHJ5IH0gZnJvbSBcIi4uLy4uLy4uL2xpYi9jaGVja3BvaW50XCI7XG5cbmVudW0gU3RhdHVzIHtcbiAgU1RBUlRJTkcgPSBcInN0YXJ0aW5nXCIsXG4gIERPV05MT0FESU5HID0gXCJkb3dubG9hZGluZyBhbmQgZ2VuZXJhdGluZyBtb2R1bGVzIGFuZCBwcm92aWRlcnNcIixcbiAgRE9ORSA9IFwiZG9uZVwiLFxufVxuXG5pbnRlcmZhY2UgR2V0Q29uZmlnIHtcbiAgY29kZU1ha2VyT3V0cHV0OiBzdHJpbmc7XG4gIGxhbmd1YWdlOiBMYW5ndWFnZTtcbiAgY29uc3RyYWludHM6IGNvbmZpZy5UZXJyYWZvcm1EZXBlbmRlbmN5Q29uc3RyYWludFtdO1xufVxuXG5leHBvcnQgY29uc3QgR2V0ID0gKHtcbiAgY29kZU1ha2VyT3V0cHV0LFxuICBsYW5ndWFnZSxcbiAgY29uc3RyYWludHMsXG59OiBHZXRDb25maWcpOiBSZWFjdC5SZWFjdEVsZW1lbnQgPT4ge1xuICBjb25zdCBbY3VycmVudFN0YXR1cywgc2V0Q3VycmVudFN0YXR1c10gPSBSZWFjdC51c2VTdGF0ZTxTdGF0dXM+KFxuICAgIFN0YXR1cy5TVEFSVElOR1xuICApO1xuICBjb25zdCB7IGV4aXQgfSA9IHVzZUFwcCgpO1xuXG4gIGNvbnN0IGNvbnN0cnVjdHNPcHRpb25zOiBHZXRPcHRpb25zID0ge1xuICAgIGNvZGVNYWtlck91dHB1dDogY29kZU1ha2VyT3V0cHV0LFxuICAgIHRhcmdldExhbmd1YWdlOiBsYW5ndWFnZSxcbiAgfTtcblxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGdldCA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGZzLnJlbW92ZShjb25zdHJ1Y3RzT3B0aW9ucy5jb2RlTWFrZXJPdXRwdXQpO1xuICAgICAgICBjb25zdCBjb25zdHJ1Y3RzTWFrZXIgPSBuZXcgQ29uc3RydWN0c01ha2VyKFxuICAgICAgICAgIGNvbnN0cnVjdHNPcHRpb25zLFxuICAgICAgICAgIGNvbnN0cmFpbnRzLFxuICAgICAgICAgIChwYXlsb2FkOiB7XG4gICAgICAgICAgICB0YXJnZXRMYW5ndWFnZTogc3RyaW5nO1xuICAgICAgICAgICAgdHJhY2tpbmdQYXlsb2FkOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICAgICAgICAgIH0pID0+XG4gICAgICAgICAgICBzZW5kVGVsZW1ldHJ5KFwiZ2V0XCIsIHtcbiAgICAgICAgICAgICAgbGFuZ3VhZ2U6IHBheWxvYWQudGFyZ2V0TGFuZ3VhZ2UsXG4gICAgICAgICAgICAgIC4uLnBheWxvYWQudHJhY2tpbmdQYXlsb2FkLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgICAgc2V0Q3VycmVudFN0YXR1cyhTdGF0dXMuRE9XTkxPQURJTkcpO1xuICAgICAgICBhd2FpdCBjb25zdHJ1Y3RzTWFrZXIuZ2VuZXJhdGUoKTtcbiAgICAgICAgc2V0Q3VycmVudFN0YXR1cyhTdGF0dXMuRE9ORSk7XG4gICAgICAgIGlmICghKGF3YWl0IGZzLnBhdGhFeGlzdHMoY29kZU1ha2VyT3V0cHV0KSkpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICAgYEVSUk9SOiBzeW50aGVzaXMgZmFpbGVkLCBhcHAgZXhwZWN0ZWQgdG8gY3JlYXRlIFwiJHtjb2RlTWFrZXJPdXRwdXR9XCJgXG4gICAgICAgICAgKTtcbiAgICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgZXhpdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGdldCgpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgfSwgW10pOyAvLyBvbmx5IG9uY2UsIHdlIGRvbid0IGV4cGVjdCBwcm9wcyB0byBjaGFuZ2VcblxuICBjb25zdCBpc0dlbmVyYXRpbmc6IGJvb2xlYW4gPSBjdXJyZW50U3RhdHVzICE9IFN0YXR1cy5ET05FO1xuICBjb25zdCBzdGF0dXNUZXh0ID0gYCR7Y3VycmVudFN0YXR1c30uLi5gO1xuICBjb25zdCBqc29uVGVycmFmb3JtT3V0cHV0ID0gKFxuICAgIDxUZXh0PlxuICAgICAgR2VuZXJhdGVkIDxUZXh0IGNvbG9yPVwiZ3JlZW5cIj57bGFuZ3VhZ2V9PC9UZXh0PiBjb25zdHJ1Y3RzIGluIHRoZSBvdXRwdXRcbiAgICAgIGRpcmVjdG9yeTogPFRleHQgYm9sZD57Y29kZU1ha2VyT3V0cHV0fTwvVGV4dD5cbiAgICAgIHtsYW5ndWFnZSA9PT0gTGFuZ3VhZ2UuR08gJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxOZXdsaW5lIC8+XG4gICAgICAgICAgPE5ld2xpbmUgLz5cbiAgICAgICAgICA8VGV4dD5cbiAgICAgICAgICAgIFRoZSBnZW5lcmF0ZWQgY29kZSBkZXBlbmRzIG9ue1wiIFwifVxuICAgICAgICAgICAgPFRleHQgY29sb3I9XCJjeWFuXCI+anNpaS1ydW50aW1lLWdvPC9UZXh0Pi4gSWYgeW91IGhhdmVuJmFwb3M7dCB5ZXRcbiAgICAgICAgICAgIGluc3RhbGxlZCBpdCwgeW91IGNhbiBydW57XCIgXCJ9XG4gICAgICAgICAgICA8VGV4dCBjb2xvcj1cImJsdWVCcmlnaHRcIj5nbyBtb2QgdGlkeTwvVGV4dD4gdG8gYXV0b21hdGljYWxseSBpbnN0YWxsXG4gICAgICAgICAgICBpdC5cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L1RleHQ+XG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuICAgICAge2lzR2VuZXJhdGluZyA/IChcbiAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgIDxUZXh0IGNvbG9yPVwiZ3JlZW5cIj5cbiAgICAgICAgICAgIDxTcGlubmVyIHR5cGU9XCJkb3RzXCIgLz5cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgPEJveCBwYWRkaW5nTGVmdD17MX0+XG4gICAgICAgICAgICA8VGV4dD57c3RhdHVzVGV4dH08L1RleHQ+XG4gICAgICAgICAgPC9Cb3g+XG4gICAgICAgIDwvRnJhZ21lbnQ+XG4gICAgICApIDogKFxuICAgICAgICA8RnJhZ21lbnQ+XG4gICAgICAgICAgPEJveD57anNvblRlcnJhZm9ybU91dHB1dH08L0JveD5cbiAgICAgICAgPC9GcmFnbWVudD5cbiAgICAgICl9XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuIl19
import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS VPC.
 *
 * @stability stable
 */
export interface FlowLogConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#eni_id FlowLog#eni_id}.
     *
     * @stability stable
     */
    readonly eniId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#iam_role_arn FlowLog#iam_role_arn}.
     *
     * @stability stable
     */
    readonly iamRoleArn?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#log_destination FlowLog#log_destination}.
     *
     * @stability stable
     */
    readonly logDestination?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#log_destination_type FlowLog#log_destination_type}.
     *
     * @stability stable
     */
    readonly logDestinationType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#log_format FlowLog#log_format}.
     *
     * @stability stable
     */
    readonly logFormat?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#log_group_name FlowLog#log_group_name}.
     *
     * @stability stable
     */
    readonly logGroupName?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#max_aggregation_interval FlowLog#max_aggregation_interval}.
     *
     * @stability stable
     */
    readonly maxAggregationInterval?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#subnet_id FlowLog#subnet_id}.
     *
     * @stability stable
     */
    readonly subnetId?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#tags FlowLog#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#tags_all FlowLog#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#traffic_type FlowLog#traffic_type}.
     *
     * @stability stable
     */
    readonly trafficType: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#vpc_id FlowLog#vpc_id}.
     *
     * @stability stable
     */
    readonly vpcId?: string;
    /**
     * destination_options block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#destination_options FlowLog#destination_options}
     *
     * @stability stable
     */
    readonly destinationOptions?: FlowLogDestinationOptions;
}
/**
 * @stability stable
 */
export interface FlowLogDestinationOptions {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#file_format FlowLog#file_format}.
     *
     * @stability stable
     */
    readonly fileFormat?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#hive_compatible_partitions FlowLog#hive_compatible_partitions}.
     *
     * @stability stable
     */
    readonly hiveCompatiblePartitions?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html#per_hour_partition FlowLog#per_hour_partition}.
     *
     * @stability stable
     */
    readonly perHourPartition?: boolean | cdktf.IResolvable;
}
export declare function flowLogDestinationOptionsToTerraform(struct?: FlowLogDestinationOptionsOutputReference | FlowLogDestinationOptions): any;
/**
 * @stability stable
 */
export declare class FlowLogDestinationOptionsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): FlowLogDestinationOptions | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: FlowLogDestinationOptions | undefined);
    private _fileFormat?;
    /**
     * @stability stable
     */
    get fileFormat(): string;
    /**
     * @stability stable
     */
    set fileFormat(value: string);
    /**
     * @stability stable
     */
    resetFileFormat(): void;
    /**
     * @stability stable
     */
    get fileFormatInput(): string | undefined;
    private _hiveCompatiblePartitions?;
    /**
     * @stability stable
     */
    get hiveCompatiblePartitions(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set hiveCompatiblePartitions(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetHiveCompatiblePartitions(): void;
    /**
     * @stability stable
     */
    get hiveCompatiblePartitionsInput(): boolean | cdktf.IResolvable | undefined;
    private _perHourPartition?;
    /**
     * @stability stable
     */
    get perHourPartition(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set perHourPartition(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetPerHourPartition(): void;
    /**
     * @stability stable
     */
    get perHourPartitionInput(): boolean | cdktf.IResolvable | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html aws_flow_log}.
 *
 * @stability stable
 */
export declare class FlowLog extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/flow_log.html aws_flow_log} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: FlowLogConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _eniId?;
    /**
     * @stability stable
     */
    get eniId(): string;
    /**
     * @stability stable
     */
    set eniId(value: string);
    /**
     * @stability stable
     */
    resetEniId(): void;
    /**
     * @stability stable
     */
    get eniIdInput(): string | undefined;
    private _iamRoleArn?;
    /**
     * @stability stable
     */
    get iamRoleArn(): string;
    /**
     * @stability stable
     */
    set iamRoleArn(value: string);
    /**
     * @stability stable
     */
    resetIamRoleArn(): void;
    /**
     * @stability stable
     */
    get iamRoleArnInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _logDestination?;
    /**
     * @stability stable
     */
    get logDestination(): string;
    /**
     * @stability stable
     */
    set logDestination(value: string);
    /**
     * @stability stable
     */
    resetLogDestination(): void;
    /**
     * @stability stable
     */
    get logDestinationInput(): string | undefined;
    private _logDestinationType?;
    /**
     * @stability stable
     */
    get logDestinationType(): string;
    /**
     * @stability stable
     */
    set logDestinationType(value: string);
    /**
     * @stability stable
     */
    resetLogDestinationType(): void;
    /**
     * @stability stable
     */
    get logDestinationTypeInput(): string | undefined;
    private _logFormat?;
    /**
     * @stability stable
     */
    get logFormat(): string;
    /**
     * @stability stable
     */
    set logFormat(value: string);
    /**
     * @stability stable
     */
    resetLogFormat(): void;
    /**
     * @stability stable
     */
    get logFormatInput(): string | undefined;
    private _logGroupName?;
    /**
     * @stability stable
     */
    get logGroupName(): string;
    /**
     * @stability stable
     */
    set logGroupName(value: string);
    /**
     * @stability stable
     */
    resetLogGroupName(): void;
    /**
     * @stability stable
     */
    get logGroupNameInput(): string | undefined;
    private _maxAggregationInterval?;
    /**
     * @stability stable
     */
    get maxAggregationInterval(): number;
    /**
     * @stability stable
     */
    set maxAggregationInterval(value: number);
    /**
     * @stability stable
     */
    resetMaxAggregationInterval(): void;
    /**
     * @stability stable
     */
    get maxAggregationIntervalInput(): number | undefined;
    private _subnetId?;
    /**
     * @stability stable
     */
    get subnetId(): string;
    /**
     * @stability stable
     */
    set subnetId(value: string);
    /**
     * @stability stable
     */
    resetSubnetId(): void;
    /**
     * @stability stable
     */
    get subnetIdInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _trafficType?;
    /**
     * @stability stable
     */
    get trafficType(): string;
    /**
     * @stability stable
     */
    set trafficType(value: string);
    /**
     * @stability stable
     */
    get trafficTypeInput(): string | undefined;
    private _vpcId?;
    /**
     * @stability stable
     */
    get vpcId(): string;
    /**
     * @stability stable
     */
    set vpcId(value: string);
    /**
     * @stability stable
     */
    resetVpcId(): void;
    /**
     * @stability stable
     */
    get vpcIdInput(): string | undefined;
    private _destinationOptions;
    /**
     * @stability stable
     */
    get destinationOptions(): FlowLogDestinationOptionsOutputReference;
    /**
     * @stability stable
     */
    putDestinationOptions(value: FlowLogDestinationOptions): void;
    /**
     * @stability stable
     */
    resetDestinationOptions(): void;
    /**
     * @stability stable
     */
    get destinationOptionsInput(): FlowLogDestinationOptions | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

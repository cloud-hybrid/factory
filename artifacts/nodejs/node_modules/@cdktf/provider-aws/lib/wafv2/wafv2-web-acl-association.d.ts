import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS WAF V2.
 *
 * @stability stable
 */
export interface Wafv2WebAclAssociationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/wafv2_web_acl_association.html#resource_arn Wafv2WebAclAssociation#resource_arn}.
     *
     * @stability stable
     */
    readonly resourceArn: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/wafv2_web_acl_association.html#web_acl_arn Wafv2WebAclAssociation#web_acl_arn}.
     *
     * @stability stable
     */
    readonly webAclArn: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/wafv2_web_acl_association.html aws_wafv2_web_acl_association}.
 *
 * @stability stable
 */
export declare class Wafv2WebAclAssociation extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/wafv2_web_acl_association.html aws_wafv2_web_acl_association} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: Wafv2WebAclAssociationConfig);
    /**
     * @stability stable
     */
    get id(): string;
    private _resourceArn?;
    /**
     * @stability stable
     */
    get resourceArn(): string;
    /**
     * @stability stable
     */
    set resourceArn(value: string);
    /**
     * @stability stable
     */
    get resourceArnInput(): string | undefined;
    private _webAclArn?;
    /**
     * @stability stable
     */
    get webAclArn(): string;
    /**
     * @stability stable
     */
    set webAclArn(value: string);
    /**
     * @stability stable
     */
    get webAclArnInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

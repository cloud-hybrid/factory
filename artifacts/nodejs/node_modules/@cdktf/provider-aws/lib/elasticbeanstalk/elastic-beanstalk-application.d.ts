import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Elastic Beanstalk.
 *
 * @stability stable
 */
export interface ElasticBeanstalkApplicationConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#description ElasticBeanstalkApplication#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#name ElasticBeanstalkApplication#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#tags ElasticBeanstalkApplication#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#tags_all ElasticBeanstalkApplication#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * appversion_lifecycle block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#appversion_lifecycle ElasticBeanstalkApplication#appversion_lifecycle}
     *
     * @stability stable
     */
    readonly appversionLifecycle?: ElasticBeanstalkApplicationAppversionLifecycle;
}
/**
 * @stability stable
 */
export interface ElasticBeanstalkApplicationAppversionLifecycle {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#delete_source_from_s3 ElasticBeanstalkApplication#delete_source_from_s3}.
     *
     * @stability stable
     */
    readonly deleteSourceFromS3?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#max_age_in_days ElasticBeanstalkApplication#max_age_in_days}.
     *
     * @stability stable
     */
    readonly maxAgeInDays?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#max_count ElasticBeanstalkApplication#max_count}.
     *
     * @stability stable
     */
    readonly maxCount?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html#service_role ElasticBeanstalkApplication#service_role}.
     *
     * @stability stable
     */
    readonly serviceRole: string;
}
export declare function elasticBeanstalkApplicationAppversionLifecycleToTerraform(struct?: ElasticBeanstalkApplicationAppversionLifecycleOutputReference | ElasticBeanstalkApplicationAppversionLifecycle): any;
/**
 * @stability stable
 */
export declare class ElasticBeanstalkApplicationAppversionLifecycleOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): ElasticBeanstalkApplicationAppversionLifecycle | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: ElasticBeanstalkApplicationAppversionLifecycle | undefined);
    private _deleteSourceFromS3?;
    /**
     * @stability stable
     */
    get deleteSourceFromS3(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set deleteSourceFromS3(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetDeleteSourceFromS3(): void;
    /**
     * @stability stable
     */
    get deleteSourceFromS3Input(): boolean | cdktf.IResolvable | undefined;
    private _maxAgeInDays?;
    /**
     * @stability stable
     */
    get maxAgeInDays(): number;
    /**
     * @stability stable
     */
    set maxAgeInDays(value: number);
    /**
     * @stability stable
     */
    resetMaxAgeInDays(): void;
    /**
     * @stability stable
     */
    get maxAgeInDaysInput(): number | undefined;
    private _maxCount?;
    /**
     * @stability stable
     */
    get maxCount(): number;
    /**
     * @stability stable
     */
    set maxCount(value: number);
    /**
     * @stability stable
     */
    resetMaxCount(): void;
    /**
     * @stability stable
     */
    get maxCountInput(): number | undefined;
    private _serviceRole?;
    /**
     * @stability stable
     */
    get serviceRole(): string;
    /**
     * @stability stable
     */
    set serviceRole(value: string);
    /**
     * @stability stable
     */
    get serviceRoleInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html aws_elastic_beanstalk_application}.
 *
 * @stability stable
 */
export declare class ElasticBeanstalkApplication extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/elastic_beanstalk_application.html aws_elastic_beanstalk_application} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: ElasticBeanstalkApplicationConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _appversionLifecycle;
    /**
     * @stability stable
     */
    get appversionLifecycle(): ElasticBeanstalkApplicationAppversionLifecycleOutputReference;
    /**
     * @stability stable
     */
    putAppversionLifecycle(value: ElasticBeanstalkApplicationAppversionLifecycle): void;
    /**
     * @stability stable
     */
    resetAppversionLifecycle(): void;
    /**
     * @stability stable
     */
    get appversionLifecycleInput(): ElasticBeanstalkApplicationAppversionLifecycle | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

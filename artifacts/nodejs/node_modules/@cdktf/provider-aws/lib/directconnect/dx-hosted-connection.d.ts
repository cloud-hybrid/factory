import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Direct Connect.
 *
 * @stability stable
 */
export interface DxHostedConnectionConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html#bandwidth DxHostedConnection#bandwidth}.
     *
     * @stability stable
     */
    readonly bandwidth: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html#connection_id DxHostedConnection#connection_id}.
     *
     * @stability stable
     */
    readonly connectionId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html#name DxHostedConnection#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html#owner_account_id DxHostedConnection#owner_account_id}.
     *
     * @stability stable
     */
    readonly ownerAccountId: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html#vlan DxHostedConnection#vlan}.
     *
     * @stability stable
     */
    readonly vlan: number;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html aws_dx_hosted_connection}.
 *
 * @stability stable
 */
export declare class DxHostedConnection extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/dx_hosted_connection.html aws_dx_hosted_connection} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: DxHostedConnectionConfig);
    /**
     * @stability stable
     */
    get awsDevice(): string;
    private _bandwidth?;
    /**
     * @stability stable
     */
    get bandwidth(): string;
    /**
     * @stability stable
     */
    set bandwidth(value: string);
    /**
     * @stability stable
     */
    get bandwidthInput(): string | undefined;
    private _connectionId?;
    /**
     * @stability stable
     */
    get connectionId(): string;
    /**
     * @stability stable
     */
    set connectionId(value: string);
    /**
     * @stability stable
     */
    get connectionIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get hasLogicalRedundancy(): string;
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get jumboFrameCapable(): any;
    /**
     * @stability stable
     */
    get lagId(): string;
    /**
     * @stability stable
     */
    get loaIssueTime(): string;
    /**
     * @stability stable
     */
    get location(): string;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _ownerAccountId?;
    /**
     * @stability stable
     */
    get ownerAccountId(): string;
    /**
     * @stability stable
     */
    set ownerAccountId(value: string);
    /**
     * @stability stable
     */
    get ownerAccountIdInput(): string | undefined;
    /**
     * @stability stable
     */
    get partnerName(): string;
    /**
     * @stability stable
     */
    get providerName(): string;
    /**
     * @stability stable
     */
    get region(): string;
    /**
     * @stability stable
     */
    get state(): string;
    private _vlan?;
    /**
     * @stability stable
     */
    get vlan(): number;
    /**
     * @stability stable
     */
    set vlan(value: number);
    /**
     * @stability stable
     */
    get vlanInput(): number | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

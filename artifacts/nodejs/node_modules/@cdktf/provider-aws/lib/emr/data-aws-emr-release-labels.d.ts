import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Elastic MapReduce.
 *
 * @stability stable
 */
export interface DataAwsEmrReleaseLabelsConfig extends cdktf.TerraformMetaArguments {
    /**
     * filters block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/emr_release_labels.html#filters DataAwsEmrReleaseLabels#filters}
     *
     * @stability stable
     */
    readonly filters?: DataAwsEmrReleaseLabelsFilters;
}
/**
 * @stability stable
 */
export interface DataAwsEmrReleaseLabelsFilters {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/emr_release_labels.html#application DataAwsEmrReleaseLabels#application}.
     *
     * @stability stable
     */
    readonly application?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/emr_release_labels.html#prefix DataAwsEmrReleaseLabels#prefix}.
     *
     * @stability stable
     */
    readonly prefix?: string;
}
export declare function dataAwsEmrReleaseLabelsFiltersToTerraform(struct?: DataAwsEmrReleaseLabelsFiltersOutputReference | DataAwsEmrReleaseLabelsFilters): any;
/**
 * @stability stable
 */
export declare class DataAwsEmrReleaseLabelsFiltersOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): DataAwsEmrReleaseLabelsFilters | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: DataAwsEmrReleaseLabelsFilters | undefined);
    private _application?;
    /**
     * @stability stable
     */
    get application(): string;
    /**
     * @stability stable
     */
    set application(value: string);
    /**
     * @stability stable
     */
    resetApplication(): void;
    /**
     * @stability stable
     */
    get applicationInput(): string | undefined;
    private _prefix?;
    /**
     * @stability stable
     */
    get prefix(): string;
    /**
     * @stability stable
     */
    set prefix(value: string);
    /**
     * @stability stable
     */
    resetPrefix(): void;
    /**
     * @stability stable
     */
    get prefixInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/d/emr_release_labels.html aws_emr_release_labels}.
 *
 * @stability stable
 */
export declare class DataAwsEmrReleaseLabels extends cdktf.TerraformDataSource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/d/emr_release_labels.html aws_emr_release_labels} Data Source.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: DataAwsEmrReleaseLabelsConfig);
    /**
     * @stability stable
     */
    get id(): string;
    /**
     * @stability stable
     */
    get releaseLabels(): string[];
    private _filters;
    /**
     * @stability stable
     */
    get filters(): DataAwsEmrReleaseLabelsFiltersOutputReference;
    /**
     * @stability stable
     */
    putFilters(value: DataAwsEmrReleaseLabelsFilters): void;
    /**
     * @stability stable
     */
    resetFilters(): void;
    /**
     * @stability stable
     */
    get filtersInput(): DataAwsEmrReleaseLabelsFilters | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS EC2.
 *
 * @stability stable
 */
export interface Ec2HostConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#auto_placement Ec2Host#auto_placement}.
     *
     * @stability stable
     */
    readonly autoPlacement?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#availability_zone Ec2Host#availability_zone}.
     *
     * @stability stable
     */
    readonly availabilityZone: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#host_recovery Ec2Host#host_recovery}.
     *
     * @stability stable
     */
    readonly hostRecovery?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#instance_family Ec2Host#instance_family}.
     *
     * @stability stable
     */
    readonly instanceFamily?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#instance_type Ec2Host#instance_type}.
     *
     * @stability stable
     */
    readonly instanceType?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#tags Ec2Host#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html#tags_all Ec2Host#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html aws_ec2_host}.
 *
 * @stability stable
 */
export declare class Ec2Host extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ec2_host.html aws_ec2_host} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: Ec2HostConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _autoPlacement?;
    /**
     * @stability stable
     */
    get autoPlacement(): string;
    /**
     * @stability stable
     */
    set autoPlacement(value: string);
    /**
     * @stability stable
     */
    resetAutoPlacement(): void;
    /**
     * @stability stable
     */
    get autoPlacementInput(): string | undefined;
    private _availabilityZone?;
    /**
     * @stability stable
     */
    get availabilityZone(): string;
    /**
     * @stability stable
     */
    set availabilityZone(value: string);
    /**
     * @stability stable
     */
    get availabilityZoneInput(): string | undefined;
    private _hostRecovery?;
    /**
     * @stability stable
     */
    get hostRecovery(): string;
    /**
     * @stability stable
     */
    set hostRecovery(value: string);
    /**
     * @stability stable
     */
    resetHostRecovery(): void;
    /**
     * @stability stable
     */
    get hostRecoveryInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _instanceFamily?;
    /**
     * @stability stable
     */
    get instanceFamily(): string;
    /**
     * @stability stable
     */
    set instanceFamily(value: string);
    /**
     * @stability stable
     */
    resetInstanceFamily(): void;
    /**
     * @stability stable
     */
    get instanceFamilyInput(): string | undefined;
    private _instanceType?;
    /**
     * @stability stable
     */
    get instanceType(): string;
    /**
     * @stability stable
     */
    set instanceType(value: string);
    /**
     * @stability stable
     */
    resetInstanceType(): void;
    /**
     * @stability stable
     */
    get instanceTypeInput(): string | undefined;
    /**
     * @stability stable
     */
    get ownerId(): string;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Key Management Service.
 *
 * @stability stable
 */
export interface KmsExternalKeyConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#bypass_policy_lockout_safety_check KmsExternalKey#bypass_policy_lockout_safety_check}.
     *
     * @stability stable
     */
    readonly bypassPolicyLockoutSafetyCheck?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#deletion_window_in_days KmsExternalKey#deletion_window_in_days}.
     *
     * @stability stable
     */
    readonly deletionWindowInDays?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#description KmsExternalKey#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#enabled KmsExternalKey#enabled}.
     *
     * @stability stable
     */
    readonly enabled?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#key_material_base64 KmsExternalKey#key_material_base64}.
     *
     * @stability stable
     */
    readonly keyMaterialBase64?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#multi_region KmsExternalKey#multi_region}.
     *
     * @stability stable
     */
    readonly multiRegion?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#policy KmsExternalKey#policy}.
     *
     * @stability stable
     */
    readonly policy?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#tags KmsExternalKey#tags}.
     *
     * @stability stable
     */
    readonly tags?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#tags_all KmsExternalKey#tags_all}.
     *
     * @stability stable
     */
    readonly tagsAll?: {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html#valid_to KmsExternalKey#valid_to}.
     *
     * @stability stable
     */
    readonly validTo?: string;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html aws_kms_external_key}.
 *
 * @stability stable
 */
export declare class KmsExternalKey extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/kms_external_key.html aws_kms_external_key} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config?: KmsExternalKeyConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    private _bypassPolicyLockoutSafetyCheck?;
    /**
     * @stability stable
     */
    get bypassPolicyLockoutSafetyCheck(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set bypassPolicyLockoutSafetyCheck(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetBypassPolicyLockoutSafetyCheck(): void;
    /**
     * @stability stable
     */
    get bypassPolicyLockoutSafetyCheckInput(): boolean | cdktf.IResolvable | undefined;
    private _deletionWindowInDays?;
    /**
     * @stability stable
     */
    get deletionWindowInDays(): number;
    /**
     * @stability stable
     */
    set deletionWindowInDays(value: number);
    /**
     * @stability stable
     */
    resetDeletionWindowInDays(): void;
    /**
     * @stability stable
     */
    get deletionWindowInDaysInput(): number | undefined;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _enabled?;
    /**
     * @stability stable
     */
    get enabled(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enabled(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnabled(): void;
    /**
     * @stability stable
     */
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get expirationModel(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _keyMaterialBase64?;
    /**
     * @stability stable
     */
    get keyMaterialBase64(): string;
    /**
     * @stability stable
     */
    set keyMaterialBase64(value: string);
    /**
     * @stability stable
     */
    resetKeyMaterialBase64(): void;
    /**
     * @stability stable
     */
    get keyMaterialBase64Input(): string | undefined;
    /**
     * @stability stable
     */
    get keyState(): string;
    /**
     * @stability stable
     */
    get keyUsage(): string;
    private _multiRegion?;
    /**
     * @stability stable
     */
    get multiRegion(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set multiRegion(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetMultiRegion(): void;
    /**
     * @stability stable
     */
    get multiRegionInput(): boolean | cdktf.IResolvable | undefined;
    private _policy?;
    /**
     * @stability stable
     */
    get policy(): string;
    /**
     * @stability stable
     */
    set policy(value: string);
    /**
     * @stability stable
     */
    resetPolicy(): void;
    /**
     * @stability stable
     */
    get policyInput(): string | undefined;
    private _tags?;
    /**
     * @stability stable
     */
    get tags(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tags(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTags(): void;
    /**
     * @stability stable
     */
    get tagsInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    /**
     * @stability stable
     */
    get tagsAll(): {
        [key: string]: string;
    } | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set tagsAll(value: {
        [key: string]: string;
    } | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetTagsAll(): void;
    /**
     * @stability stable
     */
    get tagsAllInput(): cdktf.IResolvable | {
        [key: string]: string;
    } | undefined;
    private _validTo?;
    /**
     * @stability stable
     */
    get validTo(): string;
    /**
     * @stability stable
     */
    set validTo(value: string);
    /**
     * @stability stable
     */
    resetValidTo(): void;
    /**
     * @stability stable
     */
    get validToInput(): string | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Simple Storage Service.
 *
 * @stability stable
 */
export interface S3BucketOwnershipControlsConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket_ownership_controls.html#bucket S3BucketOwnershipControls#bucket}.
     *
     * @stability stable
     */
    readonly bucket: string;
    /**
     * rule block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket_ownership_controls.html#rule S3BucketOwnershipControls#rule}
     *
     * @stability stable
     */
    readonly rule: S3BucketOwnershipControlsRule;
}
/**
 * @stability stable
 */
export interface S3BucketOwnershipControlsRule {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket_ownership_controls.html#object_ownership S3BucketOwnershipControls#object_ownership}.
     *
     * @stability stable
     */
    readonly objectOwnership: string;
}
export declare function s3BucketOwnershipControlsRuleToTerraform(struct?: S3BucketOwnershipControlsRuleOutputReference | S3BucketOwnershipControlsRule): any;
/**
 * @stability stable
 */
export declare class S3BucketOwnershipControlsRuleOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): S3BucketOwnershipControlsRule | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: S3BucketOwnershipControlsRule | undefined);
    private _objectOwnership?;
    /**
     * @stability stable
     */
    get objectOwnership(): string;
    /**
     * @stability stable
     */
    set objectOwnership(value: string);
    /**
     * @stability stable
     */
    get objectOwnershipInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket_ownership_controls.html aws_s3_bucket_ownership_controls}.
 *
 * @stability stable
 */
export declare class S3BucketOwnershipControls extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/s3_bucket_ownership_controls.html aws_s3_bucket_ownership_controls} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: S3BucketOwnershipControlsConfig);
    private _bucket?;
    /**
     * @stability stable
     */
    get bucket(): string;
    /**
     * @stability stable
     */
    set bucket(value: string);
    /**
     * @stability stable
     */
    get bucketInput(): string | undefined;
    /**
     * @stability stable
     */
    get id(): string;
    private _rule;
    /**
     * @stability stable
     */
    get rule(): S3BucketOwnershipControlsRuleOutputReference;
    /**
     * @stability stable
     */
    putRule(value: S3BucketOwnershipControlsRule): void;
    /**
     * @stability stable
     */
    get ruleInput(): S3BucketOwnershipControlsRule | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}

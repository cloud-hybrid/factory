import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
/**
 * AWS Lex.
 *
 * @stability stable
 */
export interface LexBotConfig extends cdktf.TerraformMetaArguments {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#child_directed LexBot#child_directed}.
     *
     * @stability stable
     */
    readonly childDirected: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#create_version LexBot#create_version}.
     *
     * @stability stable
     */
    readonly createVersion?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#description LexBot#description}.
     *
     * @stability stable
     */
    readonly description?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#detect_sentiment LexBot#detect_sentiment}.
     *
     * @stability stable
     */
    readonly detectSentiment?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#enable_model_improvements LexBot#enable_model_improvements}.
     *
     * @stability stable
     */
    readonly enableModelImprovements?: boolean | cdktf.IResolvable;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#idle_session_ttl_in_seconds LexBot#idle_session_ttl_in_seconds}.
     *
     * @stability stable
     */
    readonly idleSessionTtlInSeconds?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#locale LexBot#locale}.
     *
     * @stability stable
     */
    readonly locale?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#name LexBot#name}.
     *
     * @stability stable
     */
    readonly name: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#nlu_intent_confidence_threshold LexBot#nlu_intent_confidence_threshold}.
     *
     * @stability stable
     */
    readonly nluIntentConfidenceThreshold?: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#process_behavior LexBot#process_behavior}.
     *
     * @stability stable
     */
    readonly processBehavior?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#voice_id LexBot#voice_id}.
     *
     * @stability stable
     */
    readonly voiceId?: string;
    /**
     * abort_statement block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#abort_statement LexBot#abort_statement}
     *
     * @stability stable
     */
    readonly abortStatement: LexBotAbortStatement;
    /**
     * clarification_prompt block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#clarification_prompt LexBot#clarification_prompt}
     *
     * @stability stable
     */
    readonly clarificationPrompt?: LexBotClarificationPrompt;
    /**
     * intent block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#intent LexBot#intent}
     *
     * @stability stable
     */
    readonly intent: LexBotIntent[];
    /**
     * timeouts block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#timeouts LexBot#timeouts}
     *
     * @stability stable
     */
    readonly timeouts?: LexBotTimeouts;
}
/**
 * @stability stable
 */
export interface LexBotAbortStatementMessage {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#content LexBot#content}.
     *
     * @stability stable
     */
    readonly content: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#content_type LexBot#content_type}.
     *
     * @stability stable
     */
    readonly contentType: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#group_number LexBot#group_number}.
     *
     * @stability stable
     */
    readonly groupNumber?: number;
}
export declare function lexBotAbortStatementMessageToTerraform(struct?: LexBotAbortStatementMessage): any;
/**
 * @stability stable
 */
export interface LexBotAbortStatement {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#response_card LexBot#response_card}.
     *
     * @stability stable
     */
    readonly responseCard?: string;
    /**
     * message block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#message LexBot#message}
     *
     * @stability stable
     */
    readonly message: LexBotAbortStatementMessage[];
}
export declare function lexBotAbortStatementToTerraform(struct?: LexBotAbortStatementOutputReference | LexBotAbortStatement): any;
/**
 * @stability stable
 */
export declare class LexBotAbortStatementOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): LexBotAbortStatement | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: LexBotAbortStatement | undefined);
    private _responseCard?;
    /**
     * @stability stable
     */
    get responseCard(): string;
    /**
     * @stability stable
     */
    set responseCard(value: string);
    /**
     * @stability stable
     */
    resetResponseCard(): void;
    /**
     * @stability stable
     */
    get responseCardInput(): string | undefined;
    private _message?;
    /**
     * @stability stable
     */
    get message(): LexBotAbortStatementMessage[];
    /**
     * @stability stable
     */
    set message(value: LexBotAbortStatementMessage[]);
    /**
     * @stability stable
     */
    get messageInput(): LexBotAbortStatementMessage[] | undefined;
}
/**
 * @stability stable
 */
export interface LexBotClarificationPromptMessage {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#content LexBot#content}.
     *
     * @stability stable
     */
    readonly content: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#content_type LexBot#content_type}.
     *
     * @stability stable
     */
    readonly contentType: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#group_number LexBot#group_number}.
     *
     * @stability stable
     */
    readonly groupNumber?: number;
}
export declare function lexBotClarificationPromptMessageToTerraform(struct?: LexBotClarificationPromptMessage): any;
/**
 * @stability stable
 */
export interface LexBotClarificationPrompt {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#max_attempts LexBot#max_attempts}.
     *
     * @stability stable
     */
    readonly maxAttempts: number;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#response_card LexBot#response_card}.
     *
     * @stability stable
     */
    readonly responseCard?: string;
    /**
     * message block.
     *
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#message LexBot#message}
     *
     * @stability stable
     */
    readonly message: LexBotClarificationPromptMessage[];
}
export declare function lexBotClarificationPromptToTerraform(struct?: LexBotClarificationPromptOutputReference | LexBotClarificationPrompt): any;
/**
 * @stability stable
 */
export declare class LexBotClarificationPromptOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): LexBotClarificationPrompt | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: LexBotClarificationPrompt | undefined);
    private _maxAttempts?;
    /**
     * @stability stable
     */
    get maxAttempts(): number;
    /**
     * @stability stable
     */
    set maxAttempts(value: number);
    /**
     * @stability stable
     */
    get maxAttemptsInput(): number | undefined;
    private _responseCard?;
    /**
     * @stability stable
     */
    get responseCard(): string;
    /**
     * @stability stable
     */
    set responseCard(value: string);
    /**
     * @stability stable
     */
    resetResponseCard(): void;
    /**
     * @stability stable
     */
    get responseCardInput(): string | undefined;
    private _message?;
    /**
     * @stability stable
     */
    get message(): LexBotClarificationPromptMessage[];
    /**
     * @stability stable
     */
    set message(value: LexBotClarificationPromptMessage[]);
    /**
     * @stability stable
     */
    get messageInput(): LexBotClarificationPromptMessage[] | undefined;
}
/**
 * @stability stable
 */
export interface LexBotIntent {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#intent_name LexBot#intent_name}.
     *
     * @stability stable
     */
    readonly intentName: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#intent_version LexBot#intent_version}.
     *
     * @stability stable
     */
    readonly intentVersion: string;
}
export declare function lexBotIntentToTerraform(struct?: LexBotIntent): any;
/**
 * @stability stable
 */
export interface LexBotTimeouts {
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#create LexBot#create}.
     *
     * @stability stable
     */
    readonly create?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#delete LexBot#delete}.
     *
     * @stability stable
     */
    readonly delete?: string;
    /**
     * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html#update LexBot#update}.
     *
     * @stability stable
     */
    readonly update?: string;
}
export declare function lexBotTimeoutsToTerraform(struct?: LexBotTimeoutsOutputReference | LexBotTimeouts): any;
/**
 * @stability stable
 */
export declare class LexBotTimeoutsOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
     * @param terraformResource The parent resource.
     * @param terraformAttribute The attribute on the parent resource this class is referencing.
     * @param isSingleItem True if this is a block, false if it's a list.
     * @stability stable
     */
    constructor(terraformResource: cdktf.ITerraformResource, terraformAttribute: string, isSingleItem: boolean);
    /**
     * @stability stable
     */
    get internalValue(): LexBotTimeouts | undefined;
    /**
     * @stability stable
     */
    set internalValue(value: LexBotTimeouts | undefined);
    private _create?;
    /**
     * @stability stable
     */
    get create(): string;
    /**
     * @stability stable
     */
    set create(value: string);
    /**
     * @stability stable
     */
    resetCreate(): void;
    /**
     * @stability stable
     */
    get createInput(): string | undefined;
    private _delete?;
    /**
     * @stability stable
     */
    get delete(): string;
    /**
     * @stability stable
     */
    set delete(value: string);
    /**
     * @stability stable
     */
    resetDelete(): void;
    /**
     * @stability stable
     */
    get deleteInput(): string | undefined;
    private _update?;
    /**
     * @stability stable
     */
    get update(): string;
    /**
     * @stability stable
     */
    set update(value: string);
    /**
     * @stability stable
     */
    resetUpdate(): void;
    /**
     * @stability stable
     */
    get updateInput(): string | undefined;
}
/**
 * Represents a {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html aws_lex_bot}.
 *
 * @stability stable
 */
export declare class LexBot extends cdktf.TerraformResource {
    /**
     * @stability stable
     */
    static readonly tfResourceType: string;
    /**
     * Create a new {@link https://www.terraform.io/docs/providers/aws/r/lex_bot.html aws_lex_bot} Resource.
     *
     * @param scope The scope in which to define this construct.
     * @param id The scoped construct ID.
     * @stability stable
     */
    constructor(scope: Construct, id: string, config: LexBotConfig);
    /**
     * @stability stable
     */
    get arn(): string;
    /**
     * @stability stable
     */
    get checksum(): string;
    private _childDirected?;
    /**
     * @stability stable
     */
    get childDirected(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set childDirected(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    get childDirectedInput(): boolean | cdktf.IResolvable | undefined;
    private _createVersion?;
    /**
     * @stability stable
     */
    get createVersion(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set createVersion(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetCreateVersion(): void;
    /**
     * @stability stable
     */
    get createVersionInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get createdDate(): string;
    private _description?;
    /**
     * @stability stable
     */
    get description(): string;
    /**
     * @stability stable
     */
    set description(value: string);
    /**
     * @stability stable
     */
    resetDescription(): void;
    /**
     * @stability stable
     */
    get descriptionInput(): string | undefined;
    private _detectSentiment?;
    /**
     * @stability stable
     */
    get detectSentiment(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set detectSentiment(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetDetectSentiment(): void;
    /**
     * @stability stable
     */
    get detectSentimentInput(): boolean | cdktf.IResolvable | undefined;
    private _enableModelImprovements?;
    /**
     * @stability stable
     */
    get enableModelImprovements(): boolean | cdktf.IResolvable;
    /**
     * @stability stable
     */
    set enableModelImprovements(value: boolean | cdktf.IResolvable);
    /**
     * @stability stable
     */
    resetEnableModelImprovements(): void;
    /**
     * @stability stable
     */
    get enableModelImprovementsInput(): boolean | cdktf.IResolvable | undefined;
    /**
     * @stability stable
     */
    get failureReason(): string;
    /**
     * @stability stable
     */
    get id(): string;
    private _idleSessionTtlInSeconds?;
    /**
     * @stability stable
     */
    get idleSessionTtlInSeconds(): number;
    /**
     * @stability stable
     */
    set idleSessionTtlInSeconds(value: number);
    /**
     * @stability stable
     */
    resetIdleSessionTtlInSeconds(): void;
    /**
     * @stability stable
     */
    get idleSessionTtlInSecondsInput(): number | undefined;
    /**
     * @stability stable
     */
    get lastUpdatedDate(): string;
    private _locale?;
    /**
     * @stability stable
     */
    get locale(): string;
    /**
     * @stability stable
     */
    set locale(value: string);
    /**
     * @stability stable
     */
    resetLocale(): void;
    /**
     * @stability stable
     */
    get localeInput(): string | undefined;
    private _name?;
    /**
     * @stability stable
     */
    get name(): string;
    /**
     * @stability stable
     */
    set name(value: string);
    /**
     * @stability stable
     */
    get nameInput(): string | undefined;
    private _nluIntentConfidenceThreshold?;
    /**
     * @stability stable
     */
    get nluIntentConfidenceThreshold(): number;
    /**
     * @stability stable
     */
    set nluIntentConfidenceThreshold(value: number);
    /**
     * @stability stable
     */
    resetNluIntentConfidenceThreshold(): void;
    /**
     * @stability stable
     */
    get nluIntentConfidenceThresholdInput(): number | undefined;
    private _processBehavior?;
    /**
     * @stability stable
     */
    get processBehavior(): string;
    /**
     * @stability stable
     */
    set processBehavior(value: string);
    /**
     * @stability stable
     */
    resetProcessBehavior(): void;
    /**
     * @stability stable
     */
    get processBehaviorInput(): string | undefined;
    /**
     * @stability stable
     */
    get status(): string;
    /**
     * @stability stable
     */
    get version(): string;
    private _voiceId?;
    /**
     * @stability stable
     */
    get voiceId(): string;
    /**
     * @stability stable
     */
    set voiceId(value: string);
    /**
     * @stability stable
     */
    resetVoiceId(): void;
    /**
     * @stability stable
     */
    get voiceIdInput(): string | undefined;
    private _abortStatement;
    /**
     * @stability stable
     */
    get abortStatement(): LexBotAbortStatementOutputReference;
    /**
     * @stability stable
     */
    putAbortStatement(value: LexBotAbortStatement): void;
    /**
     * @stability stable
     */
    get abortStatementInput(): LexBotAbortStatement | undefined;
    private _clarificationPrompt;
    /**
     * @stability stable
     */
    get clarificationPrompt(): LexBotClarificationPromptOutputReference;
    /**
     * @stability stable
     */
    putClarificationPrompt(value: LexBotClarificationPrompt): void;
    /**
     * @stability stable
     */
    resetClarificationPrompt(): void;
    /**
     * @stability stable
     */
    get clarificationPromptInput(): LexBotClarificationPrompt | undefined;
    private _intent?;
    /**
     * @stability stable
     */
    get intent(): LexBotIntent[];
    /**
     * @stability stable
     */
    set intent(value: LexBotIntent[]);
    /**
     * @stability stable
     */
    get intentInput(): LexBotIntent[] | undefined;
    private _timeouts;
    /**
     * @stability stable
     */
    get timeouts(): LexBotTimeoutsOutputReference;
    /**
     * @stability stable
     */
    putTimeouts(value: LexBotTimeouts): void;
    /**
     * @stability stable
     */
    resetTimeouts(): void;
    /**
     * @stability stable
     */
    get timeoutsInput(): LexBotTimeouts | undefined;
    /**
     * @stability stable
     */
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
